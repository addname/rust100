{"config":{"lang":["en"],"separator":"[\\s\\u200b\\u3000\\-\u3001\u3002\uff0c\uff0e\uff1f\uff01\uff1b]+","pipeline":["stemmer"]},"docs":[{"location":"","title":"\u9996\u9875","text":""},{"location":"#rust-100","title":"\u6b22\u8fce\u6765\u5230\u300aRust 100 \u95ee\u300b","text":"<p>\u4f60\u597d\uff0c\u6b22\u8fce\u6765\u5230\u300aRust 100 \u95ee\u300b\uff01</p> <p>\u672c\u4e66\u65e8\u5728\u901a\u8fc7\u4e00\u7cfb\u5217\u7cbe\u5fc3\u8bbe\u8ba1\u7684\u95ee\u7b54\uff0c\u5e2e\u52a9\u4f60\u7cfb\u7edf\u5730\u5b66\u4e60\u548c\u638c\u63e1 Rust \u7a0b\u5e8f\u8bbe\u8ba1\u8bed\u8a00\u3002\u65e0\u8bba\u4f60\u662f\u7f16\u7a0b\u65b0\u624b\uff0c\u8fd8\u662f\u6709\u7ecf\u9a8c\u7684\u5f00\u53d1\u8005\u5e0c\u671b\u5b66\u4e60\u4e00\u95e8\u65b0\u7684\u8bed\u8a00\uff0c\u8fd9\u91cc\u90fd\u80fd\u4e3a\u4f60\u63d0\u4f9b\u6e05\u6670\u3001\u51c6\u786e\u4e14\u7b26\u5408\u5b98\u65b9\u6587\u6863\u98ce\u683c\u7684\u6307\u5bfc\u3002</p>"},{"location":"#_1","title":"\u672c\u4e66\u7ed3\u6784","text":"<p>\u5168\u4e66\u5171\u5206\u4e3a\u4e03\u4e2a\u7ae0\u8282\uff0c\u5faa\u5e8f\u6e10\u8fdb\u5730\u8986\u76d6\u4e86\u4ece\u5165\u95e8\u5230\u9ad8\u7ea7\u7684\u5404\u4e2a\u4e3b\u9898\uff1a</p> <ul> <li>\u7b2c\u4e00\u7ae0\uff1a\u5165\u95e8\u4e0e\u57fa\u7840</li> <li>\u7b2c\u4e8c\u7ae0\uff1a\u6838\u5fc3\u6982\u5ff5\uff1a\u6240\u6709\u6743\u4e0e\u751f\u547d\u5468\u671f</li> <li>\u7b2c\u4e09\u7ae0\uff1a\u590d\u5408\u7c7b\u578b\u4e0e\u96c6\u5408</li> <li>\u7b2c\u56db\u7ae0\uff1a\u9ad8\u7ea7\u7279\u6027</li> <li>\u7b2c\u4e94\u7ae0\uff1a\u5e76\u53d1\u4e0e\u5f02\u6b65</li> <li>\u7b2c\u516d\u7ae0\uff1a\u9879\u76ee\u4e0e\u751f\u6001</li> <li>\u7b2c\u4e03\u7ae0\uff1a\u5de5\u7a0b\u4e0e\u8fdb\u9636\u4e13\u9898</li> </ul> <p>\u4f60\u53ef\u4ee5\u901a\u8fc7\u5de6\u4fa7\u7684\u5bfc\u822a\u680f\u9009\u62e9\u4f60\u611f\u5174\u8da3\u7684\u7ae0\u8282\u5f00\u59cb\u5b66\u4e60\u3002</p> <p>\u795d\u4f60\u5b66\u4e60\u6109\u5feb\uff01</p>"},{"location":"about/","title":"\u5173\u4e8e\u672c\u4e66","text":""},{"location":"about/#_2","title":"\u7f18\u8d77","text":"<p>\u300aRust 100 \u95ee\u300b\u662f\u4e00\u672c\u5f00\u6e90\u3001\u514d\u8d39\u7684 Rust \u8bed\u8a00\u5b66\u4e60\u6307\u5357\u3002</p> <p>\u521b\u5efa\u8fd9\u672c\u4e66\u7684\u521d\u8877\u662f\u4e3a\u4e86\u63d0\u4f9b\u4e00\u6761\u6e05\u6670\u3001\u5faa\u5e8f\u6e10\u8fdb\u7684\u5b66\u4e60\u8def\u5f84\u3002\u6211\u4eec\u6ce8\u610f\u5230\uff0c\u8bb8\u591a\u5f00\u53d1\u8005\u5728\u5b66\u4e60 Rust \u65f6\u4f1a\u88ab\u5176\u9661\u5ced\u7684\u5b66\u4e60\u66f2\u7ebf\u6240\u56f0\u6270\uff0c\u5c24\u5176\u662f\u5728\u6240\u6709\u6743\u3001\u751f\u547d\u5468\u671f\u548c\u5e76\u53d1\u7b49\u6838\u5fc3\u6982\u5ff5\u4e0a\u3002</p> <p>\u672c\u4e66\u901a\u8fc7\u201c\u4e00\u95ee\u4e00\u7b54\u201d\u7684\u5f62\u5f0f\uff0c\u5c06\u590d\u6742\u7684\u77e5\u8bc6\u70b9\u5206\u89e3\u6210\u4e00\u4e2a\u4e2a\u72ec\u7acb\u3001\u6613\u4e8e\u7406\u89e3\u7684\u5c0f\u6a21\u5757\u3002\u6211\u4eec\u5e0c\u671b\u8bfb\u8005\u53ef\u4ee5\u901a\u8fc7\u8fd9\u79cd\u65b9\u5f0f\uff0c\u50cf\u5b8c\u6210\u4efb\u52a1\u6e05\u5355\u4e00\u6837\uff0c\u9010\u4e2a\u653b\u514b Rust \u5b66\u4e60\u4e2d\u7684\u96be\u70b9\uff0c\u6700\u7ec8\u5efa\u7acb\u8d77\u5bf9\u8fd9\u95e8\u8bed\u8a00\u5168\u9762\u800c\u6df1\u523b\u7684\u7406\u89e3\u3002</p>"},{"location":"about/#_3","title":"\u6280\u672f\u6808","text":"<p>\u672c\u7f51\u7ad9\u4f7f\u7528\u4ee5\u4e0b\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\u6784\u5efa\uff1a</p> <ul> <li>MkDocs</li> <li>Material for MkDocs</li> </ul> <p>\u6211\u4eec\u5bf9\u8fd9\u4e9b\u9879\u76ee\u7684\u5f00\u53d1\u8005\u8868\u793a\u8877\u5fc3\u7684\u611f\u8c22\u3002</p> <p>\u5e0c\u671b\u8fd9\u672c\u4e66\u80fd\u5bf9\u4f60\u7684 Rust \u5b66\u4e60\u4e4b\u65c5\u6709\u6240\u5e2e\u52a9\uff01</p>"},{"location":"chapter1_basics/","title":"\u7b2c\u4e00\u7ae0\uff1a\u5165\u95e8\u4e0e\u57fa\u7840","text":"<p>\u672c\u7ae0\u6db5\u76d6\u4e86\u5f00\u59cb\u4f7f\u7528 Rust \u6240\u9700\u4e86\u89e3\u7684\u57fa\u7840\u77e5\u8bc6\uff0c\u5305\u62ec\u5b89\u88c5\u3001Cargo \u5de5\u5177\u3001\u57fa\u672c\u8bed\u6cd5\u548c\u63a7\u5236\u6d41\u3002</p> <p>\u63d0\u793a\uff1a\u5b89\u88c5\u4e0e\u9879\u76ee\u751f\u547d\u5468\u671f\u7b80\u56fe</p> <pre><code>flowchart LR\n  A[\u5b89\u88c5 rustup] --&gt; B[\u5b89\u88c5\u5de5\u5177\u94fe: stable/beta/nightly]\n  B --&gt; C[cargo new/init]\n  C --&gt; D[cargo build/check/run]\n  D --&gt; E[cargo test/doc]\n  E --&gt; F[cargo publish]</code></pre>"},{"location":"chapter1_basics/#1-rust","title":"1. \u5982\u4f55\u5728\u6211\u7684\u7535\u8111\u4e0a\u5b89\u88c5 Rust\uff1f","text":"<p>\u7b54\uff1a \u4f60\u53ef\u4ee5\u901a\u8fc7 <code>rustup</code> \u6765\u5b89\u88c5 Rust\uff0c\u5b83\u662f Rust \u7684\u5b98\u65b9\u5de5\u5177\u94fe\u7ba1\u7406\u5668\u3002</p> <p>\u5728 Linux \u6216 macOS \u4e0a\uff0c\u6253\u5f00\u7ec8\u7aef\u5e76\u8fd0\u884c\uff1a <pre><code>curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | sh\n</code></pre></p> <p>\u5728 Windows \u4e0a\uff0c\u8bbf\u95ee rust-lang.org \u5e76\u6309\u7167\u8bf4\u660e\u4e0b\u8f7d <code>rustup-init.exe</code> \u5e76\u8fd0\u884c\u5b83\u3002</p> <p>\u5b89\u88c5\u5b8c\u6210\u540e\uff0c\u901a\u8fc7\u8fd0\u884c <code>rustc --version</code> \u548c <code>cargo --version</code> \u6765\u9a8c\u8bc1\u5b89\u88c5\u662f\u5426\u6210\u529f\u3002</p>"},{"location":"chapter1_basics/#2-rustc-cargo","title":"2. <code>rustc</code> \u548c <code>cargo</code> \u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - <code>rustc</code> \u662f Rust \u7684\u7f16\u8bd1\u5668\u3002\u5b83\u8d1f\u8d23\u5c06\u4f60\u7684 <code>.rs</code> \u6e90\u4ee3\u7801\u6587\u4ef6\u7f16\u8bd1\u6210\u53ef\u6267\u884c\u6587\u4ef6\u3002\u4f60\u901a\u5e38\u5f88\u5c11\u76f4\u63a5\u4f7f\u7528\u5b83\u3002 - <code>cargo</code> \u662f Rust \u7684\u6784\u5efa\u7cfb\u7edf\u548c\u5305\u7ba1\u7406\u5668\u3002\u5b83\u662f\u4e00\u4e2a\u529f\u80fd\u5f3a\u5927\u7684\u5de5\u5177\uff0c\u53ef\u4ee5\u5904\u7406\u4f9d\u8d56\u7ba1\u7406\u3001\u7f16\u8bd1\u4ee3\u7801\u3001\u8fd0\u884c\u6d4b\u8bd5\u3001\u751f\u6210\u6587\u6863\u7b49\u3002\u5728\u5b9e\u9645\u9879\u76ee\u4e2d\uff0c\u4f60\u51e0\u4e4e\u603b\u662f\u901a\u8fc7 <code>cargo</code> \u6765\u5de5\u4f5c\u3002</p>"},{"location":"chapter1_basics/#3-rust","title":"3. \u5982\u4f55\u521b\u5efa\u4e00\u4e2a\u65b0\u7684 Rust \u9879\u76ee\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 Cargo\uff01\u5728\u7ec8\u7aef\u4e2d\u8fd0\u884c\u4ee5\u4e0b\u547d\u4ee4\uff1a <pre><code># \u521b\u5efa\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u9879\u76ee\ncargo new my_project\n\n# \u521b\u5efa\u4e00\u4e2a\u5e93\u9879\u76ee\ncargo new my_library --lib\n\n# \u5728\u73b0\u6709\u76ee\u5f55\u4e2d\u521d\u59cb\u5316\u9879\u76ee\ncd existing_folder\ncargo init\n\n# \u6307\u5b9a\u9879\u76ee\u540d\u79f0\u548c\u7248\u672c\ncargo new my_app --name \"awesome-app\"\n</code></pre> \u8fd9\u4f1a\u521b\u5efa\u4e00\u4e2a\u5305\u542b <code>Cargo.toml</code>\uff08\u914d\u7f6e\u6587\u4ef6\uff09\u548c <code>src/main.rs</code>\uff08\u6216 <code>src/lib.rs</code>\uff09\u6e90\u6587\u4ef6\u7684\u65b0\u76ee\u5f55\u3002</p> <p>\u751f\u6210\u7684\u9879\u76ee\u7ed3\u6784\uff1a <pre><code>my_project/\n\u251c\u2500\u2500 Cargo.toml\n\u251c\u2500\u2500 src/\n\u2502   \u2514\u2500\u2500 main.rs\n\u2514\u2500\u2500 .gitignore\n</code></pre></p>"},{"location":"chapter1_basics/#4-rust","title":"4. \u5982\u4f55\u7f16\u8bd1\u5e76\u8fd0\u884c\u6211\u7684 Rust \u7a0b\u5e8f\uff1f","text":"<p>\u7b54\uff1a \u5728\u4f60\u7684\u9879\u76ee\u76ee\u5f55\u4e2d\uff0c\u4f7f\u7528 <code>cargo run</code>\u3002\u8fd9\u4e2a\u547d\u4ee4\u4f1a\u5904\u7406\u6240\u6709\u4e8b\u60c5\uff1a 1.  \u5982\u679c\u9700\u8981\uff0c\u5b83\u4f1a\u5148\u7f16\u8bd1\u4f60\u7684\u4ee3\u7801\u3002 2.  \u7136\u540e\u8fd0\u884c\u751f\u6210\u7684\u53ef\u6267\u884c\u6587\u4ef6\u3002</p> <p><pre><code>cd my_project\ncargo run\n</code></pre> \u5982\u679c\u4f60\u53ea\u60f3\u7f16\u8bd1\u800c\u4e0d\u8fd0\u884c\uff0c\u4f7f\u7528 <code>cargo build</code>\u3002</p>"},{"location":"chapter1_basics/#5-cargotoml","title":"5. <code>Cargo.toml</code> \u6587\u4ef6\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f","text":"<p>\u7b54\uff1a <code>Cargo.toml</code> \u662f Cargo \u7684\u6e05\u5355\u6587\u4ef6\uff0c\u91c7\u7528 TOML \u683c\u5f0f\u3002\u5b83\u5305\u542b\u4e86\u9879\u76ee\u7684\u6240\u6709\u5143\u6570\u636e\u548c\u914d\u7f6e\uff1a</p> <pre><code>[package]\nname = \"my_project\"\nversion = \"0.1.0\"\nedition = \"2021\"\nauthors = [\"Your Name &lt;you@example.com&gt;\"]\ndescription = \"A sample Rust project\"\nlicense = \"MIT\"\n\n[dependencies]\nserde = { version = \"1.0\", features = [\"derive\"] }\ntokio = { version = \"1.0\", features = [\"full\"] }\n\n[dev-dependencies]\ncriterion = \"0.5\"\n\n[[bin]]\nname = \"main\"\npath = \"src/main.rs\"\n</code></pre> <p>\u4e3b\u8981\u914d\u7f6e\u6bb5\uff1a - <code>[package]</code>: \u9879\u76ee\u4fe1\u606f\uff0c\u5982\u540d\u79f0\u3001\u7248\u672c\u3001\u4f5c\u8005 - <code>[dependencies]</code>: \u9879\u76ee\u6240\u4f9d\u8d56\u7684\u5916\u90e8\u5e93\uff08crates\uff09 - <code>[dev-dependencies]</code>: \u5f00\u53d1\u548c\u6d4b\u8bd5\u65f6\u7684\u4f9d\u8d56 - <code>[[bin]]</code>: \u4e8c\u8fdb\u5236\u76ee\u6807\u914d\u7f6e</p>"},{"location":"chapter1_basics/#6-rust","title":"6. Rust \u4e2d\u7684\u53d8\u91cf\u9ed8\u8ba4\u662f\u53ef\u53d8\u7684\u8fd8\u662f\u4e0d\u53ef\u53d8\u7684\uff1f","text":"<p>\u7b54\uff1a \u9ed8\u8ba4\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u8fd9\u662f Rust \u5f3a\u8c03\u5b89\u5168\u6027\u7684\u4e00\u4e2a\u6838\u5fc3\u7279\u6027\u3002\u5982\u679c\u4f60\u60f3\u8ba9\u4e00\u4e2a\u53d8\u91cf\u53ef\u53d8\uff0c\u5fc5\u987b\u4f7f\u7528 <code>mut</code> \u5173\u952e\u5b57\u3002</p> <pre><code>fn main() {\n    let x = 5; // \u4e0d\u53ef\u53d8\n    let mut y = 10; // \u53ef\u53d8\n\n    println!(\"x = {}, y = {}\", x, y);\n\n    y = 15; // \u6b63\u786e\uff0cy \u662f\u53ef\u53d8\u7684\n    println!(\"\u73b0\u5728 y = {}\", y);\n\n    // x = 6; // \u7f16\u8bd1\u9519\u8bef\uff01\u4e0d\u80fd\u4fee\u6539\u4e0d\u53ef\u53d8\u53d8\u91cf\n\n    // \u53ef\u4ee5\u901a\u8fc7 shadowing \u91cd\u65b0\u5b9a\u4e49 x\n    let x = x + 1;\n    println!(\"\u901a\u8fc7 shadowing\uff0cx = {}\", x);\n\n    // \u751a\u81f3\u53ef\u4ee5\u6539\u53d8\u7c7b\u578b\n    let x = \"\u73b0\u5728\u662f\u5b57\u7b26\u4e32\";\n    println!(\"x = {}\", x);\n}\n</code></pre>"},{"location":"chapter1_basics/#7-rust","title":"7. Rust \u6709\u54ea\u4e9b\u57fa\u672c\u7684\u6807\u91cf\u7c7b\u578b\uff1f","text":"<p>\u7b54\uff1a Rust \u6709\u56db\u79cd\u4e3b\u8981\u7684\u6807\u91cf\u7c7b\u578b\uff1a</p> <pre><code>fn main() {\n    // \u6574\u6570\u7c7b\u578b\n    let decimal = 98_222;          // \u5341\u8fdb\u5236\n    let hex = 0xff;                // \u5341\u516d\u8fdb\u5236\n    let octal = 0o77;              // \u516b\u8fdb\u5236\n    let binary = 0b1111_0000;      // \u4e8c\u8fdb\u5236\n    let byte = b'A';               // \u5b57\u8282\uff08\u4ec5\u9650 u8\uff09\n\n    // \u663e\u5f0f\u7c7b\u578b\u6ce8\u89e3\n    let x: i32 = 42;\n    let y: u64 = 1000;\n\n    // \u6d6e\u70b9\u6570\u7c7b\u578b\n    let pi = 3.14159;              // f64\uff08\u9ed8\u8ba4\uff09\n    let e: f32 = 2.71828;          // f32\n\n    // \u5e03\u5c14\u503c\n    let is_rust_awesome = true;\n    let is_learning: bool = false;\n\n    // \u5b57\u7b26\u7c7b\u578b\uff08Unicode\uff09\n    let letter = 'A';\n    let emoji = '\ud83d\ude0a';\n    let chinese = '\u4e2d';\n\n    println!(\"\u6574\u6570: {}, {}, {}, {}, {}\", decimal, hex, octal, binary, byte);\n    println!(\"\u6d6e\u70b9\u6570: {}, {}\", pi, e);\n    println!(\"\u5e03\u5c14\u503c: {}, {}\", is_rust_awesome, is_learning);\n    println!(\"\u5b57\u7b26: {}, {}, {}\", letter, emoji, chinese);\n}\n</code></pre> <p>\u7c7b\u578b\u8be6\u89e3\uff1a - \u6574\u6570 (Integer): \u6709\u7b26\u53f7\uff08<code>i8</code>, <code>i16</code>, <code>i32</code>, <code>i64</code>, <code>i128</code>, <code>isize</code>\uff09\u548c\u65e0\u7b26\u53f7\uff08<code>u8</code>, <code>u16</code>, <code>u32</code>, <code>u64</code>, <code>u128</code>, <code>usize</code>\uff09 - \u6d6e\u70b9\u6570 (Floating-Point): <code>f32</code> \u548c <code>f64</code>\u3002<code>f64</code> \u662f\u9ed8\u8ba4\u7c7b\u578b\uff0c\u7cbe\u5ea6\u66f4\u9ad8 - \u5e03\u5c14\u503c (Boolean): <code>bool</code>\uff0c\u503c\u4e3a <code>true</code> \u6216 <code>false</code> - \u5b57\u7b26 (Character): <code>char</code>\uff0c\u8868\u793a\u4e00\u4e2a Unicode \u6807\u91cf\u503c\uff0c\u5927\u5c0f\u4e3a 4 \u4e2a\u5b57\u8282</p>"},{"location":"chapter1_basics/#8-str-string","title":"8. <code>&amp;str</code> \u548c <code>String</code> \u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a \u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u95ee\u9898\uff0c\u6d89\u53ca\u5230 Rust \u7684\u6240\u6709\u6743\u7cfb\u7edf\u3002 - <code>String</code>: \u4e00\u4e2a\u5728\u5806\u4e0a\u5206\u914d\u7684\u3001\u53ef\u589e\u957f\u7684\u3001\u53ef\u53d8\u7684 UTF-8 \u7f16\u7801\u5b57\u7b26\u4e32\u3002\u5f53\u4f60\u9700\u8981\u62e5\u6709\u5b57\u7b26\u4e32\u6570\u636e\u5e76\u53ef\u80fd\u4fee\u6539\u5b83\u65f6\u4f7f\u7528\u3002 - <code>&amp;str</code>: \u901a\u5e38\u79f0\u4e3a\u201c\u5b57\u7b26\u4e32\u5207\u7247\u201d\uff0c\u5b83\u662f\u4e00\u4e2a\u6307\u5411 <code>String</code> \u6216\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u4e2d\u4e00\u90e8\u5206\u6570\u636e\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\u3002\u5b83\u6ca1\u6709\u6240\u6709\u6743\uff0c\u53ea\u662f\u201c\u501f\u7528\u201d\u6570\u636e\u3002</p>"},{"location":"chapter1_basics/#9-rust","title":"9. \u5982\u4f55\u5728 Rust \u4e2d\u5b9a\u4e49\u4e00\u4e2a\u51fd\u6570\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>fn</code> \u5173\u952e\u5b57\u3002Rust \u4f7f\u7528 <code>snake_case</code> \u4f5c\u4e3a\u51fd\u6570\u540d\u7684\u7ea6\u5b9a\u3002\u5982\u679c\u51fd\u6570\u6709\u53c2\u6570\uff0c\u4f60\u9700\u8981\u663e\u5f0f\u5730\u58f0\u660e\u5b83\u4eec\u7684\u7c7b\u578b\u3002\u5982\u679c\u51fd\u6570\u8fd4\u56de\u503c\uff0c\u4f60\u9700\u8981\u4f7f\u7528 <code>-&gt;</code> \u6765\u6307\u5b9a\u8fd4\u56de\u7c7b\u578b\u3002</p> <pre><code>// \u6ca1\u6709\u53c2\u6570\uff0c\u6ca1\u6709\u8fd4\u56de\u503c\nfn say_hello() {\n    println!(\"Hello, Rust!\");\n}\n\n// \u6709\u53c2\u6570\uff0c\u6709\u8fd4\u56de\u503c\nfn add_one(x: i32) -&gt; i32 {\n    x + 1 // \u8868\u8fbe\u5f0f\u4f5c\u4e3a\u8fd4\u56de\u503c\uff0c\u6ce8\u610f\u6ca1\u6709\u5206\u53f7\n}\n\n// \u591a\u4e2a\u53c2\u6570\nfn calculate_area(width: u32, height: u32) -&gt; u32 {\n    width * height\n}\n\n// \u5e26\u6709\u9ed8\u8ba4\u53c2\u6570\u7684\u6a21\u62df\uff08\u901a\u8fc7\u91cd\u8f7d\u5b9e\u73b0\uff09\nfn greet_default() {\n    greet(\"World\");\n}\n\nfn greet(name: &amp;str) {\n    println!(\"Hello, {}!\", name);\n}\n\n// \u8fd4\u56de\u591a\u4e2a\u503c\uff08\u4f7f\u7528\u5143\u7ec4\uff09\nfn swap(x: i32, y: i32) -&gt; (i32, i32) {\n    (y, x)\n}\n\nfn main() {\n    say_hello();\n\n    let result = add_one(5);\n    println!(\"5 + 1 = {}\", result);\n\n    let area = calculate_area(10, 20);\n    println!(\"\u9762\u79ef = {}\", area);\n\n    greet_default();\n    greet(\"Rust\");\n\n    let (a, b) = swap(1, 2);\n    println!(\"\u4ea4\u6362\u540e: a = {}, b = {}\", a, b);\n}\n</code></pre>"},{"location":"chapter1_basics/#10-rust","title":"10. Rust \u51fd\u6570\u7684\u8fd4\u56de\u503c\u6709\u4ec0\u4e48\u7279\u522b\u4e4b\u5904\uff1f","text":"<p>\u7b54\uff1a Rust \u662f\u4e00\u4e2a\u57fa\u4e8e\u8868\u8fbe\u5f0f\u7684\u8bed\u8a00\u3002\u51fd\u6570\u4f53\u4e2d\u7684\u6700\u540e\u4e00\u4e2a\u8868\u8fbe\u5f0f\u4f1a\u81ea\u52a8\u6210\u4e3a\u51fd\u6570\u7684\u8fd4\u56de\u503c\uff0c\u524d\u63d0\u662f\u8be5\u8868\u8fbe\u5f0f\u540e\u9762\u6ca1\u6709\u5206\u53f7\u3002\u4f60\u4e5f\u53ef\u4ee5\u4f7f\u7528 <code>return</code> \u5173\u952e\u5b57\u63d0\u524d\u8fd4\u56de\u3002</p> <pre><code>fn five() -&gt; i32 {\n    5 // \u8fd4\u56de 5\n}\n\nfn ten() -&gt; i32 {\n    return 10; // \u4f7f\u7528 return \u5173\u952e\u5b57\uff0c\u6548\u679c\u76f8\u540c\n}\n</code></pre>"},{"location":"chapter1_basics/#11-rust-if","title":"11. Rust \u4e2d\u7684 <code>if</code> \u8bed\u53e5\u6709\u4ec0\u4e48\u4e0d\u540c\uff1f","text":"<p>\u7b54\uff1a <code>if</code> \u5728 Rust \u4e2d\u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u800c\u4e0d\u662f\u4e00\u4e2a\u8bed\u53e5\u3002\u8fd9\u610f\u5473\u7740 <code>if</code> \u53ef\u4ee5\u8fd4\u56de\u503c\uff0c\u4f60\u53ef\u4ee5\u7528\u5b83\u6765\u7ed9 <code>let</code> \u8bed\u53e5\u8d4b\u503c\u3002</p> <p><pre><code>let number = 6;\n\nif number % 4 == 0 {\n    println!(\"number is divisible by 4\");\n} else {\n    println!(\"number is not divisible by 4\");\n}\n\n// `if` \u4f5c\u4e3a\u8868\u8fbe\u5f0f\nlet condition = true;\nlet x = if condition { 5 } else { 6 }; // x \u7684\u503c\u5c06\u662f 5\n</code></pre> \u6ce8\u610f\uff1a <code>if</code> \u7684\u6bcf\u4e2a\u5206\u652f\u8fd4\u56de\u7684\u503c\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002</p>"},{"location":"chapter1_basics/#12-rust","title":"12. Rust \u6709\u54ea\u51e0\u79cd\u5faa\u73af\uff1f","text":"<p>\u7b54\uff1a Rust \u63d0\u4f9b\u4e86\u4e09\u79cd\u5faa\u73af\u7ed3\u6784\uff1a - <code>loop</code>: \u521b\u5efa\u4e00\u4e2a\u65e0\u9650\u5faa\u73af\uff0c\u4f60\u9700\u8981\u4f7f\u7528 <code>break</code> \u6765\u9000\u51fa\u3002 - <code>while</code>: \u5f53\u6761\u4ef6\u4e3a <code>true</code> \u65f6\u5faa\u73af\u3002 - <code>for</code>: \u904d\u5386\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u8fd9\u662f\u6700\u5e38\u7528\u548c\u6700\u5b89\u5168\u7684\u5faa\u73af\u65b9\u5f0f\u3002</p> <pre><code>fn main() {\n    // for \u5faa\u73af - \u904d\u5386\u6570\u7ec4\n    let a = [10, 20, 30, 40, 50];\n    for element in a.iter() {\n        println!(\"\u6570\u7ec4\u5143\u7d20: {}\", element);\n    }\n\n    // \u904d\u5386\u6570\u7ec4\u5e76\u83b7\u53d6\u7d22\u5f15\n    for (index, value) in a.iter().enumerate() {\n        println!(\"\u7d22\u5f15 {}: \u503c {}\", index, value);\n    }\n\n    // \u904d\u5386\u8303\u56f4\n    for number in 1..4 { // \u4e0d\u5305\u62ec 4\n        println!(\"\u6570\u5b57: {}!\", number);\n    }\n\n    // \u5305\u542b\u7ed3\u675f\u503c\u7684\u8303\u56f4\n    for number in 1..=3 { // \u5305\u62ec 3\n        println!(\"\u5305\u542b\u8303\u56f4: {}\", number);\n    }\n\n    // while \u5faa\u73af\n    let mut counter = 0;\n    while counter &lt; 3 {\n        println!(\"\u8ba1\u6570\u5668: {}\", counter);\n        counter += 1;\n    }\n\n    // loop \u65e0\u9650\u5faa\u73af\n    let mut x = 0;\n    let result = loop {\n        x += 1;\n        if x == 10 {\n            break x * 2; // \u4ece loop \u4e2d\u8fd4\u56de\u503c\n        }\n    };\n    println!(\"\u5faa\u73af\u7ed3\u679c: {}\", result);\n\n    // \u5e26\u6807\u7b7e\u7684\u5faa\u73af\n    'outer: loop {\n        println!(\"\u5916\u5c42\u5faa\u73af\");\n\n        'inner: loop {\n            println!(\"\u5185\u5c42\u5faa\u73af\");\n            break 'outer; // \u8df3\u51fa\u5916\u5c42\u5faa\u73af\n        }\n    }\n}\n</code></pre>"},{"location":"chapter1_basics/#13-isize-usize","title":"13. \u4ec0\u4e48\u662f <code>isize</code> \u548c <code>usize</code>\uff1f","text":"<p>\u7b54\uff1a \u5b83\u4eec\u662f\u201c\u6307\u9488\u5927\u5c0f\u201d\u7684\u6574\u6570\u7c7b\u578b\u3002 - <code>usize</code>: \u65e0\u7b26\u53f7\u6574\u6570\uff0c\u5176\u5927\u5c0f\u4e0e\u8ba1\u7b97\u673a\u7684\u6307\u9488\u5927\u5c0f\u76f8\u540c\u3002\u5728 64 \u4f4d\u7cfb\u7edf\u4e0a\u662f 64 \u4f4d\uff0c\u5728 32 \u4f4d\u7cfb\u7edf\u4e0a\u662f 32 \u4f4d\u3002\u5b83\u4e3b\u8981\u7528\u4e8e\u7d22\u5f15\u96c6\u5408\u3002 - <code>isize</code>: \u6709\u7b26\u53f7\u6574\u6570\uff0c\u5927\u5c0f\u4e0e\u6307\u9488\u76f8\u540c\u3002</p> <p>\u5f53\u4f60\u9700\u8981\u7d22\u5f15\u6570\u7ec4\u6216 <code>Vector</code> \u65f6\uff0c\u5e94\u8be5\u4f7f\u7528 <code>usize</code>\u3002</p>"},{"location":"chapter1_basics/#14-rust","title":"14. \u5982\u4f55\u5728 Rust \u4e2d\u5199\u6ce8\u91ca\uff1f","text":"<p>\u7b54\uff1a - \u884c\u6ce8\u91ca: <code>//</code>\uff0c\u6ce8\u91ca\u5230\u884c\u5c3e\u3002 - \u5757\u6ce8\u91ca: <code>/* ... */</code>\uff0c\u53ef\u4ee5\u8de8\u8d8a\u591a\u884c\u3002 - \u6587\u6863\u6ce8\u91ca: <code>///</code> \u6216 <code>//!</code>\uff0c\u7528\u4e8e\u751f\u6210 HTML \u6587\u6863\u3002<code>///</code> \u6ce8\u91ca\u5b83\u540e\u9762\u7684\u9879\uff0c<code>//!</code> \u6ce8\u91ca\u5305\u542b\u5b83\u7684\u9879\uff08\u901a\u5e38\u662f\u6a21\u5757\u6216 crate\uff09\u3002</p> <pre><code>// \u8fd9\u662f\u4e00\u4e2a\u884c\u6ce8\u91ca\n\n/*\n  \u8fd9\u662f\u4e00\u4e2a\n  \u591a\u884c\u5757\u6ce8\u91ca\n*/\n\n/// \u8fd9\u662f\u4e00\u4e2a\u6587\u6863\u6ce8\u91ca\uff0c\u7528\u4e8e\u63cf\u8ff0\u4e0b\u9762\u7684\u51fd\u6570\nfn my_function() {}\n</code></pre>"},{"location":"chapter1_basics/#15-rust-tuple","title":"15. Rust \u4e2d\u7684\u5143\u7ec4 (Tuple) \u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a \u5143\u7ec4\u662f\u4e00\u79cd\u5c06\u591a\u4e2a\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u7ec4\u5408\u6210\u4e00\u4e2a\u590d\u5408\u7c7b\u578b\u7684\u65b9\u5f0f\u3002\u5143\u7ec4\u7684\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u4e00\u65e6\u58f0\u660e\u5c31\u65e0\u6cd5\u6539\u53d8\u3002</p> <pre><code>fn main() {\n    // \u521b\u5efa\u5143\u7ec4\n    let tup: (i32, f64, u8) = (500, 6.4, 1);\n\n    // \u89e3\u6784\u5143\u7ec4\n    let (x, y, z) = tup;\n    println!(\"\u89e3\u6784\u540e: x={}, y={}, z={}\", x, y, z);\n\n    // \u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\n    let five_hundred = tup.0;\n    let six_point_four = tup.1;\n    let one = tup.2;\n    println!(\"\u7d22\u5f15\u8bbf\u95ee: {}, {}, {}\", five_hundred, six_point_four, one);\n\n    // \u5355\u5143\u5143\u7ec4\uff08\u7a7a\u5143\u7ec4\uff09\n    let unit = ();\n    println!(\"\u5355\u5143\u7c7b\u578b: {:?}\", unit);\n\n    // \u4e0d\u540c\u7c7b\u578b\u7684\u5143\u7ec4\n    let mixed = (\"hello\", 42, true, 3.14);\n    println!(\"\u6df7\u5408\u7c7b\u578b\u5143\u7ec4: {:?}\", mixed);\n\n    // \u5d4c\u5957\u5143\u7ec4\n    let nested = ((1, 2), (3, 4));\n    println!(\"\u5d4c\u5957\u5143\u7ec4: {:?}\", nested);\n    println!(\"\u8bbf\u95ee\u5d4c\u5957\u5143\u7d20: {}\", (nested.0).1); // \u8f93\u51fa 2\n\n    // \u5143\u7ec4\u4f5c\u4e3a\u51fd\u6570\u8fd4\u56de\u503c\n    let coords = get_coordinates();\n    println!(\"\u5750\u6807: ({}, {})\", coords.0, coords.1);\n}\n\nfn get_coordinates() -&gt; (i32, i32) {\n    (10, 20)\n}\n</code></pre>"},{"location":"chapter1_basics/#16-rust-array","title":"16. Rust \u4e2d\u7684\u6570\u7ec4 (Array) \u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a \u6570\u7ec4\u4e5f\u662f\u4e00\u79cd\u5c06\u591a\u4e2a\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u7684\u65b9\u5f0f\uff0c\u4f46\u4e0e\u5143\u7ec4\u4e0d\u540c\uff0c\u6570\u7ec4\u4e2d\u7684\u6bcf\u4e2a\u5143\u7d20\u7684\u7c7b\u578b\u5fc5\u987b\u76f8\u540c\u3002Rust \u4e2d\u7684\u6570\u7ec4\u957f\u5ea6\u662f\u56fa\u5b9a\u7684\uff0c\u5b58\u50a8\u5728\u6808\u4e0a\u3002</p> <pre><code>fn main() {\n    // \u57fa\u672c\u6570\u7ec4\u5b9a\u4e49\n    let a = [1, 2, 3, 4, 5]; // \u7f16\u8bd1\u5668\u81ea\u52a8\u63a8\u65ad\u7c7b\u578b\u548c\u957f\u5ea6\n    let months: [&amp;str; 12] = [\n        \"January\", \"February\", \"March\", \"April\", \"May\", \"June\",\n        \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"\n    ];\n\n    // \u521d\u59cb\u5316\u76f8\u540c\u503c\u7684\u6570\u7ec4\n    let zeros = [0; 5]; // [0, 0, 0, 0, 0]\n    let threes = [3; 4]; // [3, 3, 3, 3]\n\n    // \u8bbf\u95ee\u5143\u7d20\n    let first = a[0];\n    let second = a[1];\n    println!(\"\u7b2c\u4e00\u4e2a\u5143\u7d20: {}, \u7b2c\u4e8c\u4e2a\u5143\u7d20: {}\", first, second);\n\n    // \u6570\u7ec4\u957f\u5ea6\n    println!(\"\u6570\u7ec4 a \u7684\u957f\u5ea6: {}\", a.len());\n    println!(\"\u6570\u7ec4 months \u7684\u957f\u5ea6: {}\", months.len());\n\n    // \u904d\u5386\u6570\u7ec4\n    println!(\"\u904d\u5386\u6570\u7ec4 a:\");\n    for element in &amp;a {\n        println!(\"  {}\", element);\n    }\n\n    // \u4f7f\u7528\u7d22\u5f15\u904d\u5386\n    println!(\"\u4f7f\u7528\u7d22\u5f15\u904d\u5386:\");\n    for i in 0..a.len() {\n        println!(\"  a[{}] = {}\", i, a[i]);\n    }\n\n    // \u6570\u7ec4\u5207\u7247\n    let slice = &amp;a[1..4]; // [2, 3, 4]\n    println!(\"\u5207\u7247: {:?}\", slice);\n\n    // \u591a\u7ef4\u6570\u7ec4\n    let matrix: [[i32; 3]; 2] = [[1, 2, 3], [4, 5, 6]];\n    println!(\"\u77e9\u9635: {:?}\", matrix);\n    println!(\"\u77e9\u9635\u5143\u7d20 [1][2]: {}\", matrix[1][2]);\n}\n</code></pre>"},{"location":"chapter1_basics/#17","title":"17. \u4ec0\u4e48\u662f\u8868\u8fbe\u5f0f\u548c\u8bed\u53e5\uff1f","text":"<p>\u7b54\uff1a - \u8bed\u53e5 (Statements): \u662f\u6267\u884c\u67d0\u4e9b\u64cd\u4f5c\u4f46\u4e0d\u8fd4\u56de\u503c\u7684\u6307\u4ee4\u3002\u4f8b\u5982\uff0c<code>let x = 5;</code> \u662f\u4e00\u4e2a\u8bed\u53e5\u3002 - \u8868\u8fbe\u5f0f (Expressions): \u4f1a\u8ba1\u7b97\u5e76\u4ea7\u751f\u4e00\u4e2a\u503c\u3002\u4f8b\u5982\uff0c<code>5 + 6</code> \u662f\u4e00\u4e2a\u8868\u8fbe\u5f0f\uff0c\u5b83\u7684\u503c\u4e3a <code>11</code>\u3002<code>if</code>\u3001\u51fd\u6570\u8c03\u7528\u7b49\u90fd\u662f\u8868\u8fbe\u5f0f\u3002</p> <p>\u5728 Rust \u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u91cd\u8981\u7684\u533a\u522b\u3002\u4f8b\u5982\uff0c\u4f60\u4e0d\u80fd\u5199 <code>let x = (let y = 6);</code> \u56e0\u4e3a <code>let y = 6</code> \u662f\u4e00\u4e2a\u8bed\u53e5\uff0c\u4e0d\u8fd4\u56de\u503c\u3002</p>"},{"location":"chapter1_basics/#18-cargo-check","title":"18. <code>cargo check</code> \u547d\u4ee4\u6709\u4ec0\u4e48\u7528\uff1f","text":"<p>\u7b54\uff1a <code>cargo check</code> \u662f\u4e00\u4e2a\u975e\u5e38\u6709\u7528\u7684\u547d\u4ee4\u3002\u5b83\u4f1a\u5feb\u901f\u68c0\u67e5\u4f60\u7684\u4ee3\u7801\u4ee5\u786e\u4fdd\u5b83\u53ef\u4ee5\u901a\u8fc7\u7f16\u8bd1\uff0c\u4f46\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u53ef\u6267\u884c\u6587\u4ef6\u3002\u8fd9\u6bd4 <code>cargo build</code> \u5feb\u5f97\u591a\uff0c\u56e0\u4e3a\u4ed6\u8df3\u8fc7\u4e86\u4ee3\u7801\u751f\u6210\u9636\u6bb5\u3002</p> <p>\u5728\u4f60\u7f16\u7801\u8fc7\u7a0b\u4e2d\uff0c\u53ef\u4ee5\u9891\u7e41\u4f7f\u7528 <code>cargo check</code> \u6765\u5feb\u901f\u9a8c\u8bc1\u4f60\u7684\u4ee3\u7801\u8bed\u6cd5\u548c\u7c7b\u578b\u662f\u5426\u6b63\u786e\u3002</p>"},{"location":"chapter1_basics/#19-rust","title":"19. Rust \u5982\u4f55\u5904\u7406\u6574\u6570\u6ea2\u51fa\uff1f","text":"<p>\u7b54\uff1a \u8fd9\u53d6\u51b3\u4e8e\u6784\u5efa\u6a21\u5f0f\uff1a - Debug \u6a21\u5f0f (\u9ed8\u8ba4): \u5982\u679c\u53d1\u751f\u6574\u6570\u6ea2\u51fa\uff0cRust \u4f1a <code>panic</code>\uff08\u7a0b\u5e8f\u5d29\u6e83\uff09\u3002\u8fd9\u6709\u52a9\u4e8e\u5728\u5f00\u53d1\u9636\u6bb5\u5c3d\u65e9\u53d1\u73b0 bug\u3002 - Release \u6a21\u5f0f (<code>--release</code>): \u5982\u679c\u53d1\u751f\u6574\u6570\u6ea2\u51fa\uff0cRust \u4f1a\u6267\u884c\u201c\u73af\u7ed5\u201d\uff08two's complement wrapping\uff09\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a <code>u8</code> \u7684\u503c <code>255</code> \u518d\u52a0 <code>1</code> \u4f1a\u53d8\u6210 <code>0</code>\u3002</p> <p>\u5982\u679c\u4f60\u5e0c\u671b\u660e\u786e\u5904\u7406\u6ea2\u51fa\uff0c\u53ef\u4ee5\u4f7f\u7528\u6807\u51c6\u5e93\u63d0\u4f9b\u7684 <code>wrapping_*</code>\u3001<code>checked_*</code>\u3001<code>overflowing_*</code> \u548c <code>saturating_*</code> \u7cfb\u5217\u65b9\u6cd5\u3002</p>"},{"location":"chapter1_basics/#20-shadowing","title":"20. \u4ec0\u4e48\u662f shadowing (\u53d8\u91cf\u906e\u853d)\uff1f","text":"<p>\u7b54\uff1a \u5728 Rust \u4e2d\uff0c\u4f60\u53ef\u4ee5\u58f0\u660e\u4e00\u4e2a\u4e0e\u4e4b\u524d\u53d8\u91cf\u540c\u540d\u7684\u65b0\u53d8\u91cf\u3002\u8fd9\u4e2a\u65b0\u53d8\u91cf\u4f1a\u201c\u906e\u853d\u201d\u524d\u4e00\u4e2a\u53d8\u91cf\u3002\u8fd9\u5141\u8bb8\u4f60\u91cd\u590d\u4f7f\u7528\u4e00\u4e2a\u66f4\u6709\u610f\u4e49\u7684\u53d8\u91cf\u540d\uff0c\u751a\u81f3\u6539\u53d8\u5b83\u7684\u7c7b\u578b\u3002</p> <p><pre><code>let x = 5;\n\n// \u5728\u5185\u90e8\u4f5c\u7528\u57df\u4e2d\u906e\u853d x\nlet x = x + 1; \n\n{\n    // \u5728\u8fd9\u4e2a\u4f5c\u7528\u57df\u5185\u518d\u6b21\u906e\u853d\n    let x = x * 2;\n    println!(\"The value of x in the inner scope is: {}\", x); // \u6253\u5370 12\n}\n\nprintln!(\"The value of x is: {}\", x); // \u6253\u5370 6\n</code></pre> \u8fd9\u4e0e\u5c06\u53d8\u91cf\u6807\u8bb0\u4e3a <code>mut</code> \u662f\u4e0d\u540c\u7684\uff0c\u56e0\u4e3a\u906e\u853d\u5b9e\u9645\u4e0a\u662f\u521b\u5efa\u4e86\u4e00\u4e2a\u5168\u65b0\u7684\u53d8\u91cf\u3002</p>"},{"location":"chapter2_ownership/","title":"\u7b2c\u4e8c\u7ae0\uff1a\u6838\u5fc3\u6982\u5ff5\uff1a\u6240\u6709\u6743\u4e0e\u751f\u547d\u5468\u671f","text":"<p>\u6240\u6709\u6743\u662f Rust \u6700\u72ec\u7279\u7684\u529f\u80fd\uff0c\u5b83\u4f7f Rust \u80fd\u591f\u5728\u6ca1\u6709\u5783\u573e\u56de\u6536\u5668\u7684\u60c5\u51b5\u4e0b\u4fdd\u8bc1\u5185\u5b58\u5b89\u5168\u3002\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u6240\u6709\u6743\u3001\u501f\u7528\u3001\u5207\u7247\u548c\u751f\u547d\u5468\u671f\u8fd9\u4e9b\u6838\u5fc3\u6982\u5ff5\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u6240\u6709\u6743/\u501f\u7528/\u751f\u547d\u5468\u671f\u5173\u7cfb</p> <pre><code>flowchart TD\n  A[\u503c Value] --&gt;|owned by| O1[\u6240\u6709\u8005 Owner]\n  O1 --&gt;|move| O2[\u65b0\u6240\u6709\u8005]\n  O1 -.-&gt;|drop when out of scope| D[(\u91ca\u653e\u5185\u5b58)]\n  O2 --&gt; B1[&amp;T \u4e0d\u53ef\u53d8\u501f\u7528]\n  O2 --&gt; B2[&amp;mut T \u53ef\u53d8\u501f\u7528]\n  subgraph \u751f\u547d\u5468\u671f\n    B1 --&gt; L1[\u5f15\u7528\u4e0d\u8d85\u8fc7\u88ab\u501f\u7528\u8005]\n    B2 --&gt; L1\n  end</code></pre>"},{"location":"chapter2_ownership/#21-ownership","title":"21. \u4ec0\u4e48\u662f\u6240\u6709\u6743 (Ownership)\uff1f","text":"<p>\u7b54\uff1a \u6240\u6709\u6743\u662f Rust \u7528\u6765\u7ba1\u7406\u5185\u5b58\u7684\u4e00\u5957\u89c4\u5219\u3002\u5b83\u89e3\u51b3\u4e86\u201c\u8c01\u62e5\u6709\u54ea\u5757\u5185\u5b58\uff1f\u201d\u4ee5\u53ca\u201c\u8fd9\u5757\u5185\u5b58\u4f55\u65f6\u53ef\u4ee5\u88ab\u91ca\u653e\uff1f\u201d\u8fd9\u4e24\u4e2a\u6838\u5fc3\u95ee\u9898\u3002\u6240\u6709\u6743\u9075\u5faa\u4e09\u4e2a\u57fa\u672c\u89c4\u5219\uff1a 1.  Rust \u4e2d\u7684\u6bcf\u4e00\u4e2a\u503c\u90fd\u6709\u4e00\u4e2a\u88ab\u79f0\u4e3a\u5176\u6240\u6709\u8005 (owner) \u7684\u53d8\u91cf\u3002 2.  \u503c\u5728\u4efb\u4e00\u65f6\u523b\u6709\u4e14\u53ea\u6709\u4e00\u4e2a\u6240\u6709\u8005\u3002 3.  \u5f53\u6240\u6709\u8005\uff08\u53d8\u91cf\uff09\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u8fd9\u4e2a\u503c\u5c06\u88ab\u4e22\u5f03 (dropped)\uff0c\u5176\u5360\u7528\u7684\u5185\u5b58\u4f1a\u88ab\u91ca\u653e\u3002</p>"},{"location":"chapter2_ownership/#22-stack-heap","title":"22. \u4ec0\u4e48\u662f\u6808 (Stack) \u548c\u5806 (Heap)\uff1f","text":"<p>\u7b54\uff1a - \u6808 (Stack): \u7528\u4e8e\u5b58\u50a8\u5927\u5c0f\u5df2\u77e5\u4e14\u56fa\u5b9a\u7684\u6570\u636e\u3002\u5b83\u901f\u5ea6\u5feb\uff0c\u4ee5\u201c\u540e\u8fdb\u5148\u51fa\u201d\u7684\u65b9\u5f0f\u7ec4\u7ec7\u6570\u636e\u3002\u51fd\u6570\u8c03\u7528\u3001\u5c40\u90e8\u53d8\u91cf\uff08\u5982 <code>i32</code>, <code>bool</code>\uff09\u901a\u5e38\u5b58\u50a8\u5728\u6808\u4e0a\u3002 - \u5806 (Heap): \u7528\u4e8e\u5b58\u50a8\u5728\u7f16\u8bd1\u65f6\u5927\u5c0f\u672a\u77e5\u6216\u53ef\u80fd\u53d8\u5316\u7684\u6570\u636e\u3002\u64cd\u4f5c\u7cfb\u7edf\u5728\u5806\u7684\u67d0\u5904\u627e\u5230\u4e00\u5757\u8db3\u591f\u5927\u7684\u7a7a\u4f4d\uff0c\u628a\u5b83\u6807\u8bb0\u4e3a\u5df2\u4f7f\u7528\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u8868\u793a\u8be5\u4f4d\u7f6e\u5730\u5740\u7684\u6307\u9488 (pointer)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u201c\u5728\u5806\u4e0a\u5206\u914d\u5185\u5b58\u201d\u3002\u5b83\u6bd4\u8bbf\u95ee\u6808\u8981\u6162\u3002<code>String</code>\u3001<code>Vec&lt;T&gt;</code> \u7b49\u7c7b\u578b\u7684\u6570\u636e\u5b58\u50a8\u5728\u5806\u4e0a\u3002</p> <p>\u6240\u6709\u6743\u7cfb\u7edf\u4e3b\u8981\u5c31\u662f\u4e3a\u4e86\u7ba1\u7406\u5806\u5185\u5b58\u3002</p>"},{"location":"chapter2_ownership/#23-move","title":"23. \u79fb\u52a8 (Move) \u662f\u4ec0\u4e48\u610f\u601d\uff1f","text":"<p>\u7b54\uff1a \u5bf9\u4e8e\u5b58\u50a8\u5728\u5806\u4e0a\u7684\u6570\u636e\uff08\u5982 <code>String</code>\uff09\uff0c\u5f53\u6211\u4eec\u5c06\u5b83\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u6240\u6709\u6743\u4f1a\u53d1\u751f\u8f6c\u79fb (transfer)\uff0c\u6211\u4eec\u79f0\u4e4b\u4e3a\u201c\u79fb\u52a8 (move)\u201d\u3002</p> <p><pre><code>fn main() {\n    let s1 = String::from(\"hello\");\n    println!(\"s1 \u521b\u5efa\u540e: {}\", s1);\n\n    let s2 = s1; // s1 \u7684\u6240\u6709\u6743\u88ab\u79fb\u52a8\u5230 s2\n    println!(\"\u79fb\u52a8\u540e s2: {}\", s2);\n\n    // println!(\"{}, world!\", s1); // \u7f16\u8bd1\u9519\u8bef\uff01s1 \u4e0d\u518d\u6709\u6548\n\n    // \u5982\u679c\u60f3\u8981\u590d\u5236\u800c\u4e0d\u662f\u79fb\u52a8\uff0c\u53ef\u4ee5\u4f7f\u7528 clone\n    let s3 = String::from(\"world\");\n    let s4 = s3.clone(); // \u6df1\u62f7\u8d1d\n    println!(\"s3: {}, s4: {}\", s3, s4); // \u4e24\u4e2a\u90fd\u6709\u6548\n\n    // \u6f14\u793a\u79fb\u52a8\u540e\u7684\u53d8\u91cf\u72b6\u6001\n    demonstrate_move();\n}\n\nfn demonstrate_move() {\n    let original = String::from(\"I will be moved\");\n    let moved_to = take_ownership(original);\n\n    // println!(\"{}\", original); // \u7f16\u8bd1\u9519\u8bef\uff1aoriginal \u5df2\u88ab\u79fb\u52a8\n    println!(\"\u51fd\u6570\u8fd4\u56de: {}\", moved_to);\n}\n\nfn take_ownership(s: String) -&gt; String {\n    println!(\"\u51fd\u6570\u5185\u90e8: {}\", s);\n    s // \u8fd4\u56de\u6240\u6709\u6743\n}\n</code></pre> \u4e3a\u4e86\u4fdd\u8bc1\u5185\u5b58\u5b89\u5168\uff08\u9632\u6b62\u4e8c\u6b21\u91ca\u653e\uff09\uff0c\u4e00\u65e6\u6240\u6709\u6743\u8f6c\u79fb\uff0c\u539f\u6765\u7684\u53d8\u91cf\uff08<code>s1</code>\uff09\u5c31\u4e0d\u80fd\u518d\u88ab\u4f7f\u7528\u3002</p>"},{"location":"chapter2_ownership/#24-copy","title":"24. \u590d\u5236 (Copy) \u662f\u4ec0\u4e48\u610f\u601d\uff1f","text":"<p>\u7b54\uff1a \u5bf9\u4e8e\u5b8c\u5168\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u6570\u636e\uff08\u5982 <code>i32</code>, <code>bool</code>, <code>char</code> \u7b49\u57fa\u672c\u7c7b\u578b\uff09\uff0c\u5f53\u6211\u4eec\u5c06\u5b83\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\u65f6\uff0c\u4f1a\u521b\u5efa\u4e00\u4e2a\u5b8c\u6574\u7684\u526f\u672c\u3002\u8fd9\u88ab\u79f0\u4e3a\u201c\u590d\u5236 (copy)\u201d\u3002</p> <p><pre><code>fn main() {\n    // \u57fa\u672c\u7c7b\u578b\u7684\u590d\u5236\n    let x = 5;\n    let y = x; // x \u7684\u503c\u88ab\u590d\u5236\u5230 y\n    println!(\"\u590d\u5236\u540e: x = {}, y = {}\", x, y); // \u6b63\u786e\uff01x \u548c y \u90fd\u6709\u6548\n\n    // \u591a\u79cd Copy \u7c7b\u578b\u793a\u4f8b\n    let a = 42;\n    let b = true;\n    let c = 3.14;\n    let d = 'R';\n\n    let a2 = a; // \u590d\u5236\n    let b2 = b; // \u590d\u5236\n    let c2 = c; // \u590d\u5236\n    let d2 = d; // \u590d\u5236\n\n    println!(\"\u539f\u59cb\u503c\u4ecd\u7136\u6709\u6548:\");\n    println!(\"a = {}, b = {}, c = {}, d = {}\", a, b, c, d);\n    println!(\"\u590d\u5236\u7684\u503c:\");\n    println!(\"a2 = {}, b2 = {}, c2 = {}, d2 = {}\", a2, b2, c2, d2);\n\n    // \u5143\u7ec4\u7684\u590d\u5236\uff08\u5982\u679c\u6240\u6709\u5143\u7d20\u90fd\u5b9e\u73b0\u4e86 Copy\uff09\n    let tuple1 = (1, 2, 3);\n    let tuple2 = tuple1; // \u590d\u5236\n    println!(\"tuple1: {:?}, tuple2: {:?}\", tuple1, tuple2);\n\n    // \u6570\u7ec4\u7684\u590d\u5236\uff08\u5982\u679c\u5143\u7d20\u5b9e\u73b0\u4e86 Copy \u4e14\u957f\u5ea6\u9002\u4e2d\uff09\n    let arr1 = [1, 2, 3, 4, 5];\n    let arr2 = arr1; // \u590d\u5236\n    println!(\"arr1: {:?}, arr2: {:?}\", arr1, arr2);\n\n    demonstrate_copy_in_functions();\n}\n\nfn demonstrate_copy_in_functions() {\n    let num = 100;\n    let result = square(num);\n    println!(\"\u539f\u59cb\u503c {} \u5728\u51fd\u6570\u8c03\u7528\u540e\u4ecd\u7136\u6709\u6548\", num);\n    println!(\"\u5e73\u65b9\u7ed3\u679c: {}\", result);\n}\n\nfn square(x: i32) -&gt; i32 {\n    x * x\n}\n</code></pre> \u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 <code>Copy</code> trait\uff0c\u90a3\u4e48\u5b83\u7684\u53d8\u91cf\u5728\u8d4b\u503c\u65f6\u5c31\u4e0d\u4f1a\u88ab\u79fb\u52a8\uff0c\u800c\u662f\u88ab\u590d\u5236\u3002</p>"},{"location":"chapter2_ownership/#25","title":"25. \u51fd\u6570\u5982\u4f55\u83b7\u5f97\u503c\u7684\u6240\u6709\u6743\uff1f","text":"<p>\u7b54\uff1a \u5c06\u53d8\u91cf\u4f20\u9012\u7ed9\u51fd\u6570\u4e0e\u5c06\u5176\u8d4b\u503c\u7ed9\u53e6\u4e00\u4e2a\u53d8\u91cf\u7c7b\u4f3c\u3002 - \u5bf9\u4e8e\u5b9e\u73b0\u4e86 <code>Copy</code> \u7684\u7c7b\u578b\uff0c\u503c\u4f1a\u88ab\u590d\u5236\u3002 - \u5bf9\u4e8e\u6ca1\u6709\u5b9e\u73b0 <code>Copy</code> \u7684\u7c7b\u578b\uff08\u5982 <code>String</code>\uff09\uff0c\u6240\u6709\u6743\u4f1a\u88ab\u79fb\u52a8\u3002</p> <p><pre><code>fn main() {\n    // \u6240\u6709\u6743\u8f6c\u79fb\u793a\u4f8b\n    let s = String::from(\"hello\");\n    println!(\"\u8c03\u7528\u51fd\u6570\u524d: {}\", s);\n\n    takes_ownership(s); // s \u7684\u6240\u6709\u6743\u79fb\u52a8\u5230\u51fd\u6570\u91cc\n    // println!(\"{}\", s); // \u7f16\u8bd1\u9519\u8bef\uff01s \u5df2\u5931\u6548\n\n    // Copy \u7c7b\u578b\u793a\u4f8b\n    let x = 5;\n    println!(\"\u8c03\u7528\u51fd\u6570\u524d: {}\", x);\n\n    makes_copy(x); // x \u7684\u503c\u88ab\u590d\u5236\u5230\u51fd\u6570\u91cc\n    println!(\"\u8c03\u7528\u51fd\u6570\u540e: {}\", x); // \u6b63\u786e\uff01x \u4ecd\u7136\u6709\u6548\n\n    // \u51fd\u6570\u8fd4\u56de\u6240\u6709\u6743\n    let s1 = gives_ownership(); // \u51fd\u6570\u8fd4\u56de\u503c\u7684\u6240\u6709\u6743\u8f6c\u79fb\u7ed9 s1\n    println!(\"\u4ece\u51fd\u6570\u83b7\u5f97: {}\", s1);\n\n    let s2 = String::from(\"world\");\n    let s3 = takes_and_gives_back(s2); // s2 \u79fb\u5165\u51fd\u6570\uff0c\u8fd4\u56de\u503c\u79fb\u7ed9 s3\n    // println!(\"{}\", s2); // \u7f16\u8bd1\u9519\u8bef\uff01s2 \u5df2\u5931\u6548\n    println!(\"\u53d6\u56de\u7684\u503c: {}\", s3);\n\n    // \u6f14\u793a\u591a\u4e2a\u53d8\u91cf\u7684\u6240\u6709\u6743\u8f6c\u79fb\n    demonstrate_multiple_ownership();\n}\n\nfn takes_ownership(some_string: String) {\n    println!(\"\u51fd\u6570\u63a5\u6536\u5230: {}\", some_string);\n} // some_string \u5728\u8fd9\u91cc\u88ab drop\n\nfn makes_copy(some_integer: i32) {\n    println!(\"\u51fd\u6570\u63a5\u6536\u5230: {}\", some_integer);\n} // some_integer \u5728\u8fd9\u91cc\u8d85\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u56e0\u4e3a\u662f Copy\uff0c\u6ca1\u6709\u7279\u6b8a\u5904\u7406\n\nfn gives_ownership() -&gt; String {\n    let some_string = String::from(\"\u51fd\u6570\u521b\u5efa\u7684\u5b57\u7b26\u4e32\");\n    some_string // \u8fd4\u56de some_string\uff0c\u6240\u6709\u6743\u79fb\u51fa\u51fd\u6570\n}\n\nfn takes_and_gives_back(a_string: String) -&gt; String {\n    println!(\"\u51fd\u6570\u5904\u7406: {}\", a_string);\n    a_string // \u8fd4\u56de a_string\uff0c\u6240\u6709\u6743\u79fb\u51fa\u51fd\u6570\n}\n\nfn demonstrate_multiple_ownership() {\n    let s1 = String::from(\"first\");\n    let s2 = String::from(\"second\");\n    let s3 = String::from(\"third\");\n\n    let (s1, s2, s3, len) = calculate_lengths(s1, s2, s3);\n    println!(\"\u8fd4\u56de\u7684\u5b57\u7b26\u4e32: {}, {}, {}\", s1, s2, s3);\n    println!(\"\u603b\u957f\u5ea6: {}\", len);\n}\n\nfn calculate_lengths(s1: String, s2: String, s3: String) -&gt; (String, String, String, usize) {\n    let length = s1.len() + s2.len() + s3.len();\n    (s1, s2, s3, length)\n}\n</code></pre> \u51fd\u6570\u4e5f\u53ef\u4ee5\u8fd4\u56de\u503c\uff0c\u4ece\u800c\u5c06\u6240\u6709\u6743\u4ea4\u8fd8\u7ed9\u8c03\u7528\u8005\u3002</p>"},{"location":"chapter2_ownership/#26-borrowing","title":"26. \u4ec0\u4e48\u662f\u501f\u7528 (Borrowing)\uff1f","text":"<p>\u7b54\uff1a \u5982\u679c\u6211\u4eec\u5e0c\u671b\u5728\u4e0d\u8f6c\u79fb\u6240\u6709\u6743\u7684\u60c5\u51b5\u4e0b\u8ba9\u51fd\u6570\u4f7f\u7528\u67d0\u4e2a\u503c\uff0c\u6211\u4eec\u53ef\u4ee5\u4f20\u9012\u5b83\u7684\u5f15\u7528 (reference)\u3002\u8fd9\u4e2a\u8fc7\u7a0b\u79f0\u4e3a\u201c\u501f\u7528\u201d\u3002\u5f15\u7528\u4f7f\u7528 <code>&amp;</code> \u7b26\u53f7\u3002</p> <p><pre><code>fn main() {\n    // \u57fa\u672c\u501f\u7528\u793a\u4f8b\n    let s1 = String::from(\"hello\");\n    let len = calculate_length(&amp;s1); // \u4f20\u9012 s1 \u7684\u5f15\u7528\n    println!(\"\u5b57\u7b26\u4e32 '{}' \u7684\u957f\u5ea6\u662f {}.\", s1, len); // \u6b63\u786e\uff01s1 \u4ecd\u7136\u6709\u6548\n\n    // \u591a\u6b21\u501f\u7528\n    let s2 = String::from(\"world\");\n    let len1 = calculate_length(&amp;s2);\n    let len2 = calculate_length(&amp;s2);\n    let len3 = calculate_length(&amp;s2);\n    println!(\"\u5b57\u7b26\u4e32 '{}' \u53ef\u4ee5\u88ab\u591a\u6b21\u501f\u7528: {}, {}, {}\", s2, len1, len2, len3);\n\n    // \u4e0d\u540c\u7c7b\u578b\u7684\u501f\u7528\n    let numbers = vec![1, 2, 3, 4, 5];\n    let sum = calculate_sum(&amp;numbers);\n    let count = count_elements(&amp;numbers);\n    println!(\"\u6570\u7ec4 {:?} \u7684\u548c: {}, \u5143\u7d20\u4e2a\u6570: {}\", numbers, sum, count);\n\n    // \u501f\u7528\u6570\u7ec4\u5207\u7247\n    let arr = [1, 2, 3, 4, 5];\n    let slice_sum = sum_slice(&amp;arr[1..4]); // \u501f\u7528\u5207\u7247\n    println!(\"\u5207\u7247 {:?} \u7684\u548c: {}\", &amp;arr[1..4], slice_sum);\n\n    demonstrate_reference_rules();\n}\n\nfn calculate_length(s: &amp;String) -&gt; usize {\n    s.len()\n} // s \u5728\u8fd9\u91cc\u8d85\u51fa\u4f5c\u7528\u57df\uff0c\u4f46\u56e0\u4e3a\u5b83\u4e0d\u62e5\u6709\u5f15\u7528\u503c\uff0c\u6240\u4ee5\u4e0d\u4f1a drop\n\nfn calculate_sum(v: &amp;Vec&lt;i32&gt;) -&gt; i32 {\n    let mut sum = 0;\n    for item in v {\n        sum += item;\n    }\n    sum\n}\n\nfn count_elements(v: &amp;Vec&lt;i32&gt;) -&gt; usize {\n    v.len()\n}\n\nfn sum_slice(slice: &amp;[i32]) -&gt; i32 {\n    slice.iter().sum()\n}\n\nfn demonstrate_reference_rules() {\n    let s = String::from(\"reference rules\");\n\n    // \u53ef\u4ee5\u540c\u65f6\u6709\u591a\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528\n    let r1 = &amp;s;\n    let r2 = &amp;s;\n    let r3 = &amp;s;\n    println!(\"\u591a\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528: {}, {}, {}\", r1, r2, r3);\n\n    // \u5f15\u7528\u7684\u4f5c\u7528\u57df\n    {\n        let r4 = &amp;s;\n        println!(\"\u4f5c\u7528\u57df\u5185\u7684\u5f15\u7528: {}\", r4);\n    } // r4 \u5728\u8fd9\u91cc\u8d85\u51fa\u4f5c\u7528\u57df\n\n    println!(\"\u539f\u59cb\u5b57\u7b26\u4e32\u4ecd\u7136\u6709\u6548: {}\", s);\n}\n</code></pre> \u901a\u8fc7\u5f15\u7528\uff0c<code>calculate_length</code> \u51fd\u6570\u201c\u501f\u7528\u201d\u4e86 <code>s1</code>\uff0c\u4f46\u5e76\u6ca1\u6709\u83b7\u5f97\u5176\u6240\u6709\u6743\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u6240\u6709\u6743\u4f20\u9012\u4e0e\u501f\u7528\u8c03\u7528\u94fe</p> <pre><code>sequenceDiagram\n    participant Main\n    participant Func as takes_ownership\n    participant Borrow as calculate_length\n    Main-&gt;&gt;Func: move String(s)\n    Func--&gt;&gt;Main: (\u6240\u6709\u6743\u4e0d\u56de\u9000)\n    Main-&gt;&gt;Borrow: &amp;String(s) \u501f\u7528\n    Borrow--&gt;&gt;Main: \u957f\u5ea6 (\u6240\u6709\u6743\u4ecd\u5728 Main)</code></pre>"},{"location":"chapter2_ownership/#27","title":"27. \u4e0d\u53ef\u53d8\u5f15\u7528\u548c\u53ef\u53d8\u5f15\u7528\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - \u4e0d\u53ef\u53d8\u5f15\u7528 (Immutable Reference): <code>&amp;T</code>\u3002\u5b83\u5141\u8bb8\u4f60\u8bfb\u53d6\u6570\u636e\uff0c\u4f46\u4e0d\u80fd\u4fee\u6539\u5b83\u3002 - \u53ef\u53d8\u5f15\u7528 (Mutable Reference): <code>&amp;mut T</code>\u3002\u5b83\u5141\u8bb8\u4f60\u4fee\u6539\u501f\u7528\u7684\u6570\u636e\u3002</p> <pre><code>fn main() {\n    // \u53ef\u53d8\u501f\u7528\u793a\u4f8b\n    let mut s = String::from(\"hello\");\n    println!(\"\u539f\u59cb\u5b57\u7b26\u4e32: {}\", s);\n\n    {\n        // \u53ef\u53d8\u501f\u7528\n        let r1 = &amp;mut s;\n        r1.push_str(\", world\");\n        println!(\"\u53ef\u53d8\u501f\u7528\u4fee\u6539\u540e: {}\", r1);\n    } // r1 \u5728\u8fd9\u91cc\u8d85\u51fa\u4f5c\u7528\u57df\n\n    println!(\"\u4fee\u6539\u540e\u7684\u539f\u5b57\u7b26\u4e32: {}\", s);\n\n    // \u6f14\u793a\u501f\u7528\u89c4\u5219\n    demonstrate_borrowing_rules();\n\n    // \u53ef\u53d8\u5f15\u7528\u7684\u5b9e\u9645\u5e94\u7528\n    let mut numbers = vec![1, 2, 3];\n    println!(\"\u4fee\u6539\u524d: {:?}\", numbers);\n\n    modify_vector(&amp;mut numbers);\n    println!(\"\u4fee\u6539\u540e: {:?}\", numbers);\n\n    // \u901a\u8fc7\u53ef\u53d8\u5f15\u7528\u4ea4\u6362\u503c\n    let mut a = 10;\n    let mut b = 20;\n    println!(\"\u4ea4\u6362\u524d: a = {}, b = {}\", a, b);\n\n    swap_values(&amp;mut a, &amp;mut b);\n    println!(\"\u4ea4\u6362\u540e: a = {}, b = {}\", a, b);\n}\n\nfn demonstrate_borrowing_rules() {\n    let mut s = String::from(\"borrowing rules\");\n\n    // \u89c4\u52191: \u540c\u4e00\u65f6\u95f4\u53ea\u80fd\u6709\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\n    {\n        let r1 = &amp;mut s;\n        r1.push_str(\" - rule 1\");\n        println!(\"\u53ef\u53d8\u5f15\u7528: {}\", r1);\n        // let r2 = &amp;mut s; // \u7f16\u8bd1\u9519\u8bef\uff01\u4e0d\u80fd\u540c\u65f6\u6709\u4e24\u4e2a\u53ef\u53d8\u5f15\u7528\n    }\n\n    // \u89c4\u52192: \u53ef\u53d8\u5f15\u7528\u548c\u4e0d\u53ef\u53d8\u5f15\u7528\u4e0d\u80fd\u540c\u65f6\u5b58\u5728\n    {\n        let r1 = &amp;s; // \u4e0d\u53ef\u53d8\u5f15\u7528\n        let r2 = &amp;s; // \u53e6\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528\n        println!(\"\u4e0d\u53ef\u53d8\u5f15\u7528: {}, {}\", r1, r2);\n\n        // let r3 = &amp;mut s; // \u7f16\u8bd1\u9519\u8bef\uff01\u4e0d\u80fd\u5728\u6709\u4e0d\u53ef\u53d8\u5f15\u7528\u65f6\u521b\u5efa\u53ef\u53d8\u5f15\u7528\n    }\n\n    // \u89c4\u52193: \u5f15\u7528\u5fc5\u987b\u603b\u662f\u6709\u6548\u7684\n    {\n        let r1 = &amp;s;\n        println!(\"\u6709\u6548\u7684\u5f15\u7528: {}\", r1);\n    }\n}\n\nfn modify_vector(v: &amp;mut Vec&lt;i32&gt;) {\n    v.push(4);\n    v.push(5);\n    v[0] = 100; // \u4fee\u6539\u7b2c\u4e00\u4e2a\u5143\u7d20\n}\n\nfn swap_values(x: &amp;mut i32, y: &amp;mut i32) {\n    let temp = *x;\n    *x = *y;\n    *y = temp;\n}\n</code></pre>"},{"location":"chapter2_ownership/#28","title":"28. \u501f\u7528\u7684\u6838\u5fc3\u89c4\u5219\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a \u501f\u7528\u6709\u4e24\u6761\u975e\u5e38\u91cd\u8981\u7684\u89c4\u5219\uff0c\u7531\u7f16\u8bd1\u5668\u5f3a\u5236\u6267\u884c\uff1a 1.  \u5728\u4efb\u610f\u7ed9\u5b9a\u65f6\u95f4\uff0c\u4f60\u8981\u4e48\u53ea\u80fd\u62e5\u6709\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\uff0c\u8981\u4e48\u53ea\u80fd\u62e5\u6709\u4efb\u610f\u6570\u91cf\u7684\u4e0d\u53ef\u53d8\u5f15\u7528\u3002 2.  \u5f15\u7528\u5fc5\u987b\u603b\u662f\u6709\u6548\u7684\u3002</p> <p>\u8fd9\u5957\u89c4\u5219\u5728\u7f16\u8bd1\u65f6\u5c31\u9632\u6b62\u4e86\u201c\u6570\u636e\u7ade\u4e89\u201d\uff08Data Races\uff09\uff0c\u5373\u591a\u4e2a\u6307\u9488\u540c\u65f6\u8bbf\u95ee\u540c\u4e00\u6570\u636e\uff0c\u5176\u4e2d\u81f3\u5c11\u4e00\u4e2a\u5728\u5199\uff0c\u4e14\u6ca1\u6709\u540c\u6b65\u673a\u5236\u3002</p>"},{"location":"chapter2_ownership/#29-dangling-reference","title":"29. \u4ec0\u4e48\u662f\u60ac\u5782\u5f15\u7528 (Dangling Reference)\uff1f","text":"<p>\u7b54\uff1a \u60ac\u5782\u5f15\u7528\u662f\u6307\u4e00\u4e2a\u6307\u5411\u4e86\u65e0\u6548\u5185\u5b58\u5730\u5740\u7684\u6307\u9488\uff0c\u8fd9\u5757\u5185\u5b58\u53ef\u80fd\u5df2\u7ecf\u88ab\u91ca\u653e\u5e76\u53e6\u4f5c\u4ed6\u7528\u3002\u5728\u5f88\u591a\u8bed\u8a00\u4e2d\uff0c\u8fd9\u662f\u4e00\u4e2a\u5e38\u89c1\u7684\u4e25\u91cd bug\u3002</p> <p>Rust \u7684\u7f16\u8bd1\u5668\u901a\u8fc7\u6240\u6709\u6743\u548c\u501f\u7528\u89c4\u5219\u4fdd\u8bc1\u4f60\u6c38\u8fdc\u4e0d\u4f1a\u9047\u5230\u60ac\u5782\u5f15\u7528\u3002</p> <pre><code>// fn dangle() -&gt; &amp;String { // dangle \u8fd4\u56de\u4e00\u4e2a String \u7684\u5f15\u7528\n//     let s = String::from(\"hello\"); // s \u5728\u8fd9\u91cc\u521b\u5efa\n//     &amp;s // \u6211\u4eec\u8fd4\u56de s \u7684\u5f15\u7528\n// } // s \u5728\u8fd9\u91cc\u79bb\u5f00\u4f5c\u7528\u57df\uff0c\u5185\u5b58\u88ab\u91ca\u653e\u3002\u5f15\u7528\u5c06\u6307\u5411\u65e0\u6548\u5185\u5b58\uff01\n// \u4e0a\u8ff0\u4ee3\u7801\u65e0\u6cd5\u901a\u8fc7\u7f16\u8bd1\uff01\n</code></pre>"},{"location":"chapter2_ownership/#30-slice","title":"30. \u4ec0\u4e48\u662f\u5207\u7247 (Slice)\uff1f","text":"<p>\u7b54\uff1a \u5207\u7247\u5141\u8bb8\u4f60\u5f15\u7528\u96c6\u5408\u4e2d\u4e00\u6bb5\u8fde\u7eed\u7684\u5143\u7d20\u5e8f\u5217\uff0c\u800c\u4e0d\u7528\u5f15\u7528\u6574\u4e2a\u96c6\u5408\u3002\u5207\u7247\u4e5f\u662f\u4e00\u79cd\u5f15\u7528\uff0c\u6240\u4ee5\u5b83\u6ca1\u6709\u6240\u6709\u6743\u3002</p> <p>\u6700\u5e38\u89c1\u7684\u5207\u7247\u662f\u5b57\u7b26\u4e32\u5207\u7247 <code>&amp;str</code>\u3002</p> <p><pre><code>fn main() {\n    // \u57fa\u672c\u5b57\u7b26\u4e32\u5207\u7247\n    let s = String::from(\"hello world\");\n    println!(\"\u539f\u59cb\u5b57\u7b26\u4e32: {}\", s);\n\n    let hello = &amp;s[0..5]; // \"hello\"\n    let world = &amp;s[6..11]; // \"world\"\n    println!(\"\u5207\u7247: '{}' \u548c '{}'\", hello, world);\n\n    // \u5207\u7247\u8bed\u6cd5\u7684\u5404\u79cd\u5f62\u5f0f\n    let full = &amp;s[..]; // \u6574\u4e2a\u5b57\u7b26\u4e32\n    let from_start = &amp;s[..5]; // \u4ece\u5f00\u59cb\u5230\u7d22\u5f155\n    let to_end = &amp;s[6..]; // \u4ece\u7d22\u5f156\u5230\u7ed3\u675f\n    println!(\"\u5b8c\u6574: '{}', \u5f00\u59cb: '{}', \u7ed3\u5c3e: '{}'\", full, from_start, to_end);\n\n    // \u6570\u7ec4\u5207\u7247\n    let a = [1, 2, 3, 4, 5];\n    let slice = &amp;a[1..4]; // [2, 3, 4]\n    println!(\"\u6570\u7ec4: {:?}, \u5207\u7247: {:?}\", a, slice);\n\n    // \u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u5c31\u662f\u5207\u7247\n    let literal = \"Hello, Rust!\"; // \u7c7b\u578b\u662f &amp;str\n    println!(\"\u5b57\u7b26\u4e32\u5b57\u9762\u91cf: {}\", literal);\n\n    // \u5207\u7247\u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\n    let word = first_word(&amp;s);\n    println!(\"\u7b2c\u4e00\u4e2a\u5355\u8bcd: {}\", word);\n\n    let word2 = first_word(\"rust programming\");\n    println!(\"\u5b57\u9762\u91cf\u7684\u7b2c\u4e00\u4e2a\u5355\u8bcd: {}\", word2);\n\n    // \u53ef\u53d8\u5207\u7247\n    demonstrate_mutable_slices();\n\n    // \u5207\u7247\u7684\u5b9e\u9645\u5e94\u7528\n    demonstrate_slice_applications();\n}\n\nfn first_word(s: &amp;str) -&gt; &amp;str {\n    let bytes = s.as_bytes();\n\n    for (i, &amp;item) in bytes.iter().enumerate() {\n        if item == b' ' {\n            return &amp;s[0..i];\n        }\n    }\n\n    &amp;s[..]\n}\n\nfn demonstrate_mutable_slices() {\n    let mut arr = [1, 2, 3, 4, 5];\n    println!(\"\u539f\u59cb\u6570\u7ec4: {:?}\", arr);\n\n    {\n        let slice = &amp;mut arr[1..4];\n        slice[0] = 10;\n        slice[1] = 20;\n        slice[2] = 30;\n        println!(\"\u4fee\u6539\u5207\u7247\u540e: {:?}\", slice);\n    }\n\n    println!(\"\u4fee\u6539\u540e\u7684\u6570\u7ec4: {:?}\", arr);\n}\n\nfn demonstrate_slice_applications() {\n    // \u5728\u51fd\u6570\u4e2d\u4f7f\u7528\u5207\u7247\u63d0\u9ad8\u7075\u6d3b\u6027\n    let s1 = String::from(\"hello world\");\n    let s2 = \"rust programming\";\n    let arr = [1, 2, 3, 4, 5];\n\n    println!(\"\u5b57\u7b26\u4e32\u957f\u5ea6: {}\", get_length(&amp;s1));\n    println!(\"\u5b57\u9762\u91cf\u957f\u5ea6: {}\", get_length(s2));\n\n    println!(\"\u6570\u7ec4\u5207\u7247\u548c: {}\", sum_slice(&amp;arr[..]));\n    println!(\"\u90e8\u5206\u5207\u7247\u548c: {}\", sum_slice(&amp;arr[1..4]));\n}\n\nfn get_length(s: &amp;str) -&gt; usize {\n    s.len()\n}\n\nfn sum_slice(slice: &amp;[i32]) -&gt; i32 {\n    let mut sum = 0;\n    for &amp;item in slice {\n        sum += item;\n    }\n    sum\n}\n</code></pre> \u5b57\u7b26\u4e32\u5b57\u9762\u91cf\uff08\u5982 <code>\"hello\"</code>\uff09\u672c\u8eab\u5c31\u662f\u5207\u7247\u7c7b\u578b (<code>&amp;'static str</code>)\u3002</p>"},{"location":"chapter2_ownership/#31-str-string","title":"31. \u4e3a\u4ec0\u4e48\u5b57\u7b26\u4e32\u5207\u7247 <code>&amp;str</code> \u6bd4 <code>String</code> \u66f4\u5e38\u7528\u4f5c\u51fd\u6570\u53c2\u6570\uff1f","text":"<p>\u7b54\uff1a \u901a\u8fc7\u63a5\u53d7 <code>&amp;str</code> \u4f5c\u4e3a\u53c2\u6570\uff0c\u4f60\u7684\u51fd\u6570\u53ef\u4ee5\u53d8\u5f97\u66f4\u901a\u7528\u3002\u8fd9\u6837\u7684\u51fd\u6570\u65e2\u53ef\u4ee5\u63a5\u53d7 <code>String</code> \u7c7b\u578b\uff08\u901a\u8fc7 <code>&amp;my_string[..]</code> \u6216\u76f4\u63a5 <code>&amp;my_string</code>\uff09\uff0c\u4e5f\u53ef\u4ee5\u63a5\u53d7\u5b57\u7b26\u4e32\u5b57\u9762\u91cf (<code>\"a literal\"</code>)\u3002</p> <pre><code>// \u901a\u7528\u6027\u5f3a\u7684\u51fd\u6570\nfn first_word(s: &amp;str) -&gt; &amp;str { /* ... */ }\n\nfn main() {\n    let my_string = String::from(\"hello world\");\n    first_word(&amp;my_string); // \u4f20\u5165 String \u7684\u5207\u7247\n\n    let my_literal = \"hello world\";\n    first_word(my_literal); // \u4f20\u5165\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\n}\n</code></pre>"},{"location":"chapter2_ownership/#32-lifetimes","title":"32. \u4ec0\u4e48\u662f\u751f\u547d\u5468\u671f (Lifetimes)\uff1f","text":"<p>\u7b54\uff1a \u751f\u547d\u5468\u671f\u662f Rust \u7f16\u8bd1\u5668\uff08\u501f\u7528\u68c0\u67e5\u5668\uff09\u7528\u6765\u786e\u4fdd\u6240\u6709\u501f\u7528\u90fd\u6709\u6548\u7684\u8303\u56f4\u3002\u5927\u591a\u6570\u65f6\u5019\uff0c\u751f\u547d\u5468\u671f\u662f\u9690\u5f0f\u548c\u88ab\u63a8\u65ad\u7684\uff0c\u5c31\u50cf\u7c7b\u578b\u63a8\u65ad\u4e00\u6837\u3002\u4f46\u5f53\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u53ef\u80fd\u4ee5\u591a\u79cd\u65b9\u5f0f\u5173\u8054\u65f6\uff0c\u4f60\u5c31\u5fc5\u987b\u624b\u52a8\u6807\u6ce8\u751f\u547d\u5468\u671f\u3002</p> <p>\u751f\u547d\u5468\u671f\u7684\u6838\u5fc3\u4efb\u52a1\u662f\u9632\u6b62\u60ac\u5782\u5f15\u7528\u3002</p>"},{"location":"chapter2_ownership/#33","title":"33. \u4ec0\u4e48\u65f6\u5019\u9700\u8981\u624b\u52a8\u6807\u6ce8\u751f\u547d\u5468\u671f\uff1f","text":"<p>\u7b54\uff1a \u5f53\u4f60\u7f16\u5199\u7684\u51fd\u6570\u6216\u7ed3\u6784\u4f53\u63a5\u53d7\u6216\u8fd4\u56de\u5f15\u7528\u65f6\uff0c\u5982\u679c\u7f16\u8bd1\u5668\u65e0\u6cd5\u6839\u636e\u5176\u4e09\u6761\u201c\u751f\u547d\u5468\u671f\u7701\u7565\u89c4\u5219\u201d\u6765\u63a8\u65ad\u51fa\u5f15\u7528\u7684\u6709\u6548\u8303\u56f4\uff0c\u4f60\u5c31\u9700\u8981\u624b\u52a8\u6807\u6ce8\u3002</p> <p>\u6700\u5e38\u89c1\u7684\u60c5\u51b5\u662f\uff1a\u4e00\u4e2a\u51fd\u6570\u8fd4\u56de\u4e00\u4e2a\u5f15\u7528\uff0c\u800c\u8fd9\u4e2a\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u6765\u81ea\u4e8e\u51fd\u6570\u4f20\u5165\u7684\u591a\u4e2a\u5f15\u7528\u4e4b\u4e00\u3002</p> <pre><code>// \u7f16\u8bd1\u5668\u4e0d\u77e5\u9053\u8fd4\u56de\u7684\u5f15\u7528\u662f\u6765\u81ea x \u8fd8\u662f y\n// \u6240\u4ee5\u6211\u4eec\u9700\u8981\u624b\u52a8\u6807\u6ce8\nfn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str {\n    if x.len() &gt; y.len() {\n        x\n    } else {\n        y\n    }\n}\n</code></pre>"},{"location":"chapter2_ownership/#34-a","title":"34. \u751f\u547d\u5468\u671f\u6807\u6ce8 <code>'a</code> \u662f\u4ec0\u4e48\u610f\u601d\uff1f","text":"<p>\u7b54\uff1a \u751f\u547d\u5468\u671f\u6807\u6ce8\uff08\u5982 <code>'a</code>\uff09\u672c\u8eab\u4e0d\u4f1a\u6539\u53d8\u4efb\u4f55\u5f15\u7528\u7684\u5b58\u6d3b\u65f6\u95f4\u3002\u5b83\u66f4\u50cf\u662f\u4e00\u4e2a\u6cdb\u578b\u53c2\u6570\uff0c\u7528\u6765\u544a\u8bc9\u7f16\u8bd1\u5668\u591a\u4e2a\u5f15\u7528\u4e4b\u95f4\u751f\u547d\u5468\u671f\u7684\u5173\u7cfb\u3002</p> <p>\u5728 <code>fn longest&lt;'a&gt;(x: &amp;'a str, y: &amp;'a str) -&gt; &amp;'a str</code> \u4e2d\uff1a - <code>'a</code> \u662f\u4e00\u4e2a\u751f\u547d\u5468\u671f\u53c2\u6570\u7684\u58f0\u660e\u3002 - <code>x: &amp;'a str</code> \u8868\u793a <code>x</code> \u662f\u4e00\u4e2a\u751f\u547d\u5468\u671f\u81f3\u5c11\u548c <code>'a</code> \u4e00\u6837\u957f\u7684\u5f15\u7528\u3002 - <code>y: &amp;'a str</code> \u8868\u793a <code>y</code> \u4e5f\u662f\u4e00\u4e2a\u751f\u547d\u5468\u671f\u81f3\u5c11\u548c <code>'a</code> \u4e00\u6837\u957f\u7684\u5f15\u7528\u3002 - <code>-&gt; &amp;'a str</code> \u8868\u793a\u51fd\u6570\u8fd4\u56de\u7684\u5f15\u7528\uff0c\u5176\u751f\u547d\u5468\u671f\u4e5f\u81f3\u5c11\u548c <code>'a</code> \u4e00\u6837\u957f\u3002</p> <p>\u8fd9\u5b9e\u9645\u4e0a\u662f\u544a\u8bc9\u7f16\u8bd1\u5668\uff1a\u201c\u8fd4\u56de\u7684\u8fd9\u4e2a\u5f15\u7528\u7684\u6709\u6548\u8303\u56f4\uff0c\u53d7\u9650\u4e8e <code>x</code> \u548c <code>y</code> \u4e2d\u8f83\u77ed\u7684\u90a3\u4e2a\u751f\u547d\u5468\u671f\u201d\u3002</p>"},{"location":"chapter2_ownership/#35-static","title":"35. \u4ec0\u4e48\u662f\u9759\u6001\u751f\u547d\u5468\u671f (<code>'static</code>)\uff1f","text":"<p>\u7b54\uff1a <code>'static</code> \u662f\u4e00\u4e2a\u7279\u6b8a\u7684\u751f\u547d\u5468\u671f\uff0c\u5b83\u610f\u5473\u7740\u88ab\u5f15\u7528\u7684\u6570\u636e\u5728\u6574\u4e2a\u7a0b\u5e8f\u7684\u8fd0\u884c\u671f\u95f4\u90fd\u6709\u6548\u3002</p> <p>\u6240\u6709\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u90fd\u62e5\u6709 <code>'static</code> \u751f\u547d\u5468\u671f\uff0c\u56e0\u4e3a\u5b83\u4eec\u88ab\u76f4\u63a5\u5b58\u50a8\u5728\u7a0b\u5e8f\u7684\u53ef\u6267\u884c\u6587\u4ef6\u91cc\u3002</p> <p><pre><code>let s: &amp;'static str = \"I have a static lifetime.\";\n</code></pre> \u53ea\u6709\u5f53\u4f60\u77e5\u9053\u6570\u636e\u4f1a\u4e00\u76f4\u5b58\u5728\u65f6\uff0c\u624d\u5e94\u8be5\u4f7f\u7528\u5b83\u3002\u5728\u51fd\u6570\u53c2\u6570\u6216\u8fd4\u56de\u503c\u4e2d\u8981\u6c42 <code>'static</code> \u751f\u547d\u5468\u671f\u662f\u4e00\u4e2a\u5f88\u5f3a\u7684\u7ea6\u675f\uff0c\u9700\u8981\u8c28\u614e\u4f7f\u7528\u3002</p>"},{"location":"chapter2_ownership/#36","title":"36. \u7ed3\u6784\u4f53\u4e2d\u7684\u5f15\u7528\u4e5f\u9700\u8981\u751f\u547d\u5468\u671f\u6807\u6ce8\u5417\uff1f","text":"<p>\u7b54\uff1a \u662f\u7684\u3002\u5982\u679c\u4e00\u4e2a\u7ed3\u6784\u4f53\u6301\u6709\u5f15\u7528\uff0c\u90a3\u4e48\u5b83\u7684\u5b9a\u4e49\u5fc5\u987b\u5305\u542b\u751f\u547d\u5468\u671f\u6807\u6ce8\uff0c\u8fd9\u6837\u6bcf\u4e2a\u5f15\u7528\u7684\u751f\u547d\u5468\u671f\u624d\u80fd\u548c\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u751f\u547d\u5468\u671f\u5173\u8054\u8d77\u6765\u3002</p> <p><pre><code>struct ImportantExcerpt&lt;'a&gt; {\n    part: &amp;'a str,\n}\n\nfn main() {\n    let novel = String::from(\"Call me Ishmael. Some years ago...\");\n    let first_sentence = novel.split('.').next().expect(\"Could not find a '.'\");\n\n    // i \u7684\u751f\u547d\u5468\u671f\u4e0d\u80fd\u8d85\u8fc7 first_sentence \u7684\u751f\u547d\u5468\u671f\n    let i = ImportantExcerpt {\n        part: first_sentence,\n    };\n}\n</code></pre> \u8fd9\u4fdd\u8bc1\u4e86 <code>ImportantExcerpt</code> \u7684\u5b9e\u4f8b\u4e0d\u4f1a\u6bd4\u5b83\u6240\u5f15\u7528\u7684\u6570\u636e\u6d3b\u5f97\u66f4\u4e45\u3002</p>"},{"location":"chapter2_ownership/#37-borrow-checker","title":"37. \u4ec0\u4e48\u662f\u501f\u7528\u68c0\u67e5\u5668 (Borrow Checker)\uff1f","text":"<p>\u7b54\uff1a \u501f\u7528\u68c0\u67e5\u5668\u662f Rust \u7f16\u8bd1\u5668\u7684\u4e00\u90e8\u5206\u3002\u5b83\u5728\u7f16\u8bd1\u65f6\u5de5\u4f5c\uff0c\u6bd4\u8f83\u4f5c\u7528\u57df\u548c\u751f\u547d\u5468\u671f\uff0c\u4ee5\u786e\u4fdd\u6240\u6709\u7684\u501f\u7528\u90fd\u662f\u6709\u6548\u7684\u3002\u5982\u679c\u8fdd\u53cd\u4e86\u501f\u7528\u89c4\u5219\uff08\u4f8b\u5982\uff0c\u53ef\u80fd\u4ea7\u751f\u60ac\u5782\u5f15\u7528\u6216\u6570\u636e\u7ade\u4e89\uff09\uff0c\u501f\u7528\u68c0\u67e5\u5668\u4f1a\u62d2\u7edd\u7f16\u8bd1\u4ee3\u7801\u3002</p> <p>\u6b63\u662f\u501f\u7528\u68c0\u67e5\u5668\u8ba9 Rust \u80fd\u591f\u5728\u6ca1\u6709\u5783\u573e\u56de\u6536\u7684\u60c5\u51b5\u4e0b\u5b9e\u73b0\u5185\u5b58\u5b89\u5168\u3002</p>"},{"location":"chapter2_ownership/#38","title":"38. \u6240\u6709\u6743\u3001\u501f\u7528\u548c\u751f\u547d\u5468\u671f\u4e09\u8005\u662f\u4ec0\u4e48\u5173\u7cfb\uff1f","text":"<p>\u7b54\uff1a \u5b83\u4eec\u662f Rust \u5185\u5b58\u5b89\u5168\u4fdd\u8bc1\u7684\u4e09\u5927\u652f\u67f1\uff0c\u7d27\u5bc6\u76f8\u8fde\uff1a - \u6240\u6709\u6743 \u786e\u7acb\u4e86\u8c01\u8d1f\u8d23\u6e05\u7406\u6570\u636e\u3002 - \u501f\u7528 \u5141\u8bb8\u4f60\u5728\u4e0d\u8f6c\u79fb\u6240\u6709\u6743\u7684\u60c5\u51b5\u4e0b\u4e34\u65f6\u8bbf\u95ee\u6570\u636e\u3002 - \u751f\u547d\u5468\u671f \u662f\u4e00\u5957\u7f16\u8bd1\u5668\u7528\u6765\u786e\u4fdd\u501f\u7528\uff08\u5f15\u7528\uff09\u4e0d\u4f1a\u6bd4\u5b83\u4eec\u6240\u6307\u5411\u7684\u6570\u636e\u6d3b\u5f97\u66f4\u4e45\u7684\u89c4\u5219\u3002</p> <p>\u4f60\u53ef\u4ee5\u628a\u5b83\u4eec\u60f3\u8c61\u6210\uff1a\u6240\u6709\u6743\u662f\u623f\u4ea7\u8bc1\uff0c\u501f\u7528\u662f\u628a\u94a5\u5319\u501f\u7ed9\u670b\u53cb\uff0c\u751f\u547d\u5468\u671f\u662f\u786e\u4fdd\u670b\u53cb\u4e0d\u4f1a\u5728\u623f\u5b50\u88ab\u62c6\u4e86\u4e4b\u540e\u8fd8\u60f3\u7528\u94a5\u5319\u5f00\u95e8\u3002</p>"},{"location":"chapter2_ownership/#39-copy-clone","title":"39. <code>Copy</code> \u548c <code>Clone</code> \u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - <code>Copy</code>: \u662f\u4e00\u79cd\u7279\u6b8a\u7684 <code>Clone</code>\u3002\u5982\u679c\u4e00\u4e2a\u7c7b\u578b\u5b9e\u73b0\u4e86 <code>Copy</code>\uff0c\u90a3\u4e48\u5b83\u5728\u8d4b\u503c\u65f6\u4f1a\u53d1\u751f\u201c\u6309\u4f4d\u590d\u5236\u201d\uff0c\u8fd9\u662f\u4e00\u4e2a\u975e\u5e38\u5ec9\u4ef7\u7684\u64cd\u4f5c\uff0c\u5e76\u4e14\u4e0d\u4f1a\u79fb\u52a8\u6240\u6709\u6743\u3002\u5b83\u53ea\u80fd\u7528\u4e8e\u5b8c\u5168\u5b58\u50a8\u5728\u6808\u4e0a\u7684\u6570\u636e\u3002 - <code>Clone</code>: \u662f\u4e00\u4e2a\u66f4\u901a\u7528\u7684 trait\u3002<code>clone()</code> \u65b9\u6cd5\u5141\u8bb8\u4f60\u663e\u5f0f\u5730\u521b\u5efa\u4e00\u4e2a\u503c\u7684\u6df1\u62f7\u8d1d\uff08deep copy\uff09\u3002\u5bf9\u4e8e\u5806\u4e0a\u7684\u6570\u636e\uff08\u5982 <code>String</code>\uff09\uff0c<code>clone()</code> \u4f1a\u5206\u914d\u65b0\u7684\u5806\u5185\u5b58\u5e76\u590d\u5236\u6570\u636e\u3002\u8fd9\u662f\u4e00\u4e2a\u53ef\u80fd\u5f00\u9500\u8f83\u5927\u7684\u64cd\u4f5c\u3002</p> <p>\u6240\u6709\u5b9e\u73b0\u4e86 <code>Copy</code> \u7684\u7c7b\u578b\u4e5f\u90fd\u5b9e\u73b0\u4e86 <code>Clone</code>\u3002</p> <pre><code>let s1 = String::from(\"hello\");\nlet s2 = s1.clone(); // \u663e\u5f0f\u514b\u9686\uff0c\u5f00\u9500\u8f83\u5927\n\nlet x = 5; // i32 \u5b9e\u73b0\u4e86 Copy\nlet y = x; // \u9690\u5f0f\u590d\u5236\uff0c\u5f00\u9500\u6781\u5c0f\n</code></pre>"},{"location":"chapter2_ownership/#40-i32-i32-copy-i32-string","title":"40. \u4e3a\u4ec0\u4e48\u5143\u7ec4 <code>(i32, i32)</code> \u5b9e\u73b0\u4e86 <code>Copy</code>\uff0c\u4f46 <code>(i32, String)</code> \u6ca1\u6709\uff1f","text":"<p>\u7b54\uff1a \u4e00\u4e2a\u590d\u5408\u7c7b\u578b\uff08\u5982\u5143\u7ec4\u6216\u7ed3\u6784\u4f53\uff09\u80fd\u5426\u5b9e\u73b0 <code>Copy</code>\uff0c\u53d6\u51b3\u4e8e\u5b83\u7684\u6240\u6709\u6210\u5458\u662f\u5426\u90fd\u5b9e\u73b0\u4e86 <code>Copy</code>\u3002 - <code>(i32, i32)</code>: <code>i32</code> \u5b9e\u73b0\u4e86 <code>Copy</code>\uff0c\u6240\u4ee5\u7531 <code>i32</code> \u7ec4\u6210\u7684\u5143\u7ec4\u4e5f\u5b9e\u73b0\u4e86 <code>Copy</code>\u3002 - <code>(i32, String)</code>: <code>String</code> \u6ca1\u6709\u5b9e\u73b0 <code>Copy</code>\uff08\u56e0\u4e3a\u5b83\u7ba1\u7406\u5806\u5185\u5b58\uff09\uff0c\u6240\u4ee5\u4efb\u4f55\u5305\u542b <code>String</code> \u7684\u5143\u7ec4\u90fd\u4e0d\u80fd\u5b9e\u73b0 <code>Copy</code>\u3002</p>"},{"location":"chapter3_collections/","title":"\u7b2c\u4e09\u7ae0\uff1a\u590d\u5408\u7c7b\u578b\u4e0e\u96c6\u5408","text":"<p>\u672c\u7ae0\u5c06\u4ecb\u7ecd Rust \u4e2d\u7ec4\u7ec7\u6570\u636e\u7684\u4e24\u79cd\u91cd\u8981\u65b9\u5f0f\uff1a\u7ed3\u6784\u4f53\uff08structs\uff09\u548c\u679a\u4e3e\uff08enums\uff09\u3002\u6211\u4eec\u8fd8\u5c06\u6df1\u5165\u63a2\u8ba8\u6807\u51c6\u5e93\u63d0\u4f9b\u7684\u4e00\u4e9b\u975e\u5e38\u6709\u7528\u7684\u96c6\u5408\u7c7b\u578b\uff0c\u5982 Vector\u3001String \u548c HashMap\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u7c7b\u578b\u4e0e\u96c6\u5408\u5173\u7cfb</p> <pre><code>flowchart LR\n  S1[Struct] --&gt; V[Vec]\n  E1[Enum] --&gt; V\n  V --&gt; STR[String]\n  STR --&gt; S[&amp;str]\n  STR --&gt; H[HashMap]</code></pre>"},{"location":"chapter3_collections/#41-struct","title":"41. \u4ec0\u4e48\u662f\u7ed3\u6784\u4f53 (Struct)\uff1f\u5982\u4f55\u5b9a\u4e49\uff1f","text":"<p>\u7b54\uff1a \u7ed3\u6784\u4f53\uff08struct\uff09\u662f\u4e00\u79cd\u81ea\u5b9a\u4e49\u6570\u636e\u7c7b\u578b\uff0c\u5141\u8bb8\u4f60\u5c06\u591a\u4e2a\u76f8\u5173\u7684\u503c\u7ec4\u5408\u5728\u4e00\u8d77\u5e76\u547d\u540d\u3002\u5b83\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u5bf9\u8c61\u6216\u8bb0\u5f55\u3002\u6709\u4e09\u79cd\u7c7b\u578b\u7684\u7ed3\u6784\u4f53\uff1a</p> <ol> <li>\u666e\u901a\u7ed3\u6784\u4f53 (Struct):</li> </ol> <pre><code>struct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\n// \u521b\u5efa\u5b9e\u4f8b\nlet user1 = User {\n    email: String::from(\"someone@example.com\"),\n    username: String::from(\"someusername123\"),\n    active: true,\n    sign_in_count: 1,\n};\n</code></pre> <p>\u793a\u610f\u56fe\uff1a\u7ed3\u6784\u4f53\u4e0e\u5b57\u6bb5</p> <pre><code>flowchart LR\n  User[User] --&gt; active[active: bool]\n  User --&gt; username[username: String]\n  User --&gt; email[email: String]\n  User --&gt; sign_in_count[sign_in_count: u64]</code></pre> <ol> <li>\u5143\u7ec4\u7ed3\u6784\u4f53 (Tuple Struct): \u5f53\u4f60\u60f3\u7ed9\u6574\u4e2a\u5143\u7ec4\u4e00\u4e2a\u540d\u5b57\uff0c\u4f46\u4e0d\u9700\u8981\u7ed9\u6bcf\u4e2a\u5b57\u6bb5\u547d\u540d\u65f6\u4f7f\u7528\u3002</li> </ol> <pre><code>struct Color(i32, i32, i32);\nlet black = Color(0, 0, 0);\n</code></pre> <ol> <li>\u5355\u5143\u7ed3\u6784\u4f53 (Unit-Like Struct): \u6ca1\u6709\u4efb\u4f55\u5b57\u6bb5\uff0c\u5f53\u4f60\u9700\u8981\u5728\u67d0\u4e2a\u7c7b\u578b\u4e0a\u5b9e\u73b0 trait \u4f46\u53c8\u4e0d\u9700\u8981\u5b58\u50a8\u6570\u636e\u65f6\u5f88\u6709\u7528\u3002</li> </ol> <pre><code>struct AlwaysEqual;\nlet subject = AlwaysEqual;\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u7ed3\u6784\u4f53\u521d\u59cb\u5316\u7b80\u5199\u3001\u66f4\u65b0\u8bed\u6cd5\u4e0e\u8c03\u8bd5\u8f93\u51fa <pre><code>#[derive(Debug)]\nstruct User {\n    active: bool,\n    username: String,\n    email: String,\n    sign_in_count: u64,\n}\n\nfn main() {\n    let username = String::from(\"alice\");\n    let email = String::from(\"alice@example.com\");\n\n    // \u5b57\u6bb5\u521d\u59cb\u5316\u7b80\u5199\uff08\u53d8\u91cf\u540d\u4e0e\u5b57\u6bb5\u540d\u76f8\u540c\uff09\n    let mut user1 = User {\n        active: true,\n        username,\n        email,\n        sign_in_count: 1,\n    };\n\n    // \u66f4\u65b0\u8bed\u6cd5\uff08\u4ece user1 \u62f7\u8d1d\u5269\u4f59\u5b57\u6bb5\uff1b\u88ab\u79fb\u52a8\u7684\u5b57\u6bb5\u5728 user1 \u4e0a\u5931\u6548\uff09\n    let user2 = User {\n        email: String::from(\"alice@work.com\"),\n        ..user1\n    };\n\n    // user1.username \u5df2\u88ab\u79fb\u52a8\uff0c\u4e0d\u80fd\u518d\u4f7f\u7528\uff1b\u4f46 user1.active \u4ecd\u53ef\u7528\n    println!(\"user2 = {:?}\", user2);\n}\n</code></pre></p>"},{"location":"chapter3_collections/#42-method","title":"42. \u5982\u4f55\u4e3a\u7ed3\u6784\u4f53\u5b9e\u73b0\u65b9\u6cd5 (Method)\uff1f","text":"<p>\u7b54\uff1a \u65b9\u6cd5\u4e0e\u51fd\u6570\u7c7b\u4f3c\uff0c\u4f46\u5b83\u4eec\u5728\u7ed3\u6784\u4f53\uff08\u6216\u679a\u4e3e\u3001trait\uff09\u7684\u4e0a\u4e0b\u6587\u4e2d\u88ab\u5b9a\u4e49\uff0c\u5e76\u4e14\u5b83\u4eec\u7684\u7b2c\u4e00\u4e2a\u53c2\u6570\u603b\u662f <code>self</code>\uff0c\u4ee3\u8868\u8c03\u7528\u8be5\u65b9\u6cd5\u7684\u7ed3\u6784\u4f53\u5b9e\u4f8b\u3002\u65b9\u6cd5\u5728 <code>impl</code> \u5757\u4e2d\u5b9a\u4e49\u3002</p> <pre><code>struct Rectangle {\n    width: u32,\n    height: u32,\n}\n\nimpl Rectangle {\n    // `&amp;self` \u662f self: &amp;Self \u7684\u7f29\u5199\n    // \u8fd9\u662f\u4e00\u4e2a\u4e0d\u53ef\u53d8\u501f\u7528\n    fn area(&amp;self) -&gt; u32 {\n        self.width * self.height\n    }\n\n    // \u8fd9\u662f\u4e00\u4e2a\u53ef\u53d8\u501f\u7528\n    fn set_width(&amp;mut self, width: u32) {\n        self.width = width;\n    }\n}\n\nlet mut rect = Rectangle { width: 30, height: 50 };\nprintln!(\"The area is {}\", rect.area());\nrect.set_width(35);\n</code></pre>"},{"location":"chapter3_collections/#43-associated-function","title":"43. \u4ec0\u4e48\u662f\u5173\u8054\u51fd\u6570 (Associated Function)\uff1f","text":"<p>\u7b54\uff1a \u5173\u8054\u51fd\u6570\u662f\u5b9a\u4e49\u5728 <code>impl</code> \u5757\u4e2d\u4f46\u4e0d\u4ee5 <code>self</code> \u4f5c\u4e3a\u7b2c\u4e00\u4e2a\u53c2\u6570\u7684\u51fd\u6570\u3002\u5b83\u4e0e\u7ed3\u6784\u4f53\u5173\u8054\uff0c\u4f46\u4e0d\u662f\u5b9e\u4f8b\u7684\u65b9\u6cd5\u3002\u5176\u4ed6\u8bed\u8a00\u4e2d\u901a\u5e38\u79f0\u4e4b\u4e3a\u201c\u9759\u6001\u65b9\u6cd5\u201d\u3002</p> <p>\u521b\u5efa\u7ed3\u6784\u4f53\u5b9e\u4f8b\u7684\u6784\u9020\u51fd\u6570\u662f\u5173\u8054\u51fd\u6570\u7684\u5e38\u89c1\u7528\u6cd5\uff0c\u4f8b\u5982 <code>String::from</code>\u3002</p> <pre><code>impl Rectangle {\n    // \u8fd9\u662f\u4e00\u4e2a\u5173\u8054\u51fd\u6570\uff0c\u901a\u5e38\u7528\u4f5c\u6784\u9020\u51fd\u6570\n    fn square(size: u32) -&gt; Self {\n        Self {\n            width: size,\n            height: size,\n        }\n    }\n}\n\n// \u901a\u8fc7 `::` \u8bed\u6cd5\u8c03\u7528\nlet sq = Rectangle::square(3);\n</code></pre>"},{"location":"chapter3_collections/#44-enum","title":"44. \u4ec0\u4e48\u662f\u679a\u4e3e (Enum)\uff1f\u5b83\u6709\u4ec0\u4e48\u4f18\u52bf\uff1f","text":"<p>\u7b54\uff1a \u679a\u4e3e\uff08enum\uff09\u5141\u8bb8\u4f60\u5b9a\u4e49\u4e00\u4e2a\u53ef\u4ee5\u62e5\u6709\u6570\u4e2a\u53d8\u4f53\uff08variants\uff09\u4e4b\u4e00\u7684\u7c7b\u578b\u3002\u5b83\u7684\u5f3a\u5927\u4e4b\u5904\u5728\u4e8e\uff0c\u4f60\u53ef\u4ee5\u5c06\u6570\u636e\u76f4\u63a5\u9644\u52a0\u5230\u679a\u4e3e\u7684\u6bcf\u4e2a\u53d8\u4f53\u4e2d\u3002</p> <pre><code>enum Message {\n    Quit, // \u6ca1\u6709\u5173\u8054\u6570\u636e\n    Move { x: i32, y: i32 }, // \u5173\u8054\u4e00\u4e2a\u533f\u540d\u7ed3\u6784\u4f53\n    Write(String), // \u5173\u8054\u4e00\u4e2a String\n    ChangeColor(i32, i32, i32), // \u5173\u8054\u4e09\u4e2a i32\n}\n</code></pre> <p>\u793a\u610f\u56fe\uff1aMessage \u53d8\u4f53</p> <p><pre><code>flowchart LR\n  Message[Message] --&gt; Quit\n  Message --&gt; Move\n  Message --&gt; Write\n  Message --&gt; ChangeColor</code></pre> \u4f18\u52bf\u5728\u4e8e\uff0c\u4e00\u4e2a <code>Message</code> \u7c7b\u578b\u7684\u503c\u53ef\u4ee5\u662f\u4ee5\u4e0a\u56db\u79cd\u53d8\u4f53\u4e2d\u7684\u4efb\u4f55\u4e00\u79cd\u3002\u8fd9\u5141\u8bb8\u6211\u4eec\u5728\u4e00\u4e2a\u7c7b\u578b\u4e2d\u7f16\u7801\u591a\u79cd\u72b6\u6001\u6216\u503c\u7684\u53ef\u80fd\u6027\uff0c\u5e76\u4e14\u7f16\u8bd1\u5668\u4f1a\u786e\u4fdd\u4f60\u5904\u7406\u4e86\u6240\u6709\u53ef\u80fd\u7684\u60c5\u51b5\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u4e3a\u679a\u4e3e\u5b9e\u73b0\u65b9\u6cd5\u5e76\u5339\u914d <pre><code>#[derive(Debug)]\nenum Message {\n    Quit,\n    Move { x: i32, y: i32 },\n    Write(String),\n    ChangeColor(i32, i32, i32),\n}\n\nimpl Message {\n    fn call(&amp;self) {\n        match self {\n            Message::Quit =&gt; println!(\"quit\"),\n            Message::Move { x, y } =&gt; println!(\"move to ({}, {})\", x, y),\n            Message::Write(s) =&gt; println!(\"write: {}\", s),\n            Message::ChangeColor(r, g, b) =&gt; println!(\"color: ({}, {}, {})\", r, g, b),\n        }\n    }\n}\n\nfn main() {\n    let m = Message::Move { x: 10, y: 20 };\n    m.call();\n}\n</code></pre></p>"},{"location":"chapter3_collections/#45-option","title":"45. <code>Option</code> \u679a\u4e3e\u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u5b83\u5f88\u91cd\u8981\uff1f","text":"<p>\u7b54\uff1a <code>Option&lt;T&gt;</code> \u662f\u6807\u51c6\u5e93\u4e2d\u4e00\u4e2a\u975e\u5e38\u91cd\u8981\u7684\u679a\u4e3e\uff0c\u5b83\u7528\u4e8e\u5904\u7406\u4e00\u4e2a\u503c\u201c\u53ef\u80fd\u4e3a\u7a7a\u201d\u7684\u60c5\u51b5\u3002\u5728\u5f88\u591a\u5176\u4ed6\u8bed\u8a00\u4e2d\uff0c\u8fd9\u7531 <code>null</code> \u6216 <code>nil</code> \u6765\u8868\u793a\uff0c\u4f46 <code>null</code> \u662f\u4e00\u4e2a\u81ed\u540d\u662d\u8457\u7684 bug \u4e4b\u6e90\u3002</p> <p>Rust \u6ca1\u6709 <code>null</code>\uff0c\u800c\u662f\u4f7f\u7528 <code>Option&lt;T&gt;</code>\uff1a <pre><code>enum Option&lt;T&gt; {\n    None, // \u8868\u793a\u6ca1\u6709\u503c\n    Some(T), // \u8868\u793a\u6709\u4e00\u4e2a T \u7c7b\u578b\u7684\u503c\n}\n</code></pre> <code>Option&lt;T&gt;</code> \u8ba9\u4f60\u5fc5\u987b\u5728\u7f16\u8bd1\u65f6\u5c31\u5904\u7406\u503c\u4e0d\u5b58\u5728\u7684\u60c5\u51b5\uff0c\u4ece\u800c\u907f\u514d\u4e86\u5728\u8fd0\u884c\u65f6\u51fa\u73b0\u201c\u7a7a\u6307\u9488\u201d\u9519\u8bef\u3002\u8fd9\u4f7f\u5f97\u4ee3\u7801\u66f4\u5b89\u5168\u3001\u66f4\u5065\u58ee\u3002</p>"},{"location":"chapter3_collections/#46-match","title":"46. <code>match</code> \u63a7\u5236\u6d41\u8fd0\u7b97\u7b26\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f","text":"<p>\u7b54\uff1a <code>match</code> \u662f\u4e00\u4e2a\u5f3a\u5927\u7684\u63a7\u5236\u6d41\u8fd0\u7b97\u7b26\uff0c\u5b83\u5141\u8bb8\u4e00\u4e2a\u503c\u4e0e\u4e00\u7cfb\u5217\u7684\u6a21\u5f0f\uff08patterns\uff09\u8fdb\u884c\u6bd4\u8f83\uff0c\u5e76\u6839\u636e\u5339\u914d\u7684\u6a21\u5f0f\u6267\u884c\u76f8\u5e94\u7684\u4ee3\u7801\u3002\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u4e2a\u201c\u8d85\u7ea7 <code>if</code>\u201d\u3002</p> <p><code>match</code> \u7684\u4e00\u4e2a\u5173\u952e\u7279\u6027\u662f\u5b83\u662f\u7a77\u5c3d\u7684 (exhaustive)\u3002\u4f60\u5fc5\u987b\u4e3a\u6240\u6709\u53ef\u80fd\u7684\u503c\u7f16\u5199\u5206\u652f\uff0c\u5426\u5219\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\u3002\u8fd9\u4e0e <code>Option</code> \u548c\u5176\u4ed6\u679a\u4e3e\u914d\u5408\u4f7f\u7528\u65f6\u5c24\u5176\u5f3a\u5927\u3002</p> <pre><code>fn plus_one(x: Option&lt;i32&gt;) -&gt; Option&lt;i32&gt; {\n    match x {\n        None =&gt; None,\n        Some(i) =&gt; Some(i + 1),\n    }\n}\n</code></pre> <p>\u793a\u610f\u56fe\uff1aOption \u5339\u914d\u6d41\u7a0b</p> <pre><code>flowchart LR\n  X[Option] --&gt; S[Some branch]\n  X --&gt; N[None branch]</code></pre>"},{"location":"chapter3_collections/#47-if-let","title":"47. <code>if let</code> \u8bed\u6cd5\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a <code>if let</code> \u662f\u4e00\u79cd\u66f4\u7b80\u6d01\u7684\u8bed\u6cd5\uff0c\u7528\u4e8e\u5904\u7406\u53ea\u5173\u5fc3 <code>match</code> \u4e2d\u67d0\u4e00\u4e2a\u5206\u652f\u7684\u60c5\u51b5\u3002\u5b83\u4e0d\u8981\u6c42\u7a77\u5c3d\u6240\u6709\u53ef\u80fd\u3002</p> <pre><code>let config_max = Some(3u8);\n\n// \u4f7f\u7528 match\nmatch config_max {\n    Some(max) =&gt; println!(\"The maximum is configured to be {}\", max),\n    _ =&gt; (), // \u5bf9\u4e8e\u4e0d\u5173\u5fc3\u7684\u5206\u652f\uff0c\u5fc5\u987b\u7528 `_` \u6765\u5904\u7406\n}\n\n// \u4f7f\u7528 if let\uff0c\u66f4\u7b80\u6d01\nif let Some(max) = config_max {\n    println!(\"The maximum is configured to be {}\", max);\n}\n</code></pre>"},{"location":"chapter3_collections/#48-vector","title":"48. \u4ec0\u4e48\u662f Vector\uff1f\u5982\u4f55\u4f7f\u7528\uff1f","text":"<p>\u7b54\uff1a <code>Vec&lt;T&gt;</code>\uff0c\u901a\u5e38\u79f0\u4e3a vector\uff0c\u662f\u4e00\u4e2a\u53ef\u589e\u957f\u7684\u3001\u5728\u5806\u4e0a\u5206\u914d\u7684\u6570\u7ec4\u7c7b\u578b\u3002\u5b83\u53ea\u80fd\u5b58\u50a8\u76f8\u540c\u7c7b\u578b <code>T</code> \u7684\u503c\u3002</p> <pre><code>// \u521b\u5efa\u4e00\u4e2a\u65b0\u7684 vector\nlet mut v: Vec&lt;i32&gt; = Vec::new();\n\n// \u4f7f\u7528 `vec!` \u5b8f\u521b\u5efa\u5e76\u521d\u59cb\u5316\nlet v2 = vec![1, 2, 3];\n\n// \u6dfb\u52a0\u5143\u7d20\nv.push(5);\nv.push(6);\n\n// \u8bfb\u53d6\u5143\u7d20\nlet third: &amp;i32 = &amp;v2[2]; // \u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee\uff0c\u5982\u679c\u8d8a\u754c\u4f1a panic\nlet fourth: Option&lt;&amp;i32&gt; = v.get(3); // \u4f7f\u7528 get\uff0c\u8fd4\u56de Option\uff0c\u66f4\u5b89\u5168\n</code></pre> <p>\u793a\u610f\u56fe\uff1aVec \u6269\u5bb9\u6d41\u7a0b\uff08\u6982\u5ff5\uff09</p> <pre><code>flowchart LR\n  A[cap] --&gt;|push \u8d85\u9650| R[realloc]\n  R --&gt; C[copy old]\n  C --&gt; U[update ptr/cap]</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u5bb9\u91cf\u3001\u63d2\u5165\u5220\u9664\u3001\u6392\u5e8f\u3001\u53bb\u91cd\u4e0e\u4fdd\u7559 <pre><code>fn main() {\n    let mut v = Vec::with_capacity(10);\n    v.extend([3, 1, 4, 1, 5, 9]);\n    println!(\"len={}, cap={}\", v.len(), v.capacity());\n\n    // \u63d2\u5165\u4e0e\u5220\u9664\n    v.insert(1, 42); // \u5728\u7d22\u5f151\u63d2\u5165\n    let removed = v.remove(0); // \u79fb\u9664\u7d22\u5f150\u5143\u7d20\n    println!(\"removed={}, v={:?}\", removed, v);\n\n    // \u6392\u5e8f\u4e0e\u53bb\u91cd\uff08\u9700\u8981\u53ef\u6392\u5e8f\u5143\u7d20\uff09\n    v.sort();\n    v.dedup();\n    println!(\"sorted+dedup: {:?}\", v);\n\n    // \u8fc7\u6ee4\u4fdd\u7559\n    v.retain(|x| *x % 2 == 1);\n    println!(\"\u4fdd\u7559\u5947\u6570: {:?}\", v);\n\n    // \u8fed\u4ee3\u8f6c\u6362\n    let doubled: Vec&lt;_&gt; = v.iter().map(|x| x * 2).collect();\n    println!(\"\u7ffb\u500d: {:?}\", doubled);\n}\n</code></pre></p>"},{"location":"chapter3_collections/#49-vector","title":"49. \u5982\u4f55\u904d\u5386 Vector \u4e2d\u7684\u5143\u7d20\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>for</code> \u5faa\u73af\u3002\u4f60\u53ef\u4ee5\u9009\u62e9\u4e0d\u53ef\u53d8\u5730\u904d\u5386\u3001\u53ef\u53d8\u5730\u904d\u5386\u6216\u83b7\u53d6\u6240\u6709\u6743\u3002</p> <pre><code>let v = vec![100, 32, 57];\n\n// \u4e0d\u53ef\u53d8\u904d\u5386\nfor i in &amp;v {\n    println!(\"{}\", i);\n}\n\nlet mut v_mut = vec![100, 32, 57];\n// \u53ef\u53d8\u904d\u5386\nfor i in &amp;mut v_mut {\n    *i += 50; // \u4f7f\u7528\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26 `*` \u6765\u4fee\u6539\u503c\n}\n</code></pre>"},{"location":"chapter3_collections/#50-rust-string","title":"50. Rust \u4e2d\u7684\u5b57\u7b26\u4e32 (String) \u662f\u5982\u4f55\u5b9e\u73b0\u7684\uff1f","text":"<p>\u7b54\uff1a <code>String</code> \u7c7b\u578b\u5b9e\u9645\u4e0a\u662f <code>Vec&lt;u8&gt;</code> \u7684\u4e00\u4e2a\u5305\u88c5\u3002\u5b83\u662f\u4e00\u4e2a\u5728\u5806\u4e0a\u5206\u914d\u3001\u53ef\u589e\u957f\u3001\u53ef\u53d8\u7684 UTF-8 \u7f16\u7801\u7684\u5b57\u8282\u5e8f\u5217\u3002</p> <ul> <li><code>String</code> \u62e5\u6709\u5176\u6570\u636e\u7684\u6240\u6709\u6743\u3002</li> <li><code>&amp;str</code>\uff08\u5b57\u7b26\u4e32\u5207\u7247\uff09\u662f\u5bf9 <code>String</code> \u4e2d\u6570\u636e\u7684\u501f\u7528\u3002</li> </ul>"},{"location":"chapter3_collections/#51-string","title":"51. \u5982\u4f55\u521b\u5efa\u548c\u66f4\u65b0\u4e00\u4e2a <code>String</code>\uff1f","text":"<p>\u7b54\uff1a <pre><code>// \u521b\u5efa\u4e00\u4e2a\u7a7a String\nlet mut s = String::new();\n\n// \u4ece\u5b57\u7b26\u4e32\u5b57\u9762\u91cf\u521b\u5efa\nlet s1 = \"initial contents\".to_string();\nlet s2 = String::from(\"initial contents\");\n\n// \u66f4\u65b0 String\nlet mut s3 = String::from(\"foo\");\ns3.push_str(\"bar\"); // \u8ffd\u52a0\u4e00\u4e2a &amp;str\ns3.push('!'); // \u8ffd\u52a0\u4e00\u4e2a\u5b57\u7b26\n\n// \u4f7f\u7528 `+` \u8fd0\u7b97\u7b26\u8fde\u63a5\uff08\u4f1a\u83b7\u5f97 s3 \u7684\u6240\u6709\u6743\uff09\nlet s4 = s3 + &amp;s1; \n\n// \u4f7f\u7528 `format!` \u5b8f\uff08\u4e0d\u4f1a\u83b7\u5f97\u4efb\u4f55\u53c2\u6570\u7684\u6240\u6709\u6743\uff09\nlet s5 = format!(\"{}-{}-{}\", s2, s1, s4);\n</code></pre></p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u904d\u5386\u5b57\u7b26\u4e0e\u5b57\u8282\u3001\u67e5\u627e\u4e0e\u66ff\u6362\u3001\u622a\u65ad\u4e0e\u6e05\u7406 <pre><code>fn main() {\n    let mut s = String::from(\"h\u00e9llo, \u4e16\u754c \ud83d\udc4b\");\n\n    // \u6309\u5b57\u7b26\u904d\u5386\uff08Unicode \u6807\u91cf\uff09\n    for ch in s.chars() {\n        print!(\"[{}]\", ch);\n    }\n    println!();\n\n    // \u6309\u5b57\u8282\u904d\u5386\n    for b in s.bytes() {\n        print!(\"{} \", b);\n    }\n    println!();\n\n    // \u67e5\u627e\u4e0e\u66ff\u6362\n    if let Some(pos) = s.find('\u4e16') {\n        println!(\"'\u4e16' \u51fa\u73b0\u5728\u5b57\u8282\u4f4d\u7f6e {}\", pos);\n    }\n    let replaced = s.replace(\"h\u00e9\", \"he\");\n    println!(\"\u66ff\u6362\u540e: {}\", replaced);\n\n    // \u622a\u65ad\uff08\u6ce8\u610f UTF-8 \u8fb9\u754c\uff09\n    s.truncate(5); // \u4ee5\u5b57\u8282\u4e3a\u5355\u4f4d\uff0c\u9700\u786e\u4fdd\u5728\u5b57\u7b26\u8fb9\u754c\n    println!(\"\u622a\u65ad\u540e: {}\", s);\n\n    // \u6e05\u7a7a\n    s.clear();\n    println!(\"\u6e05\u7a7a\u540e\u957f\u5ea6: {}\", s.len());\n}\n</code></pre></p>"},{"location":"chapter3_collections/#52-string","title":"52. \u4e3a\u4ec0\u4e48\u4e0d\u80fd\u901a\u8fc7\u7d22\u5f15\u8bbf\u95ee <code>String</code> \u7684\u5b57\u7b26\uff1f","text":"<p>\u7b54\uff1a \u56e0\u4e3a Rust \u7684 <code>String</code> \u662f UTF-8 \u7f16\u7801\u7684\u3002\u5728 UTF-8 \u4e2d\uff0c\u4e00\u4e2a\u5b57\u7b26\u53ef\u80fd\u5360\u7528 1 \u5230 4 \u4e2a\u5b57\u8282\u3002\u56e0\u6b64\uff0c<code>O(1)</code> \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u7d22\u5f15\u64cd\u4f5c\u65e0\u6cd5\u4fdd\u8bc1\u8fd4\u56de\u4e00\u4e2a\u6709\u6548\u7684\u5b57\u7b26\u3002</p> <p>\u4f8b\u5982\uff0c<code>\"\u0928\u092e\u0938\u094d\u0924\u0947\"</code> \u8fd9\u4e2a\u5b57\u7b26\u4e32\uff0c\u4ece\u5b57\u8282\u4e0a\u770b\u662f <code>[224, 164, ...]</code>\uff0c<code>&amp;s[0]</code> \u5e76\u4e0d\u662f\u4e00\u4e2a\u5b8c\u6574\u7684\u5b57\u7b26 <code>'\u0928'</code>\u3002</p> <p>\u5982\u679c\u4f60\u786e\u5b9e\u9700\u8981\u904d\u5386\u5b57\u7b26\uff0c\u5e94\u8be5\u4f7f\u7528 <code>.chars()</code> \u65b9\u6cd5\u3002</p> <pre><code>for c in \"\u0417\u0434\".chars() {\n    println!(\"{}\", c); // \u4f1a\u6b63\u786e\u6253\u5370 '\u0417' \u548c '\u0434'\n}\n</code></pre> <p>\u793a\u610f\u56fe\uff1aString/Chars/Bytes \u5173\u7cfb</p> <pre><code>flowchart LR\n  STR[String] --&gt; CH[chars]\n  STR --&gt; BY[bytes]</code></pre>"},{"location":"chapter3_collections/#53-hashmap","title":"53. \u4ec0\u4e48\u662f HashMap\uff1f\u5982\u4f55\u4f7f\u7528\uff1f","text":"<p>\u7b54\uff1a <code>HashMap&lt;K, V&gt;</code> \u7528\u4e8e\u5b58\u50a8\u952e\uff08\u7c7b\u578b <code>K</code>\uff09\u548c\u503c\uff08\u7c7b\u578b <code>V</code>\uff09\u4e4b\u95f4\u7684\u6620\u5c04\u5173\u7cfb\u3002\u5b83\u901a\u8fc7\u54c8\u5e0c\u51fd\u6570\u6765\u5b9e\u73b0\uff0c\u53ef\u4ee5\u63d0\u4f9b\u5e73\u5747 <code>O(1)</code> \u65f6\u95f4\u590d\u6742\u5ea6\u7684\u8bbf\u95ee\u3002</p> <pre><code>use std::collections::HashMap;\n\nlet mut scores = HashMap::new();\n\n// \u63d2\u5165\u952e\u503c\u5bf9\nscores.insert(String::from(\"Blue\"), 10);\nscores.insert(String::from(\"Yellow\"), 50);\n\n// \u83b7\u53d6\u503c\nlet team_name = String::from(\"Blue\");\nlet score = scores.get(&amp;team_name).copied().unwrap_or(0); // get \u8fd4\u56de Option\n\n// \u904d\u5386\nfor (key, value) in &amp;scores {\n    println!(\"{}: {}\", key, value);\n}\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u5355\u8bcd\u8ba1\u6570\u4e0e <code>or_insert_with</code> <pre><code>use std::collections::HashMap;\n\nfn main() {\n    let text = \"hello world wonderful world\";\n    let mut counts: HashMap&lt;&amp;str, usize&gt; = HashMap::new();\n\n    for word in text.split_whitespace() {\n        *counts.entry(word).or_insert(0) += 1;\n    }\n    println!(\"\u8ba1\u6570: {:?}\", counts);\n\n    // \u60f0\u6027\u521d\u59cb\u5316\u5f00\u9500\u8f83\u5927\u7684\u9ed8\u8ba4\u503c\n    let mut cache: HashMap&lt;String, String&gt; = HashMap::new();\n    let key = \"config\".to_string();\n    let value = cache.entry(key).or_insert_with(|| expensive_load());\n    println!(\"\u52a0\u8f7d\u503c: {}\", value);\n}\n\nfn expensive_load() -&gt; String {\n    // \u6a21\u62df\u8017\u65f6\u8ba1\u7b97/IO\n    \"default\".to_string()\n}\n</code></pre></p>"},{"location":"chapter3_collections/#54-hashmap","title":"54. HashMap \u5982\u4f55\u5904\u7406\u952e\u7684\u6240\u6709\u6743\uff1f","text":"<p>\u7b54\uff1a \u5bf9\u4e8e\u5b9e\u73b0\u4e86 <code>Copy</code> trait \u7684\u7c7b\u578b\uff08\u5982 <code>i32</code>\uff09\uff0c\u952e\u7684\u503c\u4f1a\u88ab\u590d\u5236\u5230 <code>HashMap</code> \u4e2d\u3002 \u5bf9\u4e8e\u62e5\u6709\u6240\u6709\u6743\u7684\u7c7b\u578b\uff08\u5982 <code>String</code>\uff09\uff0c\u503c\u7684\u6240\u6709\u6743\u5c06\u88ab\u79fb\u52a8\u5230 <code>HashMap</code> \u4e2d\u3002</p> <pre><code>let field_name = String::from(\"Favorite color\");\nlet field_value = String::from(\"Blue\");\n\nlet mut map = HashMap::new();\nmap.insert(field_name, field_value);\n\n// field_name \u548c field_value \u5728\u8fd9\u91cc\u4e0d\u518d\u6709\u6548\uff0c\u56e0\u4e3a\u6240\u6709\u6743\u88ab\u79fb\u52a8\u4e86\n// println!(\"{}\", field_name); // \u7f16\u8bd1\u9519\u8bef\uff01\n</code></pre>"},{"location":"chapter3_collections/#55-hashmap","title":"55. \u5982\u4f55\u5728 HashMap \u4e2d\u53ea\u5728\u952e\u4e0d\u5b58\u5728\u65f6\u63d2\u5165\u503c\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>entry</code> API\uff0c\u5b83\u8fd4\u56de\u4e00\u4e2a\u540d\u4e3a <code>Entry</code> \u7684\u679a\u4e3e\u3002<code>or_insert</code> \u65b9\u6cd5\u4f1a\u5728\u952e\u4e0d\u5b58\u5728\u65f6\u63d2\u5165\u7ed9\u5b9a\u7684\u503c\uff0c\u5e76\u8fd4\u56de\u4e00\u4e2a\u53ef\u53d8\u7684\u5f15\u7528\u3002</p> <p>\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u9ad8\u6548\u548c\u7b80\u6d01\u7684\u5904\u7406\u65b9\u5f0f\uff0c\u907f\u514d\u4e86\u5148\u68c0\u67e5\u518d\u63d2\u5165\u7684\u4e24\u6b65\u64cd\u4f5c\u3002</p> <pre><code>let mut scores = HashMap::new();\nscores.insert(String::from(\"Blue\"), 10);\n\n// \"Blue\" \u952e\u5df2\u5b58\u5728\uff0c\u4ec0\u4e48\u90fd\u4e0d\u505a\nscores.entry(String::from(\"Blue\")).or_insert(50);\n\n// \"Red\" \u952e\u4e0d\u5b58\u5728\uff0c\u63d2\u5165 30\nscores.entry(String::from(\"Red\")).or_insert(30);\n\nprintln!(\"{:?}\", scores); // {\"Blue\": 10, \"Red\": 30}\n</code></pre> <p>\u793a\u610f\u56fe\uff1aHashMap entry API \u5206\u652f</p> <pre><code>flowchart LR\n  Q[entry] --&gt; E1[Occupied]\n  Q --&gt; E2[Vacant]\n  E1 --&gt; OR[or_insert -&gt; &amp;mut V]\n  E2 --&gt; INS[insert default -&gt; &amp;mut V]</code></pre>"},{"location":"chapter4_advanced/","title":"\u7b2c\u56db\u7ae0\uff1a\u9ad8\u7ea7\u7279\u6027","text":"<p>\u672c\u7ae0\u5c06\u6df1\u5165\u63a2\u8ba8\u4f7f Rust \u6210\u4e3a\u4e00\u95e8\u5bcc\u6709\u8868\u73b0\u529b\u4e14\u529f\u80fd\u5f3a\u5927\u7684\u8bed\u8a00\u7684\u9ad8\u7ea7\u7279\u6027\u3002\u6211\u4eec\u5c06\u6db5\u76d6\u6cdb\u578b\u3001trait\u3001\u667a\u80fd\u6307\u9488\u3001\u95ed\u5305\u548c\u8fed\u4ee3\u5668\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u667a\u80fd\u6307\u9488\u751f\u6001\u4e0e\u5173\u7cfb</p> <pre><code>graph LR\n  Box --&gt; Heap[\u5806\u5206\u914d]\n  Rc --&gt; Owners[\u591a\u6240\u6709\u8005]\n  Arc --&gt; ThreadSafe[\u7ebf\u7a0b\u5b89\u5168\u591a\u6240\u6709\u8005]\n  RefCell --&gt; BorrowCheck[\u8fd0\u884c\u65f6\u501f\u7528\u68c0\u67e5]\n  Cell --&gt; CellSet[\u6309\u503c set]\n  Rc --&gt; RefCell\n  Arc --&gt; Mutex\n  Mutex --&gt; Exclusive[\u4e92\u65a5\u8bbf\u95ee]\n  RwLock --&gt; RW[\u591a\u8bfb\u5355\u5199]</code></pre>"},{"location":"chapter4_advanced/#56-generics","title":"56. \u4ec0\u4e48\u662f\u6cdb\u578b (Generics)\uff1f","text":"<p>\u7b54\uff1a \u6cdb\u578b\u662f\u4e00\u79cd\u7f16\u7a0b\u8bed\u8a00\u7279\u6027\uff0c\u5b83\u5141\u8bb8\u6211\u4eec\u5728\u5b9a\u4e49\u51fd\u6570\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u7b49\u65f6\u4e0d\u6307\u5b9a\u5177\u4f53\u7684\u7c7b\u578b\uff0c\u800c\u662f\u4f7f\u7528\u4e00\u4e2a\u62bd\u8c61\u7684\u201c\u7c7b\u578b\u53c2\u6570\u201d\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u66f4\u7075\u6d3b\u3001\u53ef\u91cd\u7528\u4e14\u4e0d\u4f1a\u727a\u7272\u7c7b\u578b\u5b89\u5168\u7684\u4ee3\u7801\u3002</p> <pre><code>// \u6cdb\u578b\u51fd\u6570\uff1aT \u53ef\u4ee5\u662f\u4efb\u4f55\u7c7b\u578b\nfn identity&lt;T&gt;(item: T) -&gt; T {\n    item\n}\n\n// \u6cdb\u578b\u7ed3\u6784\u4f53\uff1a\u53ef\u4ee5\u6301\u6709\u4efb\u4f55\u7c7b\u578b\u7684 x \u548c y\nstruct Point&lt;T&gt; {\n    x: T,\n    y: T,\n}\n\nlet integer_point = Point { x: 5, y: 10 };\nlet float_point = Point { x: 1.0, y: 4.0 };\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1atrait bound\u3001where \u5b50\u53e5\u4e0e const generics <pre><code>// \u4f7f\u7528 trait bound \u7ea6\u675f T \u5fc5\u987b\u53ef\u6bd4\u8f83\u548c\u53ef\u663e\u793a\nfn max_display&lt;T&gt;(a: T, b: T) -&gt; T\nwhere\n    T: std::cmp::Ord + std::fmt::Display,\n{\n    let m = if a &gt;= b { a } else { b };\n    println!(\"max = {}\", m);\n    m\n}\n\n// const generics\uff1a\u5728\u7c7b\u578b\u5c42\u9762\u643a\u5e26\u5e38\u91cf\u53c2\u6570\nstruct FixedVec&lt;T, const N: usize&gt; {\n    data: [T; N],\n}\n\nimpl&lt;T: Default + Copy, const N: usize&gt; FixedVec&lt;T, N&gt; {\n    fn new() -&gt; Self { Self { data: [T::default(); N] } }\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#57-trait-interface","title":"57. \u4ec0\u4e48\u662f Trait\uff1f\u5b83\u548c\u63a5\u53e3 (Interface) \u6709\u4ec0\u4e48\u5173\u7cfb\uff1f","text":"<p>\u7b54\uff1a Trait \u7528\u4e8e\u544a\u8bc9 Rust \u7f16\u8bd1\u5668\u67d0\u79cd\u7c7b\u578b\u5177\u6709\u54ea\u4e9b\u5e76\u4e14\u53ef\u4ee5\u4e0e\u5176\u5b83\u7c7b\u578b\u5171\u4eab\u7684\u529f\u80fd\u3002\u5b83\u7c7b\u4f3c\u4e8e\u5176\u4ed6\u8bed\u8a00\u4e2d\u7684\u63a5\u53e3\uff08Interface\uff09\uff0c\u7528\u4e8e\u5b9a\u4e49\u5171\u4eab\u7684\u884c\u4e3a\u3002</p> <p><pre><code>pub trait Summary {\n    fn summarize_author(&amp;self) -&gt; String;\n\n    // \u5e26\u6709\u9ed8\u8ba4\u5b9e\u73b0\u7684\u65b9\u6cd5\n    fn summarize(&amp;self) -&gt; String {\n        format!(\"(Read more from {}...)\", self.summarize_author())\n    }\n}\n</code></pre> \u4e00\u4e2a\u7c7b\u578b\u53ef\u4ee5\u901a\u8fc7 <code>impl Trait for Type</code> \u7684\u8bed\u6cd5\u6765\u5b9e\u73b0\u4e00\u4e2a trait\uff0c\u4ece\u800c\u4fdd\u8bc1\u8be5\u7c7b\u578b\u62e5\u6709 trait \u4e2d\u5b9a\u4e49\u7684\u6240\u6709\u65b9\u6cd5\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u4e3a\u591a\u79cd\u7c7b\u578b\u5b9e\u73b0 trait\uff0c\u91cd\u5199\u9ed8\u8ba4\u65b9\u6cd5 <pre><code>pub trait Summary {\n    fn summarize_author(&amp;self) -&gt; String;\n    fn summarize(&amp;self) -&gt; String { format!(\"(more from {})\", self.summarize_author()) }\n}\n\npub struct Article { pub author: String, pub title: String }\npub struct Tweet { pub user: String, pub content: String }\n\nimpl Summary for Article {\n    fn summarize_author(&amp;self) -&gt; String { self.author.clone() }\n    fn summarize(&amp;self) -&gt; String { format!(\"{} - {}\", self.title, self.author) }\n}\n\nimpl Summary for Tweet {\n    fn summarize_author(&amp;self) -&gt; String { self.user.clone() }\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#58-trait","title":"58. \u5982\u4f55\u4f7f\u7528 Trait \u4f5c\u4e3a\u51fd\u6570\u53c2\u6570\uff1f","text":"<p>\u7b54\uff1a \u4f60\u53ef\u4ee5\u4f7f\u7528 <code>impl Trait</code> \u8bed\u6cd5\u6216\u201ctrait bound\u201d\u8bed\u6cd5\uff0c\u6765\u63a5\u53d7\u4efb\u4f55\u5b9e\u73b0\u4e86\u7279\u5b9a trait \u7684\u7c7b\u578b\u4f5c\u4e3a\u53c2\u6570\u3002</p> <p><pre><code>// \u4f7f\u7528 impl Trait (\u66f4\u7b80\u6d01)\npub fn notify(item: &amp;impl Summary) {\n    println!(\"Breaking news! {}\", item.summarize());\n}\n\n// \u4f7f\u7528 trait bound (\u66f4\u901a\u7528\uff0c\u9002\u7528\u4e8e\u590d\u6742\u60c5\u51b5)\npub fn notify_long&lt;T: Summary&gt;(item: &amp;T) {\n    println!(\"Breaking news! {}\", item.summarize());\n}\n</code></pre> \u8fd9\u4f7f\u5f97\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u591a\u79cd\u4e0d\u540c\u7c7b\u578b\u7684\u503c\uff0c\u53ea\u8981\u5b83\u4eec\u90fd\u5b9e\u73b0\u4e86 <code>Summary</code> trait\u3002</p>"},{"location":"chapter4_advanced/#59-trait","title":"59. \u5982\u4f55\u8fd4\u56de\u5b9e\u73b0\u4e86 Trait \u7684\u7c7b\u578b\uff1f","text":"<p>\u7b54\uff1a \u4f60\u4e5f\u53ef\u4ee5\u5728\u8fd4\u56de\u503c\u4f4d\u7f6e\u4f7f\u7528 <code>impl Trait</code>\uff0c\u6765\u8fd4\u56de\u4e00\u4e2a\u5b9e\u73b0\u4e86\u67d0\u4e2a trait \u7684\u5177\u4f53\u7c7b\u578b\uff0c\u800c\u65e0\u9700\u5199\u51fa\u8be5\u7c7b\u578b\u7684\u786e\u5207\u540d\u79f0\u3002</p> <p>\u8fd9\u5bf9\u4e8e\u8fd4\u56de\u95ed\u5305\u6216\u8fed\u4ee3\u5668\u8fd9\u7c7b\u7c7b\u578b\u7279\u522b\u6709\u7528\uff0c\u56e0\u4e3a\u5b83\u4eec\u7684\u5177\u4f53\u7c7b\u578b\u53ef\u80fd\u975e\u5e38\u590d\u6742\uff0c\u751a\u81f3\u65e0\u6cd5\u5199\u51fa\u3002</p> <pre><code>fn returns_summarizable() -&gt; impl Summary {\n    Tweet { // Tweet \u662f\u4e00\u4e2a\u5b9e\u73b0\u4e86 Summary \u7684\u7ed3\u6784\u4f53\n        username: String::from(\"horse_ebooks\"),\n        content: String::from(\"of course, as you probably already know, people\"),\n        reply: false,\n        retweet: false,\n    }\n}\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u8fd4\u56de\u95ed\u5305\u4e0e\u8fed\u4ee3\u5668 <pre><code>// \u8fd4\u56de\u95ed\u5305\uff08\u4f7f\u7528 impl Trait \u9690\u85cf\u590d\u6742\u8fd4\u56de\u7c7b\u578b\uff09\nfn make_adder(x: i32) -&gt; impl Fn(i32) -&gt; i32 { move |y| x + y }\n\n// \u8fd4\u56de\u8fed\u4ee3\u5668\uff08\u94fe\u5f0f\u9002\u914d\u5668\uff09\nfn evens_up_to(n: u32) -&gt; impl Iterator&lt;Item = u32&gt; {\n    (0..=n).filter(|v| v % 2 == 0)\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#60-smart-pointers","title":"60. \u4ec0\u4e48\u662f\u667a\u80fd\u6307\u9488 (Smart Pointers)\uff1f","text":"<p>\u7b54\uff1a \u667a\u80fd\u6307\u9488\u662f\u4e00\u7c7b\u6570\u636e\u7ed3\u6784\uff0c\u5b83\u4eec\u7684\u884c\u4e3a\u7c7b\u4f3c\u4e8e\u6307\u9488\uff0c\u4f46\u8fd8\u62e5\u6709\u989d\u5916\u7684\u5143\u6570\u636e\u548c\u80fd\u529b\u3002\u5b83\u4eec\u901a\u5e38\u901a\u8fc7\u5b9e\u73b0 <code>Deref</code> \u548c <code>Drop</code> trait \u6765\u5b9e\u73b0\u8fd9\u4e9b\u529f\u80fd\u3002</p> <ul> <li><code>Deref</code> trait \u5141\u8bb8\u667a\u80fd\u6307\u9488\u5b9e\u4f8b\u7684\u884c\u4e3a\u50cf\u5f15\u7528\u4e00\u6837\uff0c\u8fd9\u6837\u4f60\u5c31\u53ef\u4ee5\u7f16\u5199\u65e2\u9002\u7528\u4e8e\u667a\u80fd\u6307\u9488\u4e5f\u9002\u7528\u4e8e\u666e\u901a\u5f15\u7528\u7684\u4ee3\u7801\u3002</li> <li><code>Drop</code> trait \u5141\u8bb8\u4f60\u81ea\u5b9a\u4e49\u5f53\u667a\u80fd\u6307\u9488\u5b9e\u4f8b\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u8fd0\u884c\u7684\u4ee3\u7801\uff0c\u901a\u5e38\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\u3002</li> </ul> <p><code>String</code> \u548c <code>Vec&lt;T&gt;</code> \u5b9e\u9645\u4e0a\u5c31\u662f\u667a\u80fd\u6307\u9488\u3002</p>"},{"location":"chapter4_advanced/#61-boxt","title":"61. <code>Box&lt;T&gt;</code> \u662f\u4ec0\u4e48\uff1f\u5b83\u6709\u4ec0\u4e48\u7528\uff1f","text":"<p>\u7b54\uff1a <code>Box&lt;T&gt;</code> \u662f\u6700\u7b80\u5355\u7684\u667a\u80fd\u6307\u9488\uff0c\u5b83\u5141\u8bb8\u4f60\u5c06\u6570\u636e\u5b58\u50a8\u5728\u5806\u4e0a\u800c\u4e0d\u662f\u6808\u4e0a\uff0c\u800c\u6307\u9488\u672c\u8eab\u7559\u5728\u6808\u4e0a\u3002</p> <p>\u4e3b\u8981\u7528\u9014\uff1a 1.  \u5f53\u6709\u4e00\u4e2a\u5728\u7f16\u8bd1\u65f6\u65e0\u6cd5\u786e\u5b9a\u5927\u5c0f\u7684\u7c7b\u578b\uff0c\u800c\u53c8\u60f3\u5728\u9700\u8981\u786e\u5207\u5927\u5c0f\u7684\u4e0a\u4e0b\u6587\u4e2d\u4f7f\u7528\u5b83\u65f6\uff08\u4f8b\u5982\u9012\u5f52\u7c7b\u578b\uff09\u3002 2.  \u5f53\u4f60\u62e5\u6709\u5927\u91cf\u6570\u636e\u5e76\u5e0c\u671b\u8f6c\u79fb\u6240\u6709\u6743\uff0c\u4f46\u53c8\u4e0d\u5e0c\u671b\u5728\u79fb\u52a8\u65f6\u590d\u5236\u6240\u6709\u6570\u636e\u65f6\u3002 3.  \u5f53\u4f60\u5e0c\u671b\u62e5\u6709\u4e00\u4e2a\u503c\uff0c\u53ea\u5173\u5fc3\u5b83\u662f\u5426\u5b9e\u73b0\u4e86\u67d0\u4e2a\u7279\u5b9a\u7684 trait\uff0c\u800c\u4e0d\u662f\u5b83\u7684\u5177\u4f53\u7c7b\u578b\u65f6\uff08trait object\uff09\u3002</p> <pre><code>// \u9012\u5f52\u7c7b\u578b\u793a\u4f8b\uff1aCons List\nenum List {\n    Cons(i32, Box&lt;List&gt;),\n    Nil,\n}\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>Box</code> \u4e0e trait object <pre><code>trait Draw { fn draw(&amp;self); }\n\nimpl Draw for String { fn draw(&amp;self) { println!(\"label: {}\", self); } }\n\nfn draw_widget(widget: Box&lt;dyn Draw&gt;) { widget.draw(); }\n\nfn main() {\n    let w: Box&lt;dyn Draw&gt; = Box::new(String::from(\"OK\"));\n    draw_widget(w);\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#62-rct-boxt","title":"62. <code>Rc&lt;T&gt;</code> \u662f\u4ec0\u4e48\uff1f\u5b83\u548c <code>Box&lt;T&gt;</code> \u6709\u4ec0\u4e48\u4e0d\u540c\uff1f","text":"<p>\u7b54\uff1a <code>Rc&lt;T&gt;</code> \u662f\u5f15\u7528\u8ba1\u6570 (Reference Counting) \u667a\u80fd\u6307\u9488\u3002\u5b83\u5141\u8bb8\u591a\u4e2a\u6240\u6709\u8005\u5171\u540c\u62e5\u6709\u540c\u4e00\u4efd\u6570\u636e\u3002</p> <ul> <li>\u5f53\u514b\u9686 <code>Rc&lt;T&gt;</code> \u65f6\uff0c\u5b83\u4e0d\u4f1a\u6df1\u62f7\u8d1d\u6570\u636e\uff0c\u800c\u662f\u589e\u52a0\u4e00\u4e2a\u5f15\u7528\u8ba1\u6570\u3002</li> <li>\u5f53\u4e00\u4e2a <code>Rc&lt;T&gt;</code> \u5b9e\u4f8b\u88ab drop \u65f6\uff0c\u5f15\u7528\u8ba1\u6570\u51cf\u4e00\u3002</li> <li>\u53ea\u6709\u5f53\u5f15\u7528\u8ba1\u6570\u4e3a\u96f6\u65f6\uff0c\u6570\u636e\u624d\u4f1a\u88ab\u6e05\u7406\u3002</li> </ul> <p><code>Rc&lt;T&gt;</code> \u53ea\u80fd\u7528\u4e8e\u5355\u7ebf\u7a0b\u573a\u666f\u3002\u5b83\u4e0e <code>Box&lt;T&gt;</code> \u7684\u6838\u5fc3\u533a\u522b\u5728\u4e8e\uff0c<code>Box&lt;T&gt;</code> \u5f3a\u5236\u6267\u884c Rust \u7684\u5355\u4e00\u6240\u6709\u6743\u89c4\u5219\uff0c\u800c <code>Rc&lt;T&gt;</code> \u5141\u8bb8\u591a\u91cd\u6240\u6709\u6743\u3002</p> <pre><code>use std::rc::Rc;\n\nlet a = Rc::new(String::from(\"hello\"));\nlet b = Rc::clone(&amp;a); // \u589e\u52a0\u5f15\u7528\u8ba1\u6570\nlet c = Rc::clone(&amp;a); // \u518d\u6b21\u589e\u52a0\u5f15\u7528\u8ba1\u6570\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>Rc&lt;RefCell&lt;T&gt;&gt;</code> \u4e0e <code>Weak</code> \u6253\u7834\u5faa\u73af <pre><code>use std::cell::RefCell;\nuse std::rc::{Rc, Weak};\n\n#[derive(Debug)]\nstruct Node {\n    value: i32,\n    parent: RefCell&lt;Weak&lt;Node&gt;&gt;,\n    children: RefCell&lt;Vec&lt;Rc&lt;Node&gt;&gt;&gt;,\n}\n\nfn main() {\n    let leaf = Rc::new(Node { value: 3, parent: RefCell::new(Weak::new()), children: RefCell::new(vec![]) });\n    let branch = Rc::new(Node { value: 5, parent: RefCell::new(Weak::new()), children: RefCell::new(vec![Rc::clone(&amp;leaf)]) });\n    *leaf.parent.borrow_mut() = Rc::downgrade(&amp;branch); // \u4f7f\u7528 Weak \u4ee5\u907f\u514d\u5faa\u73af\u5f15\u7528\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#63-refcellt","title":"63. <code>RefCell&lt;T&gt;</code> \u548c\u5185\u90e8\u53ef\u53d8\u6027\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a <code>RefCell&lt;T&gt;</code> \u662f\u4e00\u4e2a\u5728\u8fd0\u884c\u65f6\u800c\u4e0d\u662f\u7f16\u8bd1\u65f6\u5f3a\u5236\u6267\u884c\u501f\u7528\u89c4\u5219\u7684\u667a\u80fd\u6307\u9488\u3002\u901a\u5e38\u60c5\u51b5\u4e0b\uff0c\u4f60\u4e0d\u80fd\u5728\u62e5\u6709\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528\u7684\u540c\u65f6\u518d\u83b7\u53d6\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\u3002\u4f46 <code>RefCell&lt;T&gt;</code> \u5141\u8bb8\u4f60\u8fd9\u6837\u505a\u3002</p> <p>\u8fd9\u79cd\u6a21\u5f0f\u88ab\u79f0\u4e3a\u5185\u90e8\u53ef\u53d8\u6027 (Interior Mutability)\uff0c\u5373\u4e00\u4e2a\u8868\u9762\u4e0a\u4e0d\u53ef\u53d8\u7684\u503c\uff0c\u5176\u5185\u90e8\u7684\u6570\u636e\u53ef\u4ee5\u88ab\u4fee\u6539\u3002</p> <ul> <li><code>borrow()</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u4e0d\u53ef\u53d8\u5f15\u7528 <code>Ref&lt;T&gt;</code>\u3002</li> <li><code>borrow_mut()</code> \u65b9\u6cd5\u8fd4\u56de\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528 <code>RefMut&lt;T&gt;</code>\u3002</li> </ul> <p>\u5982\u679c\u5728\u8fd0\u884c\u65f6\u8fdd\u53cd\u4e86\u501f\u7528\u89c4\u5219\uff08\u4f8b\u5982\uff0c\u5728\u5df2\u6709\u4e00\u4e2a\u53ef\u53d8\u501f\u7528\u7684\u60c5\u51b5\u4e0b\u518d\u6b21\u8bf7\u6c42\u53ef\u53d8\u501f\u7528\uff09\uff0c\u7a0b\u5e8f\u5c06\u4f1a <code>panic</code>\u3002</p>"},{"location":"chapter4_advanced/#64-rcrefcellt","title":"64. \u4e3a\u4ec0\u4e48\u9700\u8981 <code>Rc&lt;RefCell&lt;T&gt;&gt;</code> \u8fd9\u79cd\u7ec4\u5408\uff1f","text":"<p>\u7b54\uff1a <code>Rc&lt;T&gt;</code> \u5141\u8bb8\u591a\u4e2a\u6240\u6709\u8005\uff0c\u4f46\u662f\u5b83\u662f\u4e0d\u53ef\u53d8\u7684\u3002\u4f60\u4e0d\u80fd\u5728\u62e5\u6709\u591a\u4e2a <code>Rc&lt;T&gt;</code> \u6307\u9488\u7684\u60c5\u51b5\u4e0b\uff0c\u83b7\u53d6\u4e00\u4e2a\u53ef\u53d8\u5f15\u7528\u6765\u4fee\u6539\u6570\u636e\u3002</p> <p>\u901a\u8fc7\u5c06 <code>RefCell&lt;T&gt;</code> \u5305\u88c5\u5728 <code>Rc&lt;T&gt;</code> \u5185\u90e8\uff0c\u5373 <code>Rc&lt;RefCell&lt;T&gt;&gt;</code>\uff0c\u4f60\u53ef\u4ee5\u5b9e\u73b0\u62e5\u6709\u591a\u4e2a\u6240\u6709\u8005\uff0c\u5e76\u4e14\u53ef\u4ee5\u4fee\u6539\u6570\u636e\u3002</p> <ul> <li><code>Rc&lt;T&gt;</code> \u8d1f\u8d23\u5141\u8bb8\u591a\u4e2a\u6240\u6709\u8005\u3002</li> <li><code>RefCell&lt;T&gt;</code> \u8d1f\u8d23\u63d0\u4f9b\u5185\u90e8\u53ef\u53d8\u6027\uff0c\u5e76\u786e\u4fdd\u501f\u7528\u89c4\u5219\u5728\u8fd0\u884c\u65f6\u5f97\u5230\u9075\u5b88\u3002</li> </ul> <p>\u8fd9\u662f\u5728\u5355\u7ebf\u7a0b\u73af\u5883\u4e2d\u521b\u5efa\u590d\u6742\u6570\u636e\u7ed3\u6784\uff08\u5982\u56fe\u3001\u6811\uff09\u65f6\u975e\u5e38\u5e38\u89c1\u7684\u6a21\u5f0f\u3002</p>"},{"location":"chapter4_advanced/#65-closures","title":"65. \u4ec0\u4e48\u662f\u95ed\u5305 (Closures)\uff1f","text":"<p>\u7b54\uff1a \u95ed\u5305\u662f\u4e00\u79cd\u53ef\u4ee5\u6355\u83b7\u5176\u73af\u5883\u7684\u533f\u540d\u51fd\u6570\u3002 - \u533f\u540d: \u5b83\u4eec\u6ca1\u6709\u51fd\u6570\u540d\u3002 - \u6355\u83b7\u73af\u5883: \u5b83\u4eec\u53ef\u4ee5\u8bbf\u95ee\u5b9a\u4e49\u5b83\u4eec\u7684\u4f5c\u7528\u57df\u4e2d\u7684\u53d8\u91cf\u3002</p> <p><pre><code>let x = 4;\nlet equal_to_x = |z| z == x; // \u8fd9\u4e2a\u95ed\u5305\u6355\u83b7\u4e86 x\nlet y = 4;\nassert!(equal_to_x(y));\n</code></pre> \u95ed\u5305\u5728 Rust \u4e2d\u88ab\u5e7f\u6cdb\u7528\u4e8e\u8fed\u4ee3\u5668\u548c\u7ebf\u7a0b\u7b49\u573a\u666f\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>Fn</code>/<code>FnMut</code>/<code>FnOnce</code> \u6355\u83b7\u5dee\u5f02 <pre><code>fn call_fn&lt;F: Fn()&gt;(f: F) { f(); }\nfn call_fn_mut&lt;F: FnMut()&gt;(mut f: F) { f(); }\nfn call_fn_once&lt;F: FnOnce()&gt;(f: F) { f(); }\n\nfn main() {\n    let s = String::from(\"hello\");\n    let f_once = || drop(s); // \u83b7\u53d6\u6240\u6709\u6743 -&gt; FnOnce\n    call_fn_once(f_once);\n\n    let mut n = 0;\n    let mut f_mut = || { n += 1; }; // \u53ef\u53d8\u501f\u7528 -&gt; FnMut\n    call_fn_mut(f_mut);\n\n    let x = 1;\n    let f = || println!(\"{}\", x); // \u4e0d\u53ef\u53d8\u501f\u7528 -&gt; Fn\n    call_fn(f);\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#66","title":"66. \u95ed\u5305\u5982\u4f55\u6355\u83b7\u73af\u5883\uff1f\u6709\u54ea\u51e0\u79cd\u65b9\u5f0f\uff1f","text":"<p>\u7b54\uff1a \u95ed\u5305\u53ef\u4ee5\u901a\u8fc7\u4e09\u79cd\u65b9\u5f0f\u6355\u83b7\u53d8\u91cf\uff0c\u8fd9\u4e09\u79cd\u65b9\u5f0f\u5bf9\u5e94 <code>Fn</code>\u3001<code>FnMut</code> \u548c <code>FnOnce</code> \u4e09\u4e2a trait\u3002</p> <ol> <li><code>FnOnce</code>: \u95ed\u5305\u4f1a\u83b7\u53d6\u53d8\u91cf\u7684\u6240\u6709\u6743\u3002<code>Once</code> \u8868\u793a\u5b83\u81f3\u5c11\u9700\u8981\u83b7\u53d6\u6240\u6709\u6743\uff0c\u56e0\u6b64\u53ea\u80fd\u88ab\u8c03\u7528\u4e00\u6b21\u3002</li> <li><code>FnMut</code>: \u95ed\u5305\u4f1a\u53ef\u53d8\u5730\u501f\u7528\u53d8\u91cf\u3002<code>Mut</code> \u8868\u793a\u5b83\u53ef\u4ee5\u6539\u53d8\u73af\u5883\u4e2d\u7684\u53d8\u91cf\u3002</li> <li><code>Fn</code>: \u95ed\u5305\u4f1a\u4e0d\u53ef\u53d8\u5730\u501f\u7528\u53d8\u91cf\u3002</li> </ol> <p>Rust \u4f1a\u6839\u636e\u95ed\u5305\u5982\u4f55\u4f7f\u7528\u53d8\u91cf\u6765\u81ea\u52a8\u63a8\u65ad\u5b83\u5e94\u8be5\u5b9e\u73b0\u54ea\u4e2a trait\u3002</p>"},{"location":"chapter4_advanced/#67-move","title":"67. <code>move</code> \u5173\u952e\u5b57\u5728\u95ed\u5305\u4e2d\u6709\u4ec0\u4e48\u7528\uff1f","text":"<p>\u7b54\uff1a \u5728\u95ed\u5305\u524d\u4f7f\u7528 <code>move</code> \u5173\u952e\u5b57\u4f1a\u5f3a\u5236\u95ed\u5305\u83b7\u53d6\u5b83\u6240\u4f7f\u7528\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\u7684\u6240\u6709\u6743\u3002</p> <p>\u8fd9\u5728\u5c06\u95ed\u5305\u4f20\u9012\u7ed9\u65b0\u7ebf\u7a0b\u65f6\u975e\u5e38\u6709\u7528\uff0c\u53ef\u4ee5\u786e\u4fdd\u95ed\u5305\u6240\u5f15\u7528\u7684\u6570\u636e\u5728\u65b0\u7ebf\u7a0b\u4e2d\u662f\u6709\u6548\u7684\u3002</p> <pre><code>use std::thread;\n\nlet v = vec![1, 2, 3];\n\n// \u5982\u679c\u6ca1\u6709 move\uff0c\u7f16\u8bd1\u5668\u4f1a\u62a5\u9519\uff0c\u56e0\u4e3a\u5b83\u4e0d\u77e5\u9053 v \u5728\u65b0\u7ebf\u7a0b\u4e2d\u80fd\u6d3b\u591a\u4e45\nlet handle = thread::spawn(move || {\n    println!(\"Here's a vector: {:?}\", v);\n});\n\nhandle.join().unwrap();\n</code></pre>"},{"location":"chapter4_advanced/#68-iterators","title":"68. \u4ec0\u4e48\u662f\u8fed\u4ee3\u5668 (Iterators)\uff1f","text":"<p>\u7b54\uff1a \u8fed\u4ee3\u5668\u662f\u4e00\u79cd\u5141\u8bb8\u4f60\u5bf9\u4e00\u4e2a\u9879\u7684\u5e8f\u5217\uff08\u6bd4\u5982\u96c6\u5408\u4e2d\u7684\u5143\u7d20\uff09\u8fdb\u884c\u904d\u5386\u7684\u6a21\u5f0f\u3002Rust \u7684\u8fed\u4ee3\u5668\u662f\u60f0\u6027\u7684 (lazy)\uff0c\u8fd9\u610f\u5473\u7740\u5728\u4f60\u4e0d\u4e3b\u52a8\u6d88\u8017\u5b83\u4e4b\u524d\uff0c\u5b83\u4e0d\u4f1a\u4ea7\u751f\u4efb\u4f55\u6548\u679c\u3002</p> <p>\u6240\u6709\u8fed\u4ee3\u5668\u90fd\u5b9e\u73b0\u4e86 <code>Iterator</code> trait\uff0c\u5b83\u53ea\u9700\u8981\u4f60\u5b9e\u73b0\u4e00\u4e2a <code>next</code> \u65b9\u6cd5\u3002</p> <pre><code>let v1 = vec![1, 2, 3];\nlet mut v1_iter = v1.iter(); // iter() \u521b\u5efa\u4e00\u4e2a\u8fed\u4ee3\u5668\n\nassert_eq!(v1_iter.next(), Some(&amp;1));\nassert_eq!(v1_iter.next(), Some(&amp;2));\nassert_eq!(v1_iter.next(), Some(&amp;3));\nassert_eq!(v1_iter.next(), None);\n</code></pre>"},{"location":"chapter4_advanced/#69","title":"69. \u6d88\u8017\u578b\u9002\u914d\u5668\u548c\u8fed\u4ee3\u5668\u9002\u914d\u5668\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - \u6d88\u8017\u578b\u9002\u914d\u5668 (Consuming Adaptors): \u8fd9\u7c7b\u65b9\u6cd5\u4f1a\u8c03\u7528 <code>next</code> \u65b9\u6cd5\u6765\u6d88\u8017\uff08\u4f7f\u7528\u6389\uff09\u8fed\u4ee3\u5668\u3002\u4f8b\u5982 <code>sum()</code> \u65b9\u6cd5\uff0c\u5b83\u4f1a\u904d\u5386\u6240\u6709\u5143\u7d20\u5e76\u8ba1\u7b97\u603b\u548c\uff0c\u4ece\u800c\u83b7\u5f97\u8fed\u4ee3\u5668\u7684\u6240\u6709\u6743\u3002<code>collect()</code> \u662f\u53e6\u4e00\u4e2a\u4f8b\u5b50\u3002 - \u8fed\u4ee3\u5668\u9002\u914d\u5668 (Iterator Adaptors): \u8fd9\u7c7b\u65b9\u6cd5\u4f1a\u5c06\u4e00\u4e2a\u8fed\u4ee3\u5668\u8f6c\u6362\u6210\u53e6\u4e00\u4e2a\u8fed\u4ee3\u5668\u3002\u5b83\u4eec\u662f\u60f0\u6027\u7684\uff0c\u4f60\u9700\u8981\u94fe\u63a5\u4e00\u4e2a\u6d88\u8017\u578b\u9002\u914d\u5668\u624d\u80fd\u771f\u6b63\u5f00\u59cb\u6267\u884c\u3002<code>map()</code> \u548c <code>filter()</code> \u662f\u6700\u5e38\u89c1\u7684\u8fed\u4ee3\u5668\u9002\u914d\u5668\u3002</p> <pre><code>let v1: Vec&lt;i32&gt; = vec![1, 2, 3];\n\n// map \u662f\u8fed\u4ee3\u5668\u9002\u914d\u5668\uff0ccollect \u662f\u6d88\u8017\u578b\u9002\u914d\u5668\nlet v2: Vec&lt;_&gt; = v1.iter().map(|x| x + 1).collect();\n\nassert_eq!(v2, vec![2, 3, 4]);\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u81ea\u5b9a\u4e49\u8fed\u4ee3\u5668 <pre><code>struct Counter { current: u32, end: u32 }\n\nimpl Counter { fn new(end: u32) -&gt; Self { Self { current: 0, end } } }\n\nimpl Iterator for Counter {\n    type Item = u32;\n    fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt; {\n        if self.current &lt; self.end { self.current += 1; Some(self.current) } else { None }\n    }\n}\n\nfn main() {\n    let sum: u32 = Counter::new(5).map(|x| x * 2).sum();\n    assert_eq!(sum, 30);\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#70-deref-trait","title":"70. <code>Deref</code> trait \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f","text":"<p>\u7b54\uff1a <code>Deref</code> trait \u5141\u8bb8\u4f60\u81ea\u5b9a\u4e49\u89e3\u5f15\u7528\u8fd0\u7b97\u7b26 <code>*</code> \u7684\u884c\u4e3a\u3002\u901a\u8fc7\u4e3a\u7c7b\u578b\u5b9e\u73b0 <code>Deref</code> trait\uff0c\u4f60\u53ef\u4ee5\u8ba9\u5b83\u50cf\u4e00\u4e2a\u5e38\u89c4\u5f15\u7528\u4e00\u6837\u5de5\u4f5c\u3002</p> <p>\u5f53\u5bf9\u4e00\u4e2a\u5b9e\u73b0\u4e86 <code>Deref</code> \u7684\u7c7b\u578b\u4f7f\u7528 <code>*</code> \u65f6\uff0cRust \u5b9e\u9645\u4e0a\u4f1a\u8c03\u7528 <code>*self.deref()</code>\u3002\u8fd9\u4f7f\u5f97\u6211\u4eec\u53ef\u4ee5\u7f16\u5199\u80fd\u591f\u540c\u65f6\u5904\u7406\u667a\u80fd\u6307\u9488\u548c\u666e\u901a\u5f15\u7528\u7684\u4ee3\u7801\u3002\u8fd9\u4e2a\u7279\u6027\u88ab\u79f0\u4e3a\u89e3\u5f15\u7528\u5f3a\u5236\u591a\u6001 (Deref Coercions)\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u5b9e\u73b0 <code>Deref</code> \u8ba9\u81ea\u5b9a\u4e49\u7c7b\u578b\u50cf\u5f15\u7528 <pre><code>use std::ops::Deref;\n\nstruct MyBox&lt;T&gt;(T);\n\nimpl&lt;T&gt; MyBox&lt;T&gt; { fn new(x: T) -&gt; Self { MyBox(x) } }\n\nimpl&lt;T&gt; Deref for MyBox&lt;T&gt; {\n    type Target = T;\n    fn deref(&amp;self) -&gt; &amp;Self::Target { &amp;self.0 }\n}\n\nfn hello(name: &amp;str) { println!(\"Hello, {}\", name); }\n\nfn main() {\n    let m = MyBox::new(String::from(\"Rust\"));\n    hello(&amp;m); // Deref \u5f3a\u5236\u4ece &amp;MyBox&lt;String&gt; -&gt; &amp;String -&gt; &amp;str\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#71-drop-trait","title":"71. <code>Drop</code> trait \u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f","text":"<p>\u7b54\uff1a <code>Drop</code> trait \u5141\u8bb8\u4f60\u5728\u4e00\u4e2a\u503c\u79bb\u5f00\u4f5c\u7528\u57df\u65f6\u6267\u884c\u4e00\u4e9b\u4ee3\u7801\u3002\u5b83\u901a\u5e38\u7528\u4e8e\u91ca\u653e\u8d44\u6e90\uff0c\u6bd4\u5982\u6587\u4ef6\u53e5\u67c4\u3001\u7f51\u7edc\u8fde\u63a5\u6216\u50cf <code>Box&lt;T&gt;</code> \u90a3\u6837\u91ca\u653e\u5806\u5185\u5b58\u3002</p> <p>\u4f60\u53ea\u9700\u8981\u5b9e\u73b0 <code>drop</code> \u65b9\u6cd5\u3002Rust \u4f1a\u5728\u503c\u9700\u8981\u88ab\u6e05\u7406\u65f6\u81ea\u52a8\u8c03\u7528\u5b83\u3002\u4f60\u4e0d\u80fd\u624b\u52a8\u8c03\u7528 <code>drop</code> \u65b9\u6cd5\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>Drop</code> \u8d44\u6e90\u91ca\u653e\u4e0e\u81ea\u5b9a\u4e49\u6e05\u7406 <pre><code>struct Connection { id: u32 }\n\nimpl Drop for Connection {\n    fn drop(&amp;mut self) {\n        eprintln!(\"closing connection {}\", self.id);\n    }\n}\n\nfn main() {\n    let _c = Connection { id: 1 }; // \u4f5c\u7528\u57df\u7ed3\u675f\u65f6\u81ea\u52a8\u8c03\u7528 drop\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#72-trait-object","title":"72. \u4ec0\u4e48\u662f Trait Object\uff1f","text":"<p>\u7b54\uff1a Trait object \u5141\u8bb8\u4f60\u4f7f\u7528\u4e00\u4e2a\u6307\u5411\u5b9e\u73b0\u4e86\u67d0\u4e2a trait \u7684\u7c7b\u578b\u7684\u6307\u9488\u3002\u5b83\u662f\u4e00\u79cd\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u591a\u6001\u7684\u65b9\u5f0f\u3002\u4f60\u53ef\u4ee5\u521b\u5efa\u4e00\u4e2a\u5305\u542b\u4e0d\u540c\u7c7b\u578b\u503c\u7684 vector\uff0c\u53ea\u8981\u8fd9\u4e9b\u503c\u90fd\u5b9e\u73b0\u4e86\u540c\u4e00\u4e2a trait\u3002</p> <p>Trait object \u901a\u8fc7 <code>&amp;dyn Trait</code> \u6216 <code>Box&lt;dyn Trait&gt;</code> \u7684\u5f62\u5f0f\u8868\u793a\u3002<code>dyn</code> \u5173\u952e\u5b57\u8868\u660e\u8fd9\u662f\u4e00\u4e2a\u52a8\u6001\u5206\u53d1\u7684 trait object\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u52a8\u6001\u5206\u53d1\u96c6\u5408 <pre><code>trait Animal { fn speak(&amp;self) -&gt; String; }\n\nstruct Dog; struct Cat;\nimpl Animal for Dog { fn speak(&amp;self) -&gt; String { \"woof\".into() } }\nimpl Animal for Cat { fn speak(&amp;self) -&gt; String { \"meow\".into() } }\n\nfn main() {\n    let zoo: Vec&lt;Box&lt;dyn Animal&gt;&gt; = vec![Box::new(Dog), Box::new(Cat)];\n    for a in zoo { println!(\"{}\", a.speak()); }\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#73","title":"73. \u52a8\u6001\u5206\u53d1\u548c\u9759\u6001\u5206\u53d1\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - \u9759\u6001\u5206\u53d1 (Static Dispatch): \u8fd9\u662f Rust \u9ed8\u8ba4\u7684\u65b9\u5f0f\u3002\u5f53\u4ee3\u7801\u4f7f\u7528\u6cdb\u578b\u548c trait bound \u65f6\uff0c\u7f16\u8bd1\u5668\u5728\u7f16\u8bd1\u65f6\u4f1a\u4e3a\u6bcf\u4e2a\u5177\u4f53\u7c7b\u578b\u751f\u6210\u4e00\u4efd\u4e13\u95e8\u7684\u4ee3\u7801\u3002\u8fd9\u88ab\u79f0\u4e3a\u201c\u5355\u6001\u5316 (monomorphization)\u201d\u3002\u5b83\u7684\u4f18\u70b9\u662f\u901f\u5ea6\u5feb\uff0c\u56e0\u4e3a\u6ca1\u6709\u8fd0\u884c\u65f6\u5f00\u9500\u3002 - \u52a8\u6001\u5206\u53d1 (Dynamic Dispatch): \u8fd9\u662f\u901a\u8fc7 trait object (<code>dyn Trait</code>) \u5b9e\u73b0\u7684\u3002\u5728\u8fd0\u884c\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u901a\u8fc7\u67e5\u627e\u865a\u51fd\u6570\u8868\uff08vtable\uff09\u6765\u786e\u5b9a\u5e94\u8be5\u8c03\u7528\u54ea\u4e2a\u65b9\u6cd5\u3002\u5b83\u7684\u4f18\u70b9\u662f\u4ee3\u7801\u5c3a\u5bf8\u66f4\u5c0f\uff0c\u5e76\u4e14\u5141\u8bb8\u4f60\u5728\u4e00\u4e2a\u96c6\u5408\u4e2d\u5b58\u50a8\u4e0d\u540c\u7c7b\u578b\u7684\u503c\u3002\u7f3a\u70b9\u662f\u5b58\u5728\u8f7b\u5fae\u7684\u8fd0\u884c\u65f6\u6027\u80fd\u5f00\u9500\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u9759\u6001\u5206\u53d1\u4e0e\u52a8\u6001\u5206\u53d1\u5bf9\u6bd4</p> <pre><code>flowchart LR\n  A[\u6cdb\u578b\u51fd\u6570 T: Trait] --&gt;|\u7f16\u8bd1\u671f| M[\u5355\u6001\u5316 \u591a\u4efd\u673a\u5668\u7801]\n  B[&amp;dyn Trait] --&gt;|\u8fd0\u884c\u671f| V[vtable \u67e5\u627e]</code></pre>"},{"location":"chapter4_advanced/#74-asref-asmut-trait","title":"74. <code>AsRef</code> \u548c <code>AsMut</code> trait \u6709\u4ec0\u4e48\u7528\uff1f","text":"<p>\u7b54\uff1a <code>AsRef&lt;T&gt;</code> \u548c <code>AsMut&lt;T&gt;</code> \u662f\u7528\u4e8e\u5ec9\u4ef7\u7684\u3001\u5f15\u7528\u5230\u5f15\u7528\u7684\u8f6c\u6362\u7684 trait\u3002</p> <p>\u5982\u679c\u4e00\u4e2a\u7c7b\u578b <code>U</code> \u5b9e\u73b0\u4e86 <code>AsRef&lt;T&gt;</code>\uff0c\u610f\u5473\u7740\u4f60\u53ef\u4ee5\u901a\u8fc7\u8c03\u7528 <code>.as_ref()</code> \u65b9\u6cd5\uff0c\u4ece <code>&amp;U</code> \u5ec9\u4ef7\u5730\u5f97\u5230\u4e00\u4e2a <code>&amp;T</code>\u3002\u8fd9\u5728\u7f16\u5199\u5e0c\u671b\u63a5\u53d7\u591a\u79cd\u4e0d\u540c\u4f46\u76f8\u5173\u5f15\u7528\u7c7b\u578b\u7684\u51fd\u6570\u65f6\u975e\u5e38\u6709\u7528\u3002\u4f8b\u5982\uff0c\u4e00\u4e2a\u51fd\u6570\u53ef\u4ee5\u63a5\u53d7\u4efb\u4f55\u80fd\u88ab\u770b\u4f5c <code>&amp;str</code> \u7684\u7c7b\u578b\uff08\u5982 <code>String</code>, <code>&amp;String</code>, <code>&amp;str</code>\uff09\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u901a\u7528\u8def\u5f84\u53c2\u6570 <pre><code>use std::path::Path;\n\nfn read_all&lt;P: AsRef&lt;Path&gt;&gt;(p: P) {\n    let path = p.as_ref();\n    println!(\"reading {:?}\", path);\n}\n\nfn main() {\n    read_all(\"/tmp/a.txt\");\n    read_all(String::from(\"/tmp/b.txt\"));\n}\n</code></pre></p>"},{"location":"chapter4_advanced/#75-newtype","title":"75. \u4ec0\u4e48\u662f newtype \u6a21\u5f0f\uff1f","text":"<p>\u7b54\uff1a Newtype \u6a21\u5f0f\u662f\u5728 Rust \u4e2d\u4f7f\u7528\u5143\u7ec4\u7ed3\u6784\u4f53\u6765\u5305\u88c5\u4e00\u4e2a\u73b0\u6709\u7c7b\u578b\uff0c\u4ece\u800c\u521b\u5efa\u4e00\u4e2a\u65b0\u7684\u3001\u72ec\u7279\u7684\u7c7b\u578b\u3002</p> <p><pre><code>struct Millimeters(u32);\nstruct Meters(u32);\n</code></pre> \u8fd9\u6837\u505a\u7684\u597d\u5904\u662f\uff1a 1.  \u7c7b\u578b\u5b89\u5168: \u4f60\u4e0d\u80fd\u610f\u5916\u5730\u5c06 <code>Millimeters</code> \u7c7b\u578b\u7684\u503c\u548c <code>Meters</code> \u7c7b\u578b\u7684\u503c\u6df7\u7528\uff0c\u5373\u4f7f\u5b83\u4eec\u5185\u90e8\u90fd\u662f <code>u32</code>\u3002 2.  \u62bd\u8c61: \u4f60\u53ef\u4ee5\u4e3a\u8fd9\u4e2a\u65b0\u7c7b\u578b\u5b9e\u73b0\u5b83\u81ea\u5df1\u72ec\u6709\u7684\u65b9\u6cd5\u548c trait\uff0c\u800c\u4e0d\u7528\u53bb\u4fee\u6539\u539f\u59cb\u7c7b\u578b\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u4e3a newtype \u5b9e\u73b0\u5916\u90e8 trait <pre><code>use std::fmt::{self, Display};\n\nstruct Millimeters(u32);\n\nimpl Display for Millimeters {\n    fn fmt(&amp;self, f: &amp;mut fmt::Formatter&lt;'_&gt;) -&gt; fmt::Result {\n        write!(f, \"{}mm\", self.0)\n    }\n}\n</code></pre></p>"},{"location":"chapter5_concurrency/","title":"\u7b2c\u4e94\u7ae0\uff1a\u5e76\u53d1\u4e0e\u5f02\u6b65","text":"<p>Rust \u63d0\u4f9b\u4e86\u5f3a\u5927\u7684\u5de5\u5177\u6765\u5b89\u5168\u5730\u7f16\u5199\u5e76\u53d1\u751a\u81f3\u5e76\u884c\u7684\u4ee3\u7801\u3002\u5b83\u7684\u6240\u6709\u6743\u548c\u7c7b\u578b\u7cfb\u7edf\u5728\u7f16\u8bd1\u65f6\u5c31\u4e3a\u4f60\u89e3\u51b3\u4e86\u8bb8\u591a\u5e38\u89c1\u7684\u5e76\u53d1\u95ee\u9898\u3002\u672c\u7ae0\u5c06\u4ecb\u7ecd\u7ebf\u7a0b\u3001\u6d88\u606f\u4f20\u9012\u3001\u5171\u4eab\u72b6\u6001\u4ee5\u53ca Rust \u7684 <code>async/await</code> \u8bed\u6cd5\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u5e76\u53d1\u4e0e\u5f02\u6b65\u6a21\u578b</p> <pre><code>flowchart LR\n  T[Threads] --&gt; M[\u6d88\u606f\u4f20\u9012 mpsc]\n  T --&gt; S[\u5171\u4eab\u72b6\u6001 Arc&lt;Mutex&gt;]\n  subgraph Async Runtime\n    E[Executor \u6267\u884c\u5668] --&gt; P[Poll Futures]\n    R[Reactor \u53cd\u5e94\u5668] --&gt;|I/O \u4e8b\u4ef6| E\n  end\n  Async[async/await] --&gt; E</code></pre>"},{"location":"chapter5_concurrency/#76-rust","title":"76. \u5982\u4f55\u5728 Rust \u4e2d\u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>std::thread::spawn</code> \u51fd\u6570\u3002\u5b83\u63a5\u53d7\u4e00\u4e2a\u95ed\u5305\u4f5c\u4e3a\u53c2\u6570\uff0c\u8fd9\u4e2a\u95ed\u5305\u5305\u542b\u4e86\u4f60\u60f3\u5728\u65b0\u7ebf\u7a0b\u4e2d\u8fd0\u884c\u7684\u4ee3\u7801\u3002</p> <p><pre><code>use std::thread;\nuse std::time::Duration;\n\n// \u521b\u5efa\u4e00\u4e2a\u65b0\u7ebf\u7a0b\nlet handle = thread::spawn(|| {\n    for i in 1..10 {\n        println!(\"hi number {} from the spawned thread!\", i);\n        thread::sleep(Duration::from_millis(1));\n    }\n});\n\n// \u4e3b\u7ebf\u7a0b\u7684\u4ee3\u7801\u4f1a\u7ee7\u7eed\u6267\u884c\nfor i in 1..5 {\n    println!(\"hi number {} from the main thread!\", i);\n    thread::sleep(Duration::from_millis(1));\n}\n\n// \u7b49\u5f85\u65b0\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\nhandle.join().unwrap();\n</code></pre> <code>spawn</code> \u51fd\u6570\u8fd4\u56de\u4e00\u4e2a <code>JoinHandle</code>\uff0c\u8c03\u7528\u5b83\u7684 <code>join</code> \u65b9\u6cd5\u53ef\u4ee5\u963b\u585e\u5f53\u524d\u7ebf\u7a0b\uff0c\u76f4\u5230\u88ab\u8c03\u7528\u7684\u7ebf\u7a0b\u6267\u884c\u5b8c\u6bd5\u3002</p>"},{"location":"chapter5_concurrency/#77-threadspawn-move","title":"77. \u4e3a\u4ec0\u4e48\u5728 <code>thread::spawn</code> \u4e2d\u7ecf\u5e38\u4f7f\u7528 <code>move</code> \u95ed\u5305\uff1f","text":"<p>\u7b54\uff1a \u56e0\u4e3a <code>thread::spawn</code> \u521b\u5efa\u7684\u65b0\u7ebf\u7a0b\u53ef\u80fd\u4f1a\u6bd4\u521b\u5efa\u5b83\u7684\u4e3b\u7ebf\u7a0b\u6d3b\u5f97\u66f4\u4e45\u3002\u4e3a\u4e86\u4fdd\u8bc1\u65b0\u7ebf\u7a0b\u4e2d\u5f15\u7528\u7684\u6570\u636e\u662f\u6709\u6548\u7684\uff0c\u6211\u4eec\u9700\u8981\u5c06\u8fd9\u4e9b\u6570\u636e\u7684\u6240\u6709\u6743\u79fb\u52a8\u5230\u65b0\u7ebf\u7a0b\u4e2d\u3002</p> <p><code>move</code> \u5173\u952e\u5b57\u5f3a\u5236\u95ed\u5305\u83b7\u53d6\u5b83\u6240\u4f7f\u7528\u7684\u6240\u6709\u73af\u5883\u53d8\u91cf\u7684\u6240\u6709\u6743\u3002\u8fd9\u662f\u4e00\u79cd\u5411 Rust \u7f16\u8bd1\u5668\u4fdd\u8bc1\uff0c\u8be5\u95ed\u5305\u4e0d\u4f1a\u610f\u5916\u5730\u5f15\u7528\u4e00\u4e2a\u53ef\u80fd\u5728\u672a\u6765\u88ab\u4e3b\u7ebf\u7a0b\u91ca\u653e\u6389\u7684\u53d8\u91cf\u3002</p> <pre><code>let v = vec![1, 2, 3];\n\n// `move` \u5c06 v \u7684\u6240\u6709\u6743\u8f6c\u79fb\u5230\u65b0\u7ebf\u7a0b\nlet handle = thread::spawn(move || {\n    println!(\"Here's a vector: {:?}\", v);\n});\n\n// drop(v); // \u5982\u679c\u5728\u8fd9\u91cc\u5c1d\u8bd5\u4f7f\u7528 v\uff0c\u4f1a\u7f16\u8bd1\u9519\u8bef\uff0c\u56e0\u4e3a\u6240\u6709\u6743\u5df2\u7ecf\u8f6c\u79fb\n\nhandle.join().unwrap();\n</code></pre>"},{"location":"chapter5_concurrency/#78-channel","title":"78. \u4ec0\u4e48\u662f\u901a\u9053 (Channel)\uff1f\u5b83\u5982\u4f55\u7528\u4e8e\u7ebf\u7a0b\u95f4\u901a\u4fe1\uff1f","text":"<p>\u7b54\uff1a \u901a\u9053\u662f Rust \u4e2d\u4e00\u79cd\u5e38\u89c1\u7684\u3001\u7528\u4e8e\u7ebf\u7a0b\u95f4\u6d88\u606f\u4f20\u9012\u7684\u7f16\u7a0b\u6a21\u578b\u3002\u4f60\u53ef\u4ee5\u628a\u5b83\u60f3\u8c61\u6210\u4e00\u4e2a\u5355\u5411\u7684\u7ba1\u9053\uff1a\u4e00\u7aef\u662f\u53d1\u9001\u8005 (Transmitter)\uff0c\u53e6\u4e00\u7aef\u662f\u63a5\u6536\u8005 (Receiver)\u3002</p> <p>Rust \u7684\u6807\u51c6\u5e93\u5728 <code>std::sync::mpsc</code> \u6a21\u5757\u4e2d\u63d0\u4f9b\u4e86\u901a\u9053\u7684\u5b9e\u73b0\u3002<code>mpsc</code> \u4ee3\u8868\u201c\u591a\u4e2a\u751f\u4ea7\u8005\uff0c\u5355\u4e2a\u6d88\u8d39\u8005\u201d\uff08multiple producer, single consumer\uff09\u3002</p> <pre><code>use std::sync::mpsc;\nuse std::thread;\n\nlet (tx, rx) = mpsc::channel(); // tx \u662f\u53d1\u9001\u8005, rx \u662f\u63a5\u6536\u8005\n\nthread::spawn(move || {\n    let val = String::from(\"hi\");\n    tx.send(val).unwrap(); // send \u4f1a\u83b7\u53d6\u6240\u6709\u6743\n});\n\nlet received = rx.recv().unwrap(); // recv \u4f1a\u963b\u585e\u4e3b\u7ebf\u7a0b\u76f4\u5230\u63a5\u6536\u5230\u6d88\u606f\nprintln!(\"Got: {}\", received);\n</code></pre> <p>\u793a\u610f\u56fe\uff1a\u591a\u751f\u4ea7\u8005\u901a\u9053</p> <pre><code>flowchart LR\n  P1[tx1] --&gt; CH[(channel)]\n  P2[tx2] --&gt; CH\n  P3[tx3] --&gt; CH\n  CH --&gt; RX[rx]</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u591a\u4e2a\u751f\u4ea7\u8005\u4e0e\u63a5\u6536\u5faa\u73af\u3001\u8d85\u65f6\u63a5\u6536 <pre><code>use std::sync::mpsc;\nuse std::thread;\nuse std::time::Duration;\n\nfn main() {\n    let (tx, rx) = mpsc::channel::&lt;String&gt;();\n\n    // \u591a\u4e2a\u751f\u4ea7\u8005\uff1a\u514b\u9686\u53d1\u9001\u7aef\n    for id in 0..3 {\n        let tx_clone = tx.clone();\n        thread::spawn(move || {\n            for i in 0..3 {\n                let msg = format!(\"producer#{id} -&gt; {i}\");\n                tx_clone.send(msg).unwrap();\n                thread::sleep(Duration::from_millis(20));\n            }\n        });\n    }\n    drop(tx); // \u5173\u95ed\u539f\u59cb\u53d1\u9001\u7aef\uff0c\u786e\u4fdd\u63a5\u6536\u7aef\u5728\u751f\u4ea7\u8005\u7ed3\u675f\u540e\u9000\u51fa\u5faa\u73af\n\n    // \u63a5\u6536\u5faa\u73af\n    for msg in rx.iter() {\n        println!(\"recv: {}\", msg);\n    }\n\n    // \u4f7f\u7528 recv_timeout \u7b49\u5f85\u4e00\u6bb5\u65f6\u95f4\n    let (tx2, rx2) = mpsc::channel();\n    thread::spawn(move || thread::sleep(Duration::from_millis(200)));\n    match rx2.recv_timeout(Duration::from_millis(100)) {\n        Ok(v) =&gt; println!(\"got {}\", v),\n        Err(e) =&gt; println!(\"timeout or closed: {}\", e),\n    }\n}\n</code></pre></p>"},{"location":"chapter5_concurrency/#79-mutex","title":"79. \u4ec0\u4e48\u662f\u4e92\u65a5\u9501 (Mutex)\uff1f\u5982\u4f55\u4f7f\u7528\u5b83\u5728\u7ebf\u7a0b\u95f4\u5171\u4eab\u72b6\u6001\uff1f","text":"<p>\u7b54\uff1a \u4e92\u65a5\u9501\uff08Mutex, mutual exclusion\uff09\u662f\u4e00\u79cd\u53ea\u5141\u8bb8\u4e00\u4e2a\u7ebf\u7a0b\u5728\u4efb\u610f\u65f6\u523b\u8bbf\u95ee\u67d0\u4e9b\u6570\u636e\u7684\u673a\u5236\u3002\u8981\u8bbf\u95ee\u6570\u636e\uff0c\u7ebf\u7a0b\u5fc5\u987b\u9996\u5148\u83b7\u53d6\u4e92\u65a5\u9501\u7684\u201c\u9501\u201d\uff08lock\uff09\u3002\u5f53\u7ebf\u7a0b\u4f7f\u7528\u5b8c\u6570\u636e\u540e\uff0c\u5b83\u5fc5\u987b\u201c\u89e3\u9501\u201d\uff08unlock\uff09\uff0c\u8fd9\u6837\u5176\u4ed6\u7ebf\u7a0b\u624d\u80fd\u83b7\u53d6\u9501\u5e76\u8bbf\u95ee\u6570\u636e\u3002</p> <p>\u5728 Rust \u4e2d\uff0c\u6211\u4eec\u4f7f\u7528 <code>std::sync::Mutex&lt;T&gt;</code>\u3002</p> <p><pre><code>use std::sync::Mutex;\nuse std::thread;\n\nlet m = Mutex::new(5);\n\n{\n    let mut num = m.lock().unwrap(); // \u83b7\u53d6\u9501\uff0c\u8fd4\u56de\u4e00\u4e2a MutexGuard\n    *num = 6;\n} // \u9501\u5728\u8fd9\u91cc\u88ab\u81ea\u52a8\u91ca\u653e\n\nprintln!(\"m = {:?}\", m);\n</code></pre> <code>lock()</code> \u65b9\u6cd5\u8fd4\u56de\u7684\u662f\u4e00\u4e2a\u667a\u80fd\u6307\u9488 <code>MutexGuard</code>\u3002\u5f53 <code>MutexGuard</code> \u79bb\u5f00\u4f5c\u7528\u57df\u65f6\uff0c\u9501\u4f1a\u81ea\u52a8\u88ab\u91ca\u653e\u3002\u8fd9\u6781\u5927\u5730\u907f\u514d\u4e86\u5fd8\u8bb0\u89e3\u9501\u5bfc\u81f4\u7684\u6b7b\u9501\u95ee\u9898\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>RwLock</code> \u4e0e\u9501\u6bd2\u5316\u5904\u7406 <pre><code>use std::sync::{RwLock, PoisonError};\n\nfn main() {\n    let data = RwLock::new(vec![1, 2, 3]);\n\n    // \u591a\u4e2a\u8bfb\u8005\n    {\n        let r1 = data.read().unwrap();\n        let r2 = data.read().unwrap();\n        println!(\"reads: {:?}, {:?}\", *r1, *r2);\n    }\n\n    // \u5199\u8005\n    {\n        let mut w = data.write().unwrap();\n        w.push(4);\n    }\n\n    // \u9501\u6bd2\u5316\u793a\u4f8b\n    let bad = RwLock::new(0);\n    let res = std::panic::catch_unwind(|| {\n        let mut g = bad.write().unwrap();\n        *g = 10;\n        panic!(\"oops\");\n    });\n    if res.is_err() {\n        let recovered = match bad.write() {\n            Ok(g) =&gt; *g,\n            Err(PoisonError { .. }) =&gt; {\n                // \u6062\u590d\u8bbf\u95ee\u6bd2\u5316\u7684\u9501\n                let g = bad.write().unwrap_or_else(|e| e.into_inner());\n                *g\n            }\n        };\n        println!(\"recovered value = {}\", recovered);\n    }\n}\n</code></pre></p>"},{"location":"chapter5_concurrency/#80-arct-mutext","title":"80. <code>Arc&lt;T&gt;</code> \u662f\u4ec0\u4e48\uff1f\u4e3a\u4ec0\u4e48\u5b83\u7ecf\u5e38\u548c <code>Mutex&lt;T&gt;</code> \u4e00\u8d77\u4f7f\u7528\uff1f","text":"<p>\u7b54\uff1a <code>Arc&lt;T&gt;</code> \u662f\u539f\u5b50\u5f15\u7528\u8ba1\u6570 (Atomically Reference Counted) \u667a\u80fd\u6307\u9488\u3002\u5b83\u548c <code>Rc&lt;T&gt;</code> \u529f\u80fd\u7c7b\u4f3c\uff0c\u90fd\u5141\u8bb8\u591a\u4e2a\u6240\u6709\u8005\u5171\u4eab\u6570\u636e\uff0c\u4f46 <code>Arc&lt;T&gt;</code> \u662f\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> <ul> <li>\u5f53\u4f60\u60f3\u5728\u591a\u4e2a\u7ebf\u7a0b\u4e4b\u95f4\u5171\u4eab\u6570\u636e\u7684\u6240\u6709\u6743\u65f6\uff0c<code>Arc&lt;T&gt;</code> \u662f\u5fc5\u9700\u7684\u3002<code>Rc&lt;T&gt;</code> \u4e0d\u80fd\u88ab\u5b89\u5168\u5730\u5728\u7ebf\u7a0b\u95f4\u4f20\u9012\u3002</li> <li><code>Mutex&lt;T&gt;</code> \u4fdd\u8bc1\u4e86\u5728\u4efb\u610f\u65f6\u523b\u53ea\u6709\u4e00\u4e2a\u7ebf\u7a0b\u80fd\u4fee\u6539\u6570\u636e\u3002</li> <li>\u4f46\u662f <code>Mutex&lt;T&gt;</code> \u672c\u8eab\u5e76\u4e0d\u5141\u8bb8\u591a\u4e2a\u6240\u6709\u8005\u3002</li> </ul> <p>\u56e0\u6b64\uff0c<code>Arc&lt;Mutex&lt;T&gt;&gt;</code> \u662f\u4e00\u4e2a\u975e\u5e38\u5f3a\u5927\u7684\u7ec4\u5408\uff1a - <code>Arc&lt;T&gt;</code> \u5141\u8bb8\u591a\u4e2a\u7ebf\u7a0b\u201c\u62e5\u6709\u201d\u6307\u5411\u4e92\u65a5\u9501\u7684\u6307\u9488\u3002 - <code>Mutex&lt;T&gt;</code> \u4fdd\u8bc1\u4e86\u5bf9\u5185\u90e8\u6570\u636e\u7684\u8bbf\u95ee\u662f\u4e92\u65a5\u7684\u3001\u7ebf\u7a0b\u5b89\u5168\u7684\u3002</p> <pre><code>use std::sync::{Mutex, Arc};\nuse std::thread;\n\nlet counter = Arc::new(Mutex::new(0));\nlet mut handles = vec![];\n\nfor _ in 0..10 {\n    let counter = Arc::clone(&amp;counter);\n    let handle = thread::spawn(move || {\n        let mut num = counter.lock().unwrap();\n        *num += 1;\n    });\n    handles.push(handle);\n}\n\nfor handle in handles {\n    handle.join().unwrap();\n}\n\nprintln!(\"Result: {}\", *counter.lock().unwrap()); // \u6253\u5370 10\n</code></pre> <p>\u793a\u610f\u56fe\uff1aArc&gt; \u5171\u4eab\u8ba1\u6570\u5668 <pre><code>flowchart LR\n  subgraph \u5806\n    M[Mutex&lt;T&gt;]\n  end\n  A[Arc] --&gt; M\n  B[Arc] --&gt; M\n  C[Arc] --&gt; M</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u7b80\u5355\u7ebf\u7a0b\u6c60\uff08\u5de5\u4f5c\u7a83\u53d6\u7684\u6781\u7b80\u96cf\u5f62\uff09 <pre><code>use std::sync::{Arc, Mutex, mpsc};\nuse std::thread;\n\ntype Job = Box&lt;dyn FnOnce() + Send + 'static&gt;;\n\nstruct ThreadPool {\n    workers: Vec&lt;thread::JoinHandle&lt;()&gt;&gt;,\n    sender: mpsc::Sender&lt;Job&gt;,\n}\n\nimpl ThreadPool {\n    fn new(size: usize) -&gt; Self {\n        let (tx, rx) = mpsc::channel::&lt;Job&gt;();\n        let rx = Arc::new(Mutex::new(rx));\n        let mut workers = Vec::new();\n        for _ in 0..size {\n            let rx = Arc::clone(&amp;rx);\n            workers.push(thread::spawn(move || loop {\n                match rx.lock().unwrap().recv() {\n                    Ok(job) =&gt; job(),\n                    Err(_) =&gt; break,\n                }\n            }));\n        }\n        Self { workers, sender: tx }\n    }\n\n    fn execute&lt;F&gt;(&amp;self, f: F)\n    where\n        F: FnOnce() + Send + 'static,\n    {\n        self.sender.send(Box::new(f)).unwrap();\n    }\n}\n</code></pre></p>"},{"location":"chapter5_concurrency/#81-send-sync-trait","title":"81. <code>Send</code> \u548c <code>Sync</code> trait \u6709\u4ec0\u4e48\u4f5c\u7528\uff1f","text":"<p>\u7b54\uff1a <code>Send</code> \u548c <code>Sync</code> \u662f\u4e24\u4e2a\u7279\u6b8a\u7684\u6807\u8bb0 trait\uff0c\u5b83\u4eec\u662f Rust \u5e76\u53d1\u6a21\u578b\u7684\u6838\u5fc3\u3002</p> <ul> <li><code>Send</code>: \u5982\u679c\u4e00\u4e2a\u7c7b\u578b <code>T</code> \u5b9e\u73b0\u4e86 <code>Send</code>\uff0c\u610f\u5473\u7740 <code>T</code> \u7c7b\u578b\u7684\u503c\u7684\u6240\u6709\u6743\u53ef\u4ee5\u88ab\u5b89\u5168\u5730\u5728\u7ebf\u7a0b\u95f4\u4f20\u9012\u3002\u51e0\u4e4e\u6240\u6709 Rust \u7c7b\u578b\u90fd\u5b9e\u73b0\u4e86 <code>Send</code>\uff0c\u4e3b\u8981\u7684\u4f8b\u5916\u662f <code>Rc&lt;T&gt;</code> \u548c\u539f\u59cb\u6307\u9488\u3002</li> <li><code>Sync</code>: \u5982\u679c\u4e00\u4e2a\u7c7b\u578b <code>T</code> \u5b9e\u73b0\u4e86 <code>Sync</code>\uff0c\u610f\u5473\u7740 <code>&amp;T</code>\uff08\u5bf9 <code>T</code> \u7684\u4e0d\u53ef\u53d8\u5f15\u7528\uff09\u53ef\u4ee5\u88ab\u5b89\u5168\u5730\u5728\u7ebf\u7a0b\u95f4\u5171\u4eab\u3002\u6362\u53e5\u8bdd\u8bf4\uff0c\u5982\u679c <code>&amp;T</code> \u662f <code>Send</code> \u7684\uff0c\u90a3\u4e48 <code>T</code> \u5c31\u662f <code>Sync</code> \u7684\u3002</li> </ul> <p>\u8fd9\u4e24\u4e2a trait \u662f\u81ea\u52a8\u4e3a\u7ec4\u5408\u4e86 <code>Send</code> \u548c <code>Sync</code> \u7c7b\u578b\u7684\u590d\u5408\u7c7b\u578b\u5b9e\u73b0\u7684\u3002\u4f60\u4e0d\u9700\u8981\u624b\u52a8\u53bb\u5b9e\u73b0\u5b83\u4eec\uff0c\u4f46\u5b83\u4eec\u4fdd\u8bc1\u4e86 Rust \u7684\u5e76\u53d1\u5b89\u5168\u6027\u662f\u5728\u7f16\u8bd1\u65f6\u5c31\u88ab\u68c0\u67e5\u7684\u3002</p>"},{"location":"chapter5_concurrency/#82-async-programming","title":"82. \u4ec0\u4e48\u662f\u5f02\u6b65\u7f16\u7a0b (Async Programming)\uff1f","text":"<p>\u7b54\uff1a \u5f02\u6b65\u7f16\u7a0b\u662f\u4e00\u79cd\u5141\u8bb8\u7a0b\u5e8f\u5728\u7b49\u5f85\u4e00\u4e2a\u957f\u65f6\u95f4\u64cd\u4f5c\uff08\u5982\u6587\u4ef6\u8bfb\u5199\u3001\u7f51\u7edc\u8bf7\u6c42\uff09\u5b8c\u6210\u65f6\uff0c\u53ef\u4ee5\u7ee7\u7eed\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u7684\u7f16\u7a0b\u8303\u5f0f\u3002\u5b83\u901a\u8fc7\u975e\u963b\u585e\u7684\u65b9\u5f0f\u6765\u63d0\u9ad8\u7a0b\u5e8f\u7684\u6548\u7387\u548c\u54cd\u5e94\u80fd\u529b\u3002</p> <p>\u5728\u4f20\u7edf\u7684\u540c\u6b65\u4ee3\u7801\u4e2d\uff0c\u5f53\u4e00\u4e2a\u51fd\u6570\u7b49\u5f85 I/O \u65f6\uff0c\u6574\u4e2a\u7ebf\u7a0b\u90fd\u4f1a\u88ab\u963b\u585e\u3002\u5728\u5f02\u6b65\u4ee3\u7801\u4e2d\uff0c\u5f53\u4e00\u4e2a\u4efb\u52a1\u9700\u8981\u7b49\u5f85\u65f6\uff0c\u5b83\u53ef\u4ee5\u5c06\u63a7\u5236\u6743\u4ea4\u8fd8\u7ed9\u8fd0\u884c\u65f6\uff08runtime\uff09\uff0c\u8fd0\u884c\u65f6\u5219\u53ef\u4ee5\u53bb\u6267\u884c\u53e6\u4e00\u4e2a\u5df2\u7ecf\u51c6\u5907\u597d\u7684\u4efb\u52a1\u3002</p>"},{"location":"chapter5_concurrency/#83-async-await","title":"83. <code>async</code> \u548c <code>await</code> \u5173\u952e\u5b57\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f","text":"<p>\u7b54\uff1a <code>async</code> \u548c <code>await</code> \u662f Rust \u4e2d\u8fdb\u884c\u5f02\u6b65\u7f16\u7a0b\u7684\u4e24\u4e2a\u6838\u5fc3\u5173\u952e\u5b57\u3002</p> <ul> <li><code>async</code>: \u5f53\u4f60\u7528 <code>async</code> \u6807\u8bb0\u4e00\u4e2a\u51fd\u6570\u65f6\uff0c\u5b83\u4f1a\u628a\u8fd9\u4e2a\u51fd\u6570\u53d8\u6210\u4e00\u4e2a\u8fd4\u56deFuture\u7684\u51fd\u6570\u3002Future \u662f\u4e00\u4e2a\u4ee3\u8868\u672a\u6765\u67d0\u4e2a\u65f6\u523b\u624d\u4f1a\u5b8c\u6210\u7684\u503c\u3002<code>async</code> \u51fd\u6570\u672c\u8eab\u5e76\u4e0d\u4f1a\u6267\u884c\uff0c\u5b83\u53ea\u662f\u6784\u5efa\u4e00\u4e2a Future\u3002</li> <li><code>await</code>: \u5f53\u4f60\u5728\u4e00\u4e2a Future \u4e0a\u4f7f\u7528 <code>.await</code> \u65f6\uff0c\u5b83\u4f1a\u6682\u505c\u5f53\u524d <code>async</code> \u51fd\u6570\u7684\u6267\u884c\uff0c\u76f4\u5230\u8fd9\u4e2a Future \u5b8c\u6210\u3002\u5728\u6682\u505c\u671f\u95f4\uff0c\u7ebf\u7a0b\u4e0d\u4f1a\u88ab\u963b\u585e\uff0c\u800c\u662f\u53ef\u4ee5\u53bb\u6267\u884c\u5176\u4ed6\u4efb\u52a1\u3002</li> </ul> <pre><code>async fn do_something() {\n    println!(\"Going to do something\");\n    // \u6a21\u62df\u4e00\u4e2a\u5f02\u6b65\u64cd\u4f5c\n    let result = some_async_operation().await; \n    println!(\"Got result: {}\", result);\n}\n</code></pre> <p>\u8fdb\u9636\u793a\u4f8b\uff08Tokio\uff09\uff1a\u5e76\u53d1\u4efb\u52a1\u3001select \u4e0e\u8d85\u65f6\u3001\u53d6\u6d88 <pre><code>use tokio::time::{self, Duration};\n\nasync fn work(id: u32) -&gt; u32 {\n    time::sleep(Duration::from_millis(50 * id as u64)).await;\n    id\n}\n\n#[tokio::main]\nasync fn main() {\n    // \u5e76\u53d1\u6267\u884c\u591a\u4e2a\u4efb\u52a1\n    let (a, b) = tokio::join!(work(1), work(2));\n    println!(\"results: {}, {}\", a, b);\n\n    // \u8d85\u65f6\n    let res = time::timeout(Duration::from_millis(60), work(2)).await;\n    println!(\"timeout result: {:?}\", res);\n\n    // select \u9009\u62e9\u5148\u5b8c\u6210\u7684\u4efb\u52a1\n    tokio::select! {\n        val = work(1) =&gt; println!(\"first done: {}\", val),\n        _ = work(3) =&gt; println!(\"second done\"),\n    }\n\n    // \u53d6\u6d88\uff1a\u4e22\u5f03 future \u5373\u53ef\n    let fut = work(5);\n    drop(fut); // \u88ab\u53d6\u6d88\uff0c\u4e0d\u4f1a\u5b8c\u6210\n}\n</code></pre></p>"},{"location":"chapter5_concurrency/#84-future","title":"84. \u4ec0\u4e48\u662f Future\uff1f","text":"<p>\u7b54\uff1a <code>Future</code> \u662f\u4e00\u4e2a trait\uff0c\u5b83\u4ee3\u8868\u4e00\u4e2a\u53ef\u4ee5\u88ab\u8f6e\u8be2\uff08polled\uff09\u7684\u5f02\u6b65\u8ba1\u7b97\u3002\u5b83\u53ea\u6709\u4e00\u4e2a <code>poll</code> \u65b9\u6cd5\u3002</p> <p><pre><code>trait Future {\n    type Output;\n    fn poll(self: Pin&lt;&amp;mut Self&gt;, cx: &amp;mut Context&lt;'_&gt;) -&gt; Poll&lt;Self::Output&gt;;\n}\n</code></pre> \u5f53\u4e00\u4e2a future \u88ab <code>poll</code> \u65f6\uff0c\u5b83\u4f1a\u5c1d\u8bd5\u53d6\u5f97\u8fdb\u5c55\u3002<code>poll</code> \u65b9\u6cd5\u4f1a\u8fd4\u56de\uff1a - <code>Poll::Ready(value)</code>: \u8868\u793a future \u5df2\u7ecf\u5b8c\u6210\uff0c\u5e76\u4ea7\u51fa\u4e86\u4e00\u4e2a\u503c\u3002 - <code>Poll::Pending</code>: \u8868\u793a future \u8fd8\u6ca1\u6709\u51c6\u5907\u597d\uff0c\u5b83\u4f1a\u5728\u51c6\u5907\u597d\u65f6\u901a\u8fc7 <code>Context</code> \u901a\u77e5\u6267\u884c\u5668\u518d\u6b21\u8f6e\u8be2\u5b83\u3002</p> <p>\u4f60\u901a\u5e38\u4e0d\u9700\u8981\u624b\u52a8\u5b9e\u73b0 <code>Future</code> trait\uff0c<code>async/await</code> \u8bed\u6cd5\u4f1a\u4e3a\u4f60\u81ea\u52a8\u751f\u6210\u3002</p>"},{"location":"chapter5_concurrency/#85-async-runtime","title":"85. \u4ec0\u4e48\u662f\u5f02\u6b65\u8fd0\u884c\u65f6 (Async Runtime)\uff1f","text":"<p>\u7b54\uff1a \u5f02\u6b65\u8fd0\u884c\u65f6\u662f\u4e00\u4e2a\u5e93\uff0c\u5b83\u8d1f\u8d23\u6267\u884c\u5f02\u6b65\u4ee3\u7801\u3002\u5b83\u5305\u542b\u4e00\u4e2a\u6267\u884c\u5668 (executor)\uff0c\u8d1f\u8d23\u63a5\u6536\u9876\u5c42\u7684 Future (<code>async</code> \u51fd\u6570)\uff0c\u5e76\u901a\u8fc7\u4e0d\u65ad\u8f6e\u8be2\uff08poll\uff09\u6765\u9a71\u52a8\u5b83\u4eec\u76f4\u5230\u5b8c\u6210\u3002\u5b83\u8fd8\u5305\u542b\u4e00\u4e2a\u53cd\u5e94\u5668 (reactor)\uff0c\u8d1f\u8d23\u5904\u7406\u5916\u90e8 I/O \u4e8b\u4ef6\uff08\u5982\u7f51\u7edc\u5957\u63a5\u5b57\u51c6\u5907\u597d\u8bfb\u5199\uff09\uff0c\u5e76\u5728\u4e8b\u4ef6\u53d1\u751f\u65f6\u5524\u9192\u76f8\u5e94\u7684 Future\u3002</p> <p>Rust \u8bed\u8a00\u672c\u8eab\u53ea\u63d0\u4f9b\u4e86 <code>async/await</code> \u8bed\u6cd5\u548c <code>Future</code> trait\uff0c\u4f46\u6ca1\u6709\u5185\u7f6e\u8fd0\u884c\u65f6\u3002\u4f60\u9700\u8981\u81ea\u5df1\u9009\u62e9\u4e00\u4e2a\u793e\u533a\u63d0\u4f9b\u7684\u8fd0\u884c\u65f6\u5e93\u3002\u6700\u6d41\u884c\u7684\u8fd0\u884c\u65f6\u5305\u62ec\uff1a - <code>tokio</code>: \u529f\u80fd\u6700\u5f3a\u5927\u3001\u751f\u6001\u6700\u5b8c\u5584\u7684\u8fd0\u884c\u65f6\uff0c\u9002\u7528\u4e8e\u7f51\u7edc\u670d\u52a1\u3002 - <code>async-std</code>: \u6a21\u4eff\u6807\u51c6\u5e93 API \u7684\u8fd0\u884c\u65f6\uff0c\u5b66\u4e60\u66f2\u7ebf\u5e73\u7f13\u3002 - <code>smol</code>: \u4e00\u4e2a\u5c0f\u5de7\u3001\u7b80\u5355\u7684\u8fd0\u884c\u65f6\u3002</p>"},{"location":"chapter6_ecosystem/","title":"\u7b2c\u516d\u7ae0\uff1a\u9879\u76ee\u4e0e\u751f\u6001","text":"<p>\u606d\u559c\u4f60\uff01\u6765\u5230\u4e86\u672c\u4e66\u7684\u6700\u540e\u4e00\u7ae0\u3002\u672c\u7ae0\u6211\u4eec\u5c06\u5b66\u4e60\u5982\u4f55\u7ec4\u7ec7\u5927\u578b\u9879\u76ee\u3001\u7f16\u5199\u6709\u6548\u7684\u6d4b\u8bd5\u3001\u5904\u7406\u9519\u8bef\uff0c\u5e76\u4e86\u89e3 Rust \u5f3a\u5927\u7684\u751f\u6001\u7cfb\u7edf\uff0c\u5305\u62ec\u5982\u4f55\u4f7f\u7528\u548c\u53d1\u5e03 crate\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u5de5\u4f5c\u7a7a\u95f4\u4e0e\u53d1\u5e03\u6d41\u6c34\u7ebf</p> <pre><code>flowchart LR\n  subgraph Workspace\n    A[Root Cargo.toml] --&gt; M1[\u6210\u5458 crate]\n    A --&gt; M2[\u5171\u4eab\u4f9d\u8d56]\n  end\n  CI[CI Pipeline] --&gt; FMT[cargo fmt]\n  CI --&gt; CLP[clippy]\n  CI --&gt; TEST[cargo test]\n  CI --&gt; PKG[cargo package]\n  PKG --&gt; PUB[cargo publish]</code></pre>"},{"location":"chapter6_ecosystem/#86-rust","title":"86. \u5982\u4f55\u5728 Rust \u4e2d\u7ec4\u7ec7\u4e00\u4e2a\u590d\u6742\u7684\u9879\u76ee\uff1f\u6a21\u5757\u7cfb\u7edf\u662f\u5982\u4f55\u5de5\u4f5c\u7684\uff1f","text":"<p>\u7b54\uff1a Rust \u6709\u4e00\u4e2a\u5f3a\u5927\u7684\u6a21\u5757\u7cfb\u7edf\uff0c\u53ef\u4ee5\u5e2e\u52a9\u4f60\u5c06\u4ee3\u7801\u7ec4\u7ec7\u6210\u591a\u4e2a\u6587\u4ef6\u548c\u76ee\u5f55\u3002 - Crate: \u662f Rust \u7684\u7f16\u8bd1\u5355\u5143\u3002\u4e00\u4e2a crate \u53ef\u4ee5\u662f\u4e00\u4e2a\u4e8c\u8fdb\u5236\u7a0b\u5e8f\u6216\u4e00\u4e2a\u5e93\u3002 - Module: \u4f7f\u7528 <code>mod</code> \u5173\u952e\u5b57\uff0c\u4f60\u53ef\u4ee5\u5728\u4e00\u4e2a\u6587\u4ef6\u4e2d\u5b9a\u4e49\u4e00\u4e2a\u6a21\u5757\uff0c\u6216\u8005\u4ece\u53e6\u4e00\u4e2a\u6587\u4ef6\u52a0\u8f7d\u4e00\u4e2a\u6a21\u5757\u3002 - <code>src/main.rs</code>: \u662f\u4e8c\u8fdb\u5236 crate \u7684 crate root\u3002 - <code>src/lib.rs</code>: \u662f\u5e93 crate \u7684 crate root\u3002</p> <p>\u6587\u4ef6\u7ed3\u6784\u793a\u4f8b: <pre><code>src/\n\u251c\u2500\u2500 main.rs\n\u251c\u2500\u2500 lib.rs\n\u2514\u2500\u2500 front_of_house/\n    \u251c\u2500\u2500 hosting.rs\n    \u2514\u2500\u2500 serving.rs\n</code></pre></p> <p><code>src/lib.rs</code>: <pre><code>// \u4ece front_of_house/hosting.rs \u52a0\u8f7d\u6a21\u5757\nmod front_of_house; \n\n// \u4f7f\u7528 pub use \u91cd\u65b0\u5bfc\u51fa\uff0c\u65b9\u4fbf\u5916\u90e8\u8c03\u7528\npub use crate::front_of_house::hosting;\n\npub fn eat_at_restaurant() {\n    hosting::add_to_waitlist();\n}\n</code></pre> <code>src/front_of_house/hosting.rs</code>: <pre><code>pub fn add_to_waitlist() {}\n</code></pre> \u4f7f\u7528 <code>use</code> \u5173\u952e\u5b57\u53ef\u4ee5\u5c06\u8def\u5f84\u5f15\u5165\u4f5c\u7528\u57df\uff0c\u4ece\u800c\u4f7f\u7528\u66f4\u77ed\u7684\u540d\u79f0\u6765\u8c03\u7528\u51fd\u6570\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u6a21\u5757\u53ef\u89c1\u6027\u3001<code>pub(crate)</code> \u4e0e\u91cd\u5bfc\u51fa <pre><code>// lib.rs\nmod util {\n    pub(crate) fn helper() {}\n}\n\npub use util::helper; // \u91cd\u65b0\u5bfc\u51fa\u4e3a\u516c\u5171 API\n</code></pre></p>"},{"location":"chapter6_ecosystem/#87-pub","title":"87. <code>pub</code> \u5173\u952e\u5b57\u662f\u505a\u4ec0\u4e48\u7684\uff1f","text":"<p>\u7b54\uff1a <code>pub</code> \u5173\u952e\u5b57\u7528\u4e8e\u5c06\u6a21\u5757\u3001\u51fd\u6570\u3001\u7ed3\u6784\u4f53\u3001\u679a\u4e3e\u7b49\u6807\u8bb0\u4e3a\u516c\u5171\u7684 (public)\uff0c\u8fd9\u610f\u5473\u7740\u6a21\u5757\u5916\u7684\u4ee3\u7801\u53ef\u4ee5\u8bbf\u95ee\u5b83\u4eec\u3002\u9ed8\u8ba4\u60c5\u51b5\u4e0b\uff0cRust \u4e2d\u7684\u6240\u6709\u9879\u90fd\u662f\u79c1\u6709\u7684 (private)\u3002</p> <ul> <li><code>pub fn my_function()</code>: \u4f7f\u51fd\u6570\u53d8\u4e3a\u516c\u5171\u3002</li> <li><code>pub struct MyStruct</code>: \u4f7f\u7ed3\u6784\u4f53\u53d8\u4e3a\u516c\u5171\uff0c\u4f46\u5b83\u7684\u5b57\u6bb5\u9ed8\u8ba4\u4ecd\u7136\u662f\u79c1\u6709\u7684\u3002\u4f60\u5fc5\u987b\u5728\u6bcf\u4e2a\u9700\u8981\u516c\u5f00\u7684\u5b57\u6bb5\u524d\u4e5f\u52a0\u4e0a <code>pub</code>\u3002</li> <li><code>pub enum MyEnum</code>: \u4f7f\u679a\u4e3e\u53d8\u4e3a\u516c\u5171\uff0c\u5b83\u7684\u6240\u6709\u53d8\u4f53\u4e5f\u90fd\u4f1a\u81ea\u52a8\u53d8\u4e3a\u516c\u5171\u3002</li> </ul>"},{"location":"chapter6_ecosystem/#88-crate-module","title":"88. \u4ec0\u4e48\u662f Crate\uff1f\u5b83\u548c Module \u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - Crate: \u662f\u4e00\u4e2a\u72ec\u7acb\u7684\u3001\u53ef\u7f16\u8bd1\u7684\u5355\u5143\u3002\u5b83\u53ef\u4ee5\u751f\u6210\u4e00\u4e2a\u53ef\u6267\u884c\u6587\u4ef6\uff08\u4e8c\u8fdb\u5236 crate\uff09\u6216\u4e00\u4e2a\u53ef\u88ab\u5176\u4ed6\u9879\u76ee\u7528\u4f5c\u4f9d\u8d56\u7684\u5e93\uff08\u5e93 crate\uff09\u3002<code>cargo build</code> \u6216 <code>cargo run</code> \u547d\u4ee4\u64cd\u4f5c\u7684\u5bf9\u8c61\u5c31\u662f\u4e00\u4e2a crate\u3002 - Module: \u662f\u5728\u4e00\u4e2a crate \u5185\u90e8\u7ec4\u7ec7\u4ee3\u7801\u7684\u4e00\u79cd\u65b9\u5f0f\u3002\u5b83\u5b9a\u4e49\u4e86\u4e00\u4e2a\u547d\u540d\u7a7a\u95f4\uff0c\u53ef\u4ee5\u5305\u542b\u51fd\u6570\u3001\u7ed3\u6784\u4f53\u4ee5\u53ca\u5176\u4ed6\u6a21\u5757\u3002\u6a21\u5757\u5e2e\u52a9\u4f60\u63a7\u5236\u4ee3\u7801\u7684\u7ec4\u7ec7\u548c\u53ef\u89c1\u6027\uff08\u79c1\u6709/\u516c\u5171\uff09\u3002</p> <p>\u7b80\u5355\u6765\u8bf4\uff1a\u4e00\u4e2a\u9879\u76ee\uff08\u5305\uff09\u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a crate\uff0c\u4e00\u4e2a crate \u5305\u542b\u4e00\u4e2a\u6216\u591a\u4e2a module\u3002</p>"},{"location":"chapter6_ecosystem/#89-crate","title":"89. \u5982\u4f55\u4f7f\u7528\u5916\u90e8\u7684 Crate\uff1f","text":"<p>\u7b54\uff1a \u901a\u8fc7 <code>Cargo.toml</code> \u6587\u4ef6\u3002 1.  \u5728 <code>Cargo.toml</code> \u7684 <code>[dependencies]</code> \u90e8\u5206\u6dfb\u52a0\u4f60\u9700\u8981\u7684 crate \u548c\u7248\u672c\u53f7\u3002     <pre><code>[dependencies]\nrand = \"0.8.5\"\n</code></pre> 2.  \u8fd0\u884c <code>cargo build</code>\uff0cCargo \u4f1a\u81ea\u52a8\u4ece crates.io\uff08Rust \u7684\u5b98\u65b9\u5305\u4ed3\u5e93\uff09\u4e0b\u8f7d\u5e76\u7f16\u8bd1\u8fd9\u4e2a\u4f9d\u8d56\u3002 3.  \u5728\u4f60\u7684\u4ee3\u7801\u4e2d\u4f7f\u7528 <code>use</code> \u5173\u952e\u5b57\u6765\u5f15\u5165\u8fd9\u4e2a crate \u7684\u529f\u80fd\u3002     <pre><code>use rand::Rng;\n\nfn main() {\n    let mut rng = rand::thread_rng();\n    let n: u32 = rng.gen_range(1..=100);\n    println!(\"Random number: {}\", n);\n}\n</code></pre></p>"},{"location":"chapter6_ecosystem/#90-resultt-e","title":"90. <code>Result&lt;T, E&gt;</code> \u679a\u4e3e\u662f\u4ec0\u4e48\uff1f\u5b83\u5982\u4f55\u7528\u4e8e\u9519\u8bef\u5904\u7406\uff1f","text":"<p>\u7b54\uff1a <code>Result&lt;T, E&gt;</code> \u662f\u6807\u51c6\u5e93\u4e2d\u7528\u4e8e\u53ef\u6062\u590d\u9519\u8bef\u5904\u7406\u7684\u6838\u5fc3\u679a\u4e3e\u3002 <pre><code>enum Result&lt;T, E&gt; {\n    Ok(T),  // \u8868\u793a\u64cd\u4f5c\u6210\u529f\uff0c\u5e76\u5305\u542b\u4e00\u4e2a T \u7c7b\u578b\u7684\u503c\n    Err(E), // \u8868\u793a\u64cd\u4f5c\u5931\u8d25\uff0c\u5e76\u5305\u542b\u4e00\u4e2a E \u7c7b\u578b\u7684\u9519\u8bef\u4fe1\u606f\n}\n</code></pre> \u51fd\u6570\u5728\u53ef\u80fd\u5931\u8d25\u65f6\uff0c\u5e94\u8be5\u8fd4\u56de <code>Result</code> \u7c7b\u578b\u3002\u8fd9\u5f3a\u5236\u8c03\u7528\u8005\u5fc5\u987b\u5904\u7406\u9519\u8bef\u7684\u53ef\u80fd\u6027\uff0c\u4ece\u800c\u4f7f\u4ee3\u7801\u66f4\u5065\u58ee\u3002\u4f60\u53ef\u4ee5\u4f7f\u7528 <code>match</code>\u3001<code>if let</code> \u6216\u66f4\u7b80\u6d01\u7684 <code>?</code> \u8fd0\u7b97\u7b26\u6765\u5904\u7406 <code>Result</code>\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>thiserror</code> \u5b9a\u4e49\u5e93\u9519\u8bef\uff0c<code>anyhow</code> \u7528\u4e8e\u5e94\u7528\u5c42 <pre><code>// Cargo.toml\n// thiserror = \"1\", anyhow = \"1\"\n\nuse thiserror::Error;\n\n#[derive(Debug, Error)]\npub enum MyError {\n    #[error(\"io error: {0}\")] Io(#[from] std::io::Error),\n    #[error(\"parse int error: {0}\")] Parse(#[from] std::num::ParseIntError),\n}\n\npub fn parse_num(s: &amp;str) -&gt; Result&lt;i32, MyError&gt; {\n    Ok(s.trim().parse()?)\n}\n\nfn main() -&gt; anyhow::Result&lt;()&gt; {\n    let n = parse_num(\"42\")?;\n    println!(\"{}\", n);\n    Ok(())\n}\n</code></pre></p>"},{"location":"chapter6_ecosystem/#91-panic-result","title":"91. <code>panic!</code> \u548c <code>Result</code> \u6709\u4ec0\u4e48\u533a\u522b\uff1f\u5e94\u8be5\u5728\u4ec0\u4e48\u65f6\u5019\u4f7f\u7528\u5b83\u4eec\uff1f","text":"<p>\u7b54\uff1a - <code>panic!</code>: \u7528\u4e8e\u4e0d\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002\u5f53 <code>panic!</code> \u88ab\u8c03\u7528\u65f6\uff0c\u7a0b\u5e8f\u4f1a\u7acb\u5373\u505c\u6b62\u6267\u884c\uff0c\u5c55\u5f00\u5e76\u6e05\u7406\u6808\uff0c\u7136\u540e\u9000\u51fa\u3002\u5b83\u5e94\u8be5\u7528\u4e8e\u8868\u793a\u7a0b\u5e8f\u8fdb\u5165\u4e86\u4e00\u4e2a\u5b83\u65e0\u6cd5\u5904\u7406\u7684\u3001\u4e0d\u5e94\u8be5\u53d1\u751f\u7684\u72b6\u6001\uff08\u4f8b\u5982\uff0c\u7f16\u7a0b bug\uff09\u3002 - <code>Result&lt;T, E&gt;</code>: \u7528\u4e8e\u53ef\u6062\u590d\u7684\u9519\u8bef\u3002\u5f53\u4e00\u4e2a\u9519\u8bef\u662f\u53ef\u9884\u671f\u7684\uff0c\u5e76\u4e14\u8c03\u7528\u8005\u5e94\u8be5\u6709\u80fd\u529b\u53bb\u5904\u7406\u5b83\u65f6\uff08\u4f8b\u5982\uff0c\u6587\u4ef6\u672a\u627e\u5230\u3001\u7f51\u7edc\u8bf7\u6c42\u5931\u8d25\uff09\uff0c\u4f60\u5e94\u8be5\u8fd4\u56de\u4e00\u4e2a <code>Result</code>\u3002</p> <p>\u7ecf\u9a8c\u6cd5\u5219\uff1a\u5982\u679c\u4e00\u4e2a\u51fd\u6570\u56e0\u4e3a\u8c03\u7528\u8005\u4f20\u9012\u4e86\u4e0d\u5408\u6cd5\u7684\u503c\u800c\u5931\u8d25\uff0c\u90a3\u4e48 <code>panic!</code> \u662f\u5408\u9002\u7684\u3002\u5982\u679c\u5931\u8d25\u7684\u539f\u56e0\u6765\u81ea\u5916\u90e8\u73af\u5883\uff0c\u90a3\u4e48\u8fd4\u56de <code>Result</code> \u66f4\u5408\u9002\u3002</p>"},{"location":"chapter6_ecosystem/#92","title":"92. <code>?</code> \u8fd0\u7b97\u7b26\u662f\u505a\u4ec0\u4e48\u7528\u7684\uff1f","text":"<p>\u7b54\uff1a <code>?</code> \u8fd0\u7b97\u7b26\u662f\u7528\u4e8e\u9519\u8bef\u4f20\u64ad\u7684\u8bed\u6cd5\u7cd6\u3002\u5b83\u53ef\u4ee5\u6781\u5927\u5730\u7b80\u5316\u5904\u7406 <code>Result</code> \u548c <code>Option</code> \u7684\u4ee3\u7801\u3002</p> <p>\u5f53\u4f60\u5728\u4e00\u4e2a <code>Result</code> \u503c\u540e\u9762\u4f7f\u7528 <code>?</code> \u65f6\uff1a - \u5982\u679c <code>Result</code> \u662f <code>Ok(value)</code>\uff0c\u5b83\u4f1a\u89e3\u5305 <code>Result</code> \u5e76\u5c06 <code>value</code> \u4f5c\u4e3a\u8868\u8fbe\u5f0f\u7684\u7ed3\u679c\u3002 - \u5982\u679c <code>Result</code> \u662f <code>Err(e)</code>\uff0c\u5b83\u4f1a\u7acb\u5373\u4ece\u5f53\u524d\u51fd\u6570\u8fd4\u56de\uff0c\u5e76\u5c06\u8fd9\u4e2a <code>Err(e)</code> \u4f5c\u4e3a\u6574\u4e2a\u51fd\u6570\u7684\u8fd4\u56de\u503c\u3002</p> <p><code>?</code> \u8fd0\u7b97\u7b26\u53ea\u80fd\u5728\u8fd4\u56de <code>Result</code> \u6216 <code>Option</code>\uff08\u6216\u5176\u4ed6\u5b9e\u73b0\u4e86 <code>Try</code> trait \u7684\u7c7b\u578b\uff09\u7684\u51fd\u6570\u4e2d\u4f7f\u7528\u3002</p> <pre><code>use std::fs::File;\nuse std::io::{self, Read};\n\n// \u4f7f\u7528 `?` \u8fd0\u7b97\u7b26\uff0c\u4ee3\u7801\u975e\u5e38\u7b80\u6d01\nfn read_username_from_file() -&gt; Result&lt;String, io::Error&gt; {\n    let mut username_file = File::open(\"hello.txt\")?;\n    let mut username = String::new();\n    username_file.read_to_string(&amp;mut username)?;\n    Ok(username)\n}\n</code></pre>"},{"location":"chapter6_ecosystem/#93-rust","title":"93. \u5982\u4f55\u5728 Rust \u4e2d\u7f16\u5199\u6d4b\u8bd5\uff1f","text":"<p>\u7b54\uff1a Rust \u5185\u7f6e\u4e86\u5bf9\u5355\u5143\u6d4b\u8bd5\u548c\u96c6\u6210\u6d4b\u8bd5\u7684\u652f\u6301\u3002 - \u5355\u5143\u6d4b\u8bd5 (Unit Tests): \u901a\u5e38\u4e0e\u88ab\u6d4b\u8bd5\u7684\u4ee3\u7801\u653e\u5728\u540c\u4e00\u4e2a\u6587\u4ef6\u4e2d\uff0c\u4f4d\u4e8e\u4e00\u4e2a\u6807\u8bb0\u4e86 <code>#[cfg(test)]</code> \u7684 <code>mod tests</code> \u6a21\u5757\u91cc\u3002\u5b83\u4eec\u7528\u4e8e\u6d4b\u8bd5\u79c1\u6709\u51fd\u6570\u3002 - \u96c6\u6210\u6d4b\u8bd5 (Integration Tests): \u4f4d\u4e8e\u9879\u76ee\u6839\u76ee\u5f55\u4e0b\u7684 <code>tests</code> \u6587\u4ef6\u5939\u4e2d\u3002\u6bcf\u4e2a <code>.rs</code> \u6587\u4ef6\u90fd\u662f\u4e00\u4e2a\u72ec\u7acb\u7684 crate\u3002\u5b83\u4eec\u53ea\u80fd\u6d4b\u8bd5\u5e93\u7684\u516c\u5171 API\u3002</p> <p>\u6d4b\u8bd5\u51fd\u6570\u9700\u8981\u7528 <code>#[test]</code> \u5c5e\u6027\u6765\u6807\u6ce8\u3002</p> <p><pre><code>// \u5728 `src/lib.rs` \u4e2d\npub fn add_two(a: i32) -&gt; i32 {\n    a + 2\n}\n\n#[cfg(test)]\nmod tests {\n    use super::*; // \u5f15\u5165\u5916\u90e8\u6a21\u5757\n\n    #[test]\n    fn it_adds_two() {\n        assert_eq!(4, add_two(2));\n    }\n\n    #[test]\n    #[should_panic] // \u6d4b\u8bd5\u5e94\u8be5 panic \u7684\u60c5\u51b5\n    fn it_panics() {\n        // ...\n    }\n}\n</code></pre> \u4f7f\u7528 <code>cargo test</code> \u6765\u8fd0\u884c\u6240\u6709\u6d4b\u8bd5\u3002</p>"},{"location":"chapter6_ecosystem/#94-assertassert_eq-assert_ne","title":"94. <code>assert!</code>\u3001<code>assert_eq!</code> \u548c <code>assert_ne!</code> \u5b8f\u6709\u4ec0\u4e48\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a \u5b83\u4eec\u90fd\u662f\u5728\u6d4b\u8bd5\u4e2d\u5e38\u7528\u7684\u65ad\u8a00\u5b8f\uff1a - <code>assert!(expression)</code>: \u63a5\u53d7\u4e00\u4e2a\u5e03\u5c14\u8868\u8fbe\u5f0f\u3002\u5982\u679c\u8868\u8fbe\u5f0f\u4e3a <code>true</code>\uff0c\u6d4b\u8bd5\u901a\u8fc7\uff1b\u5982\u679c\u4e3a <code>false</code>\uff0c\u5219 <code>panic</code>\u3002 - <code>assert_eq!(left, right)</code>: \u6bd4\u8f83\u4e24\u4e2a\u53c2\u6570\u662f\u5426\u76f8\u7b49\u3002\u5982\u679c <code>left == right</code>\uff0c\u6d4b\u8bd5\u901a\u8fc7\u3002\u5982\u679c\u4e0d\u7b49\uff0c\u5b83\u4f1a <code>panic</code> \u5e76\u6e05\u6670\u5730\u6253\u5370\u51fa\u4e24\u4e2a\u53c2\u6570\u7684\u503c\uff0c\u65b9\u4fbf\u8c03\u8bd5\u3002 - <code>assert_ne!(left, right)</code>: \u6bd4\u8f83\u4e24\u4e2a\u53c2\u6570\u662f\u5426\u4e0d\u76f8\u7b49\u3002\u5982\u679c <code>left != right</code>\uff0c\u6d4b\u8bd5\u901a\u8fc7\u3002</p> <p>\u5728\u5927\u591a\u6570\u60c5\u51b5\u4e0b\uff0c<code>assert_eq!</code> \u548c <code>assert_ne!</code> \u6bd4 <code>assert!</code> \u66f4\u597d\uff0c\u56e0\u4e3a\u5b83\u4eec\u80fd\u5728\u5931\u8d25\u65f6\u63d0\u4f9b\u66f4\u591a\u7684\u4e0a\u4e0b\u6587\u4fe1\u606f\u3002</p>"},{"location":"chapter6_ecosystem/#95-doc-tests","title":"95. \u4ec0\u4e48\u662f\u6587\u6863\u6d4b\u8bd5 (Doc Tests)\uff1f","text":"<p>\u7b54\uff1a \u6587\u6863\u6d4b\u8bd5\u662f\u5199\u5728\u6587\u6863\u6ce8\u91ca (<code>///</code>) \u4e2d\u7684\u4ee3\u7801\u793a\u4f8b\u3002Rust \u7684\u6d4b\u8bd5\u5de5\u5177 <code>cargo test</code> \u4f1a\u81ea\u52a8\u63d0\u53d6\u8fd9\u4e9b\u4ee3\u7801\u793a\u4f8b\uff0c\u5c06\u5b83\u4eec\u7f16\u8bd1\u5e76\u4f5c\u4e3a\u6d4b\u8bd5\u6765\u8fd0\u884c\u3002</p> <p>\u8fd9\u662f\u4e00\u79cd\u975e\u5e38\u5f3a\u5927\u7684\u529f\u80fd\uff0c\u5b83\u4fdd\u8bc1\u4e86\u4f60\u7684\u6587\u6863\u793a\u4f8b\u6c38\u8fdc\u4e0d\u4f1a\u8fc7\u65f6\u6216\u5305\u542b\u9519\u8bef\u3002</p> <p><pre><code>/// Adds two to the number given.\n///\n/// # Examples\n///\n/// ```\n/// let arg = 5;\n/// let answer = my_crate::add_two(arg);\n///\n/// assert_eq!(7, answer);\n/// ```\npub fn add_two(a: i32) -&gt; i32 {\n    a + 2\n}\n</code></pre> \u8fd0\u884c <code>cargo test</code> \u65f6\uff0c\u4e0a\u9762 <code>Examples</code> \u90e8\u5206\u7684\u4ee3\u7801\u5c31\u4f1a\u88ab\u6267\u884c\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u6d4b\u8bd5\u5939\u5177\u4e0e <code>#[test]</code> \u8f85\u52a9\u51fd\u6570 <pre><code>// tests/common/mod.rs\npub fn setup() { /* create temp dirs, set env, etc. */ }\n\n// tests/integration.rs\nmod common;\n\n#[test]\nfn it_works() {\n    common::setup();\n    assert_eq!(2 + 2, 4);\n}\n</code></pre></p>"},{"location":"chapter6_ecosystem/#96-benchmarking","title":"96. \u4ec0\u4e48\u662f\u57fa\u51c6\u6d4b\u8bd5 (Benchmarking)\uff1f","text":"<p>\u7b54\uff1a \u57fa\u51c6\u6d4b\u8bd5\u7528\u4e8e\u8861\u91cf\u4ee3\u7801\u7684\u8fd0\u884c\u901f\u5ea6\u3002Rust \u7684\u6807\u51c6\u6d4b\u8bd5\u5de5\u5177\u76ee\u524d\u8fd8\u4e0d\u652f\u6301\u7a33\u5b9a\u7684\u57fa\u51c6\u6d4b\u8bd5\u3002\u4f60\u9700\u8981\u4f7f\u7528 nightly \u7248\u672c\u7684 Rust \u7f16\u8bd1\u5668\uff0c\u6216\u8005\u4f7f\u7528\u793e\u533a\u5f00\u53d1\u7684\u5e93\u3002</p> <p>\u6700\u6d41\u884c\u7684\u57fa\u51c6\u6d4b\u8bd5\u5e93\u662f <code>Criterion</code>\u3002\u4f60\u9700\u8981\u5c06\u5b83\u6dfb\u52a0\u5230 <code>[dev-dependencies]</code> \u4e2d\uff0c\u5e76\u5728 <code>benches</code> \u76ee\u5f55\u4e0b\u521b\u5efa\u57fa\u51c6\u6d4b\u8bd5\u6587\u4ef6\u3002</p>"},{"location":"chapter6_ecosystem/#97-cargo-workspaces","title":"97. \u4ec0\u4e48\u662f Cargo \u5de5\u4f5c\u7a7a\u95f4 (Workspaces)\uff1f","text":"<p>\u7b54\uff1a \u5de5\u4f5c\u7a7a\u95f4\u53ef\u4ee5\u5e2e\u52a9\u4f60\u7ba1\u7406\u591a\u4e2a\u76f8\u4e92\u5173\u8054\u7684\u3001\u9700\u8981\u534f\u540c\u5f00\u53d1\u7684 crate\u3002\u4e00\u4e2a\u5de5\u4f5c\u7a7a\u95f4\u6709\u4e00\u4e2a\u9876\u5c42\u7684 <code>Cargo.toml</code> \u6587\u4ef6\uff0c\u5b83\u4e0d\u5305\u542b <code>[package]</code> \u90e8\u5206\uff0c\u800c\u662f\u5b9a\u4e49\u4e86\u5de5\u4f5c\u7a7a\u95f4\u7684\u6210\u5458\u3002</p> <p>\u6240\u6709\u5728\u5de5\u4f5c\u7a7a\u95f4\u4e2d\u7684 crate \u5171\u4eab\u4e00\u4e2a <code>target</code> \u76ee\u5f55\uff08\u5b58\u653e\u7f16\u8bd1\u7ed3\u679c\uff09\u548c\u4e00\u4e2a <code>Cargo.lock</code> \u6587\u4ef6\u3002\u8fd9\u53ef\u4ee5\u8282\u7701\u7f16\u8bd1\u65f6\u95f4\u5e76\u4fdd\u8bc1\u6240\u6709 crate \u4f7f\u7528\u76f8\u540c\u7248\u672c\u7684\u4f9d\u8d56\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u5de5\u4f5c\u7a7a\u95f4\u9876\u5c42\u914d\u7f6e\u4e0e\u6210\u5458 <pre><code># Cargo.toml (workspace root)\n[workspace]\nmembers = [\"crates/app\", \"crates/lib\"]\nresolver = \"2\"\n\n[workspace.package]\nedition = \"2021\"\n\n[workspace.dependencies]\nserde = { version = \"1\", features = [\"derive\"] }\n</code></pre></p>"},{"location":"chapter6_ecosystem/#98-crate-cratesio","title":"98. \u5982\u4f55\u53d1\u5e03\u6211\u81ea\u5df1\u7684 Crate \u5230 crates.io\uff1f","text":"<p>\u7b54\uff1a 1.  \u767b\u5f55: \u4f7f\u7528 <code>cargo login</code> \u547d\u4ee4\uff0c\u5e76\u7c98\u8d34\u4ece crates.io \u83b7\u53d6\u7684 API token\u3002 2.  \u6dfb\u52a0\u5143\u6570\u636e: \u786e\u4fdd\u4f60\u7684 <code>Cargo.toml</code> \u6587\u4ef6\u4e2d\u5305\u542b\u4e86\u5fc5\u8981\u7684\u5143\u6570\u636e\uff0c\u5982 <code>name</code>, <code>version</code>, <code>authors</code>, <code>description</code>, <code>license</code>\u3002 3.  \u6253\u5305: \u8fd0\u884c <code>cargo package</code> \u53ef\u4ee5\u68c0\u67e5\u4f60\u7684\u5305\u662f\u5426\u80fd\u6210\u529f\u6784\u5efa\u5e76\u6253\u5305\u6210 <code>.crate</code> \u6587\u4ef6\u3002 4.  \u53d1\u5e03: \u8fd0\u884c <code>cargo publish</code>\u3002\u8fd9\u4f1a\u4e0a\u4f20\u4f60\u7684 <code>.crate</code> \u6587\u4ef6\u5230 crates.io\u3002</p> <p>\u6ce8\u610f\uff1a\u53d1\u5e03\u4e00\u4e2a\u7248\u672c\u662f\u6c38\u4e45\u6027\u7684\uff0c\u4f60\u4e0d\u80fd\u8986\u76d6\u5b83\uff0c\u53ea\u80fd\u53d1\u5e03\u65b0\u7684\u7248\u672c\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u53d1\u5e03\u524d\u81ea\u68c0\u6e05\u5355 <pre><code>cargo fmt --all -- --check\ncargo clippy --all-targets --all-features -- -D warnings\ncargo test --all --all-features\ncargo publish --dry-run\n</code></pre></p>"},{"location":"chapter6_ecosystem/#99-rust-crate","title":"99. Rust \u751f\u6001\u4e2d\u6709\u54ea\u4e9b\u5fc5\u77e5\u7684 Crate\uff1f","text":"<p>\u7b54\uff1a Rust \u7684\u751f\u6001\u7cfb\u7edf\u975e\u5e38\u4e30\u5bcc\u3002\u4ee5\u4e0b\u662f\u4e00\u4e9b\u51e0\u4e4e\u5728\u6240\u6709\u9886\u57df\u90fd\u4f1a\u9047\u5230\u7684\u6838\u5fc3 crate\uff1a - <code>serde</code>: \u7528\u4e8e\u9ad8\u6548\u3001\u901a\u7528\u5730\u5e8f\u5217\u5316\u548c\u53cd\u5e8f\u5217\u5316 Rust \u6570\u636e\u7ed3\u6784\uff08\u4f8b\u5982\uff0c\u8f6c\u6362\u6210 JSON\uff09\u3002 - <code>rand</code>: \u63d0\u4f9b\u968f\u673a\u6570\u751f\u6210\u529f\u80fd\u3002 - <code>regex</code>: \u5b98\u65b9\u7ef4\u62a4\u7684\u6b63\u5219\u8868\u8fbe\u5f0f\u5e93\u3002 - <code>tokio</code> / <code>async-std</code>: \u5f02\u6b65\u8fd0\u884c\u65f6\u3002 - <code>slog</code> / <code>log</code> + <code>env_logger</code>: \u7528\u4e8e\u65e5\u5fd7\u8bb0\u5f55\u3002 - <code>clap</code> / <code>structopt</code>: \u7528\u4e8e\u6784\u5efa\u5f3a\u5927\u7684\u547d\u4ee4\u884c\u5e94\u7528\u3002 - <code>anyhow</code> / <code>thiserror</code>: \u7528\u4e8e\u66f4\u7075\u6d3b\u3001\u66f4\u6613\u4e8e\u4f7f\u7528\u7684\u9519\u8bef\u5904\u7406\u3002 - <code>reqwest</code>: \u4e00\u4e2a\u5f3a\u5927\u3001\u6613\u7528\u7684 HTTP \u5ba2\u6237\u7aef\u3002 - <code>actix-web</code> / <code>rocket</code> / <code>axum</code>: \u7528\u4e8e\u6784\u5efa Web \u670d\u52a1\u7684\u6846\u67b6\u3002</p>"},{"location":"chapter6_ecosystem/#100-rust","title":"100. \u5b66\u4e60 Rust \u7684\u4e0b\u4e00\u6b65\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a \u606d\u559c\u4f60\u5b8c\u6210\u4e86 100 \u95ee\uff01\u4f60\u5df2\u7ecf\u638c\u63e1\u4e86 Rust \u7684\u6838\u5fc3\u3002\u4e0b\u4e00\u6b65\u662f\u5b9e\u8df5\u3002 1.  \u505a\u9879\u76ee: \u5c1d\u8bd5\u7528 Rust \u5199\u4e00\u4e9b\u4f60\u611f\u5174\u8da3\u7684\u4e1c\u897f\uff0c\u6bd4\u5982\u4e00\u4e2a\u547d\u4ee4\u884c\u5de5\u5177\u3001\u4e00\u4e2a\u7b80\u5355\u7684 Web \u670d\u52a1\u5668\u3001\u4e00\u4e2a\u5c0f\u6e38\u620f\u7b49\u3002 2.  \u9605\u8bfb\u4ee3\u7801: \u9605\u8bfb\u4e00\u4e9b\u4f18\u79c0\u5f00\u6e90\u9879\u76ee\u7684\u4ee3\u7801\uff0c\u6bd4\u5982 <code>ripgrep</code>\u3001<code>fd</code> \u7b49\uff0c\u5b66\u4e60\u522b\u4eba\u662f\u5982\u4f55\u7ec4\u7ec7\u4ee3\u7801\u548c\u89e3\u51b3\u95ee\u9898\u7684\u3002 3.  \u53c2\u4e0e\u793e\u533a: \u52a0\u5165 Rust \u7684\u793e\u533a\u8bba\u575b\uff08users.rust-lang.org\uff09\u3001Discord \u6216 Reddit\uff0c\u63d0\u95ee\u5e76\u5e2e\u52a9\u4ed6\u4eba\u3002 4.  \u6df1\u5165\u63a2\u7d22: \u9605\u8bfb\u300aThe Rustonomicon\u300b\u6765\u4e86\u89e3\u4e0d\u5b89\u5168 Rust \u7684\u4e16\u754c\uff0c\u6216\u8005\u9605\u8bfb\u300aAsync Programming in Rust\u300b\u6765\u6df1\u5165\u7406\u89e3\u5f02\u6b65\u3002</p> <p>\u795d\u4f60\u5728 Rust \u7684\u4e16\u754c\u91cc\u63a2\u7d22\u6109\u5feb\uff01</p>"},{"location":"chapter7_engineering/","title":"\u7b2c\u4e03\u7ae0\uff1a\u5de5\u7a0b\u4e0e\u8fdb\u9636\u4e13\u9898","text":"<p>\u672c\u7ae0\u805a\u7126 Rust \u7684\u5de5\u7a0b\u5316\u5b9e\u8df5\u4e0e\u8bed\u8a00\u8fdb\u9636\u4e3b\u9898\uff0c\u6db5\u76d6\u5b8f\u3001unsafe/FFI\u3001\u7c7b\u578b\u7cfb\u7edf\u9ad8\u9636\u6982\u5ff5\u3001\u5185\u5b58\u4e0e\u5e76\u53d1\u6a21\u578b\u3001\u5f02\u6b65\u8fdb\u9636\u3001\u6027\u80fd\u4f18\u5316\u3001\u5de5\u5177\u94fe\u4e0e\u53d1\u5e03\u3001no_std/\u5d4c\u5165\u5f0f/WebAssembly \u7b49\u65b9\u5411\uff0c\u5e2e\u52a9\u4f60\u628a\u57fa\u7840\u80fd\u529b\u5347\u7ea7\u4e3a\u751f\u4ea7\u7ea7\u80fd\u529b\u3002</p> <p>\u793a\u610f\u56fe\uff1a\u5de5\u7a0b\u5316\u89c2\u6d4b\u4e0e CI/CD</p> <pre><code>flowchart LR\n  Dev --&gt; PR[Pull Request]\n  PR --&gt; CI[CI Checks: fmt/clippy/test]\n  CI --&gt; SEC[\u5b89\u5168\u626b\u63cf: deny/vet]\n  CI --&gt; PERF[bench/bloat]\n  SEC --&gt; REL[Release]\n  PERF --&gt; REL\n  REL --&gt; CD[CD \u53d1\u5e03]\n  CD --&gt; OBS[\u89c2\u6d4b: tracing/metrics/logs]</code></pre>"},{"location":"chapter7_engineering/#101-macro_rules","title":"101. \u5982\u4f55\u7f16\u5199 <code>macro_rules!</code> \u5b8f\uff1f\u91cd\u590d\u5339\u914d\u8bed\u6cd5\u600e\u4e48\u7528\uff1f","text":"<p>\u7b54\uff1a <code>macro_rules!</code> \u662f\u58f0\u660e\u5f0f\u5b8f\uff0c\u901a\u8fc7\u201c\u5339\u914d-\u66ff\u6362\u201d\u89c4\u5219\u5c55\u5f00\u4ee3\u7801\u3002\u5e38\u89c1\u7247\u6bb5\u8bf4\u660e\uff1a<code>ident</code> \u6807\u8bc6\u7b26\uff0c<code>expr</code> \u8868\u8fbe\u5f0f\uff0c<code>ty</code> \u7c7b\u578b\uff0c<code>tt</code> \u8bed\u6cd5\u6811\u6807\u8bb0\u7b49\u3002\u91cd\u590d\u8bed\u6cd5\u4f7f\u7528 <code>$( ... ),*</code>\uff08\u9017\u53f7\u5206\u9694\u96f6\u4e2a\u6216\u591a\u4e2a\uff09\u6216 <code>+</code>\uff08\u81f3\u5c11\u4e00\u4e2a\uff09\u3002 <pre><code>macro_rules! vec_of_strings {\n    ( $( $s:expr ),* $(,)? ) =&gt; {{\n        let mut v = Vec::new();\n        $( v.push($s.to_string()); )*\n        v\n    }};\n}\nlet v = vec_of_strings!(\"a\", \"b\", \"c\");\n</code></pre></p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a\u5b8f\u6761\u4ef6\u5206\u652f\u4e0e\u8c03\u8bd5 <pre><code>macro_rules! debug_ln {\n    ($($t:tt)*) =&gt; {{\n        #[cfg(debug_assertions)] { println!($($t)*); }\n        #[cfg(not(debug_assertions))] { () }\n    }}\n}\n</code></pre></p>"},{"location":"chapter7_engineering/#102-synquote","title":"102. \u8fc7\u7a0b\u5b8f\u6709\u54ea\u4e9b\u7c7b\u578b\uff1f\u5982\u4f55\u7528 <code>syn</code>/<code>quote</code> \u7f16\u5199\uff1f","text":"<p>\u7b54\uff1a \u8fc7\u7a0b\u5b8f\u5206\u4e3a\u4e09\u7c7b\uff1a\u6d3e\u751f\u5b8f <code>#[derive(MyDerive)]</code>\uff0c\u5c5e\u6027\u5b8f <code>#[my_attr]</code>\uff0c\u51fd\u6570\u5f0f\u5b8f <code>my_macro!{}</code>\u3002\u5b9e\u73b0\u6b65\u9aa4\uff1a\u89e3\u6790 TokenStream\uff08<code>syn</code>\uff09\u3001\u6784\u9020/\u53d8\u6362 AST\u3001\u751f\u6210 TokenStream\uff08<code>quote!</code>\uff09\u3002 <pre><code>// \u7b80\u5316\u793a\u4f8b\uff1a\u6d3e\u751f\u5b8f\n#[proc_macro_derive(Hello)]\npub fn hello(input: TokenStream) -&gt; TokenStream {\n    let ast = syn::parse_macro_input!(input as syn::DeriveInput);\n    let name = &amp;ast.ident;\n    quote::quote! { impl #name { pub fn hello() { println!(\"hello\"); } } }\n        .into()\n}\n</code></pre></p>"},{"location":"chapter7_engineering/#103","title":"103. \u5982\u4f55\u8c03\u8bd5\u5b8f\u5c55\u5f00\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>cargo expand</code> \u67e5\u770b\u5c55\u5f00\u540e\u7684\u4ee3\u7801\uff0c\u5b9a\u4f4d\u5339\u914d\u5206\u652f\u4e0e\u751f\u6210\u7ed3\u679c\uff1b\u5bf9 <code>macro_rules!</code> \u53ef\u5206\u6b65\u5f15\u5165\u4e2d\u95f4\u5b8f\uff1b\u8fc7\u7a0b\u5b8f\u4e2d\u53ef\u6253\u5370/<code>dbg!</code> AST \u7247\u6bb5\u6216\u7528 <code>eprintln!</code> \u8c03\u8bd5\u3002</p>"},{"location":"chapter7_engineering/#104-unsafe","title":"104. <code>unsafe</code> \u63d0\u4f9b\u7684\u4e94\u7c7b\u80fd\u529b\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u5ba1\u8ba1\u4f7f\u7528\uff1f","text":"<p>\u7b54\uff1a \u4e94\u7c7b\u80fd\u529b\uff1a\u89e3\u5f15\u7528\u88f8\u6307\u9488\u3001\u8c03\u7528 <code>unsafe</code> \u51fd\u6570/\u65b9\u6cd5\u3001\u8bbf\u95ee/\u4fee\u6539\u53ef\u53d8\u9759\u6001\u53d8\u91cf\u3001\u5b9e\u73b0 <code>unsafe</code> trait\u3001\u8bbf\u95ee <code>union</code> \u975e\u6d3b\u8dc3\u5b57\u6bb5\u3002\u5ba1\u8ba1\u8981\u70b9\uff1a\u7f29\u5c0f <code>unsafe</code> \u4f5c\u7528\u57df\u3001\u5efa\u7acb\u4e0d\u53d8\u5f0f\uff08\u6587\u6863\u5316\uff09\u3001\u4ee5\u5b89\u5168 API \u5305\u88f9\u4e0d\u5b89\u5168\u7ec6\u8282\u5e76\u6d4b\u8bd5/\u6a21\u7cca\u6d4b\u8bd5\u3002</p>"},{"location":"chapter7_engineering/#105-c","title":"105. \u4e0e C \u4e92\u64cd\u4f5c\u7684\u5173\u952e\u70b9\u6709\u54ea\u4e9b\uff1f","text":"<p>\u7b54\uff1a - ABI\uff1a\u4f7f\u7528 <code>extern \"C\"</code>\u3001<code>#[repr(C)]</code> \u4fdd\u8bc1\u5e03\u5c40\u4e0e\u8c03\u7528\u7ea6\u5b9a\u3002 - \u7ed1\u5b9a\uff1a\u7528 <code>bindgen</code> \u751f\u6210 Rust \u7ed1\u5b9a\uff1b\u7528 <code>cbindgen</code> \u4e3a C \u751f\u6210\u5934\u6587\u4ef6\u3002 - \u6307\u9488/\u6240\u6709\u6743\uff1a\u660e\u786e\u5185\u5b58\u6240\u6709\u8005\u4e0e\u91ca\u653e\u804c\u8d23\uff0c\u907f\u514d\u53cc\u91cd\u91ca\u653e\uff1b\u8de8\u8fb9\u754c\u4f20 <code>*mut T/*const T</code> \u6216\u53e5\u67c4\u3002</p>"},{"location":"chapter7_engineering/#106","title":"106. \u539f\u59cb\u6307\u9488\u7684\u522b\u540d/\u5bf9\u9f50\u6709\u54ea\u4e9b\u9677\u9631\uff1f","text":"<p>\u7b54\uff1a - \u522b\u540d\uff08aliasing\uff09\uff1a\u540c\u4e00\u5185\u5b58\u82e5\u88ab\u53ef\u53d8\u5f15\u7528\u4e0e\u4e0d\u53ef\u53d8\u5f15\u7528\u540c\u65f6\u89c2\u5bdf\u4f1a\u89e6\u53d1 UB\u3002 - \u5bf9\u9f50\uff08alignment\uff09\uff1a\u6309\u7c7b\u578b\u5bf9\u9f50\u8bbf\u95ee\u5185\u5b58\uff0c\u672a\u5bf9\u9f50\u8bfb\u53d6\u662f UB\u3002 - \u751f\u547d\u5468\u671f\uff1a\u539f\u59cb\u6307\u9488\u4e0d\u643a\u5e26\u751f\u547d\u5468\u671f\uff0c\u9700\u81ea\u8bc1\u5b89\u5168\uff1b\u4f18\u5148\u7528\u5207\u7247/\u5f15\u7528\u3002</p>"},{"location":"chapter7_engineering/#107-associated-types","title":"107. \u4ec0\u4e48\u662f\u5173\u8054\u7c7b\u578b\uff08Associated Types\uff09\uff0c\u4f55\u65f6\u4f18\u4e8e\u6cdb\u578b\u53c2\u6570\uff1f","text":"<p>\u7b54\uff1a \u5173\u8054\u7c7b\u578b\u5c06\u7c7b\u578b\u53c2\u6570\u7ed1\u5b9a\u5230 trait \u4e0a\uff0c\u51cf\u5c11\u6cdb\u578b\u4f20\u64ad\u4e0e\u8c03\u7528\u70b9\u5197\u957f\uff0c\u9002\u5408\u201c\u6bcf\u4e2a\u5b9e\u73b0\u56fa\u5b9a\u4e00\u79cd\u5173\u8054\u7c7b\u578b\u201d\u7684\u573a\u666f\u3002 <pre><code>trait Iterator { type Item; fn next(&amp;mut self) -&gt; Option&lt;Self::Item&gt;; }\n</code></pre></p>"},{"location":"chapter7_engineering/#108-gats","title":"108. \u4ec0\u4e48\u662f GATs\uff08\u6cdb\u578b\u5173\u8054\u7c7b\u578b\uff09\uff1f","text":"<p>\u7b54\uff1a GATs \u5141\u8bb8\u5173\u8054\u7c7b\u578b\u81ea\u8eab\u5e26\u6cdb\u578b\u53c2\u6570\uff0c\u5e38\u7528\u4e8e\u501f\u7528\u5173\u8054\u7684\u8fed\u4ee3\u5668/\u89c6\u56fe\u7c7b\u578b\u3002 <pre><code>trait LendingIter {\n    type Item&lt;'a&gt; where Self: 'a;\n    fn next&lt;'a&gt;(&amp;'a mut self) -&gt; Option&lt;Self::Item&lt;'a&gt;&gt;;\n}\n</code></pre></p>"},{"location":"chapter7_engineering/#109-hrtbfora","title":"109. \u4f55\u65f6\u9700\u8981\u9ad8\u9636\u751f\u547d\u5468\u671f\u7ea6\u675f HRTB\uff08<code>for&lt;'a&gt;</code>\uff09\uff1f","text":"<p>\u7b54\uff1a \u5f53\u9700\u8981\u8868\u8fbe\u201c\u5bf9\u6240\u6709\u751f\u547d\u5468\u671f\u5747\u6210\u7acb\u201d\u7684\u7ea6\u675f\uff0c\u5982\u63a5\u6536 <code>Fn(&amp;'a T)</code> \u7684\u6cdb\u578b\u51fd\u6570\uff1a <pre><code>fn call_for_all&lt;'t, F&gt;(f: F) where F: for&lt;'a&gt; Fn(&amp;'a str) { f(\"hi\"); }\n</code></pre></p>"},{"location":"chapter7_engineering/#110-object-safety-trait","title":"110. \u4ec0\u4e48\u662f\u5bf9\u8c61\u5b89\u5168\uff08Object Safety\uff09\uff0c\u4e3a\u4f55\u6709\u4e9b trait \u4e0d\u80fd\u505a\u5bf9\u8c61\uff1f","text":"<p>\u7b54\uff1a \u53ef\u4f5c\u4e3a trait object\uff08<code>dyn Trait</code>\uff09\u7684\u6761\u4ef6\u5305\u62ec\uff1a\u65b9\u6cd5\u4e0d\u8fd4\u56de <code>Self</code>\u3001\u4e0d\u542b\u6cdb\u578b\u3001<code>where Self: Sized</code> \u9650\u5236\u4ec5\u7528\u4e8e\u4e0d\u53ef\u89c1\u65b9\u6cd5\u7b49\u3002\u8fdd\u53cd\u5219\u65e0\u6cd5\u52a8\u6001\u5206\u53d1\u3002</p>"},{"location":"chapter7_engineering/#111-phantomdata-variance","title":"111. <code>PhantomData</code> \u4e0e\u53d8\u578b\uff08variance\uff09\u6709\u4ec0\u4e48\u5173\u7cfb\uff1f","text":"<p>\u7b54\uff1a <code>PhantomData&lt;T&gt;</code> \u7528\u4e8e\u5728\u96f6\u5927\u5c0f\u7c7b\u578b\u4e2d\u58f0\u660e\u5bf9 <code>T</code> \u7684\u62e5\u6709\u6216\u501f\u7528\u5173\u7cfb\uff0c\u5f71\u54cd\u53d8\u578b\u4e0e drop \u68c0\u67e5\uff1b\u53ef\u7528\u6765\u8868\u8fbe\u534f\u53d8/\u9006\u53d8/\u4e0d\u53d8\u8bed\u4e49\u5e76\u53c2\u4e0e\u81ea\u52a8\u6d3e\u751f\u3002</p>"},{"location":"chapter7_engineering/#112-pinunpin","title":"112. <code>Pin/Unpin</code> \u7684\u8bed\u4e49\u662f\u4ec0\u4e48\uff1f","text":"<p>\u7b54\uff1a <code>Pin&lt;&amp;mut T&gt;</code> \u4fdd\u8bc1\u88ab\u56fa\u5b9a\u540e\u7684 <code>T</code> \u4e0d\u4f1a\u518d\u88ab\u79fb\u52a8\uff08\u5730\u5740\u7a33\u5b9a\uff09\u3002<code>Unpin</code> \u7c7b\u578b\u53ef\u968f\u610f\u79fb\u52a8\uff1b<code>!Unpin</code>\uff08\u5982\u81ea\u5f15\u7528 Future\uff09\u9700\u8981 <code>Pin</code> \u4fdd\u969c\u3002\u5e38\u89c1\u4e8e\u5f02\u6b65\u72b6\u6001\u673a\u4e0e\u751f\u6210\u5668\u3002</p> <p>\u4ee3\u7801\u793a\u4f8b\uff1a\u56fa\u5b9a\u81ea\u5f15\u7528\u7ed3\u6784 <pre><code>use std::pin::Pin;\nuse std::marker::PhantomPinned;\n\nstruct SelfRef {\n    data: String,\n    ptr: *const String,\n    _p: PhantomPinned,\n}\n\nimpl SelfRef {\n    fn new(txt: &amp;str) -&gt; Self {\n        Self { data: txt.into(), ptr: std::ptr::null(), _p: PhantomPinned }\n    }\n    fn init(self: Pin&lt;&amp;mut Self&gt;) {\n        let this = unsafe { self.get_unchecked_mut() };\n        this.ptr = &amp;this.data as *const _;\n    }\n}\n</code></pre></p>"},{"location":"chapter7_engineering/#113-cellrefcellunsafecell","title":"113. <code>Cell/RefCell/UnsafeCell</code> \u6709\u4f55\u533a\u522b\uff1f","text":"<p>\u7b54\uff1a - <code>Cell&lt;T&gt;</code>\uff1a\u6309\u503c get/set\uff0c\u9002\u5408 <code>Copy</code> \u6216\u5c0f\u5bf9\u8c61\u3002 - <code>RefCell&lt;T&gt;</code>\uff1a\u8fd0\u884c\u65f6\u501f\u7528\u68c0\u67e5\uff0c\u63d0\u4f9b <code>borrow/borrow_mut</code>\u3002 - <code>UnsafeCell&lt;T&gt;</code>\uff1a\u5185\u90e8\u53ef\u53d8\u6027\u7684\u5e95\u5c42\u539f\u8bed\uff0c\u81ea\u884c\u4fdd\u8bc1\u5b89\u5168\u3002</p>"},{"location":"chapter7_engineering/#114-rc-weak","title":"114. \u5982\u4f55\u907f\u514d <code>Rc</code> \u5faa\u73af\u5f15\u7528\u5bfc\u81f4\u6cc4\u6f0f\uff1f<code>Weak</code> \u5982\u4f55\u4f7f\u7528\uff1f","text":"<p>\u7b54\uff1a \u5728\u7236\u5b50/\u56fe\u7ed3\u6784\u4e2d\uff0c\u4ee5 <code>Rc</code> \u5f3a\u5f15\u7528\u8868\u793a\u6240\u6709\u6743\uff0c\u4ee5 <code>Weak</code> \u5f31\u5f15\u7528\u6253\u7834\u73af\u3002\u5347\u7ea7\u524d\u7528 <code>weak.upgrade()</code> \u5224\u65ad\u662f\u5426\u5b58\u6d3b\u3002</p>"},{"location":"chapter7_engineering/#115","title":"115. \u539f\u5b50\u7c7b\u578b\u4e0e\u5185\u5b58\u5e8f\u5982\u4f55\u9009\u62e9\uff1f","text":"<p>\u7b54\uff1a - <code>Relaxed</code>\uff1a\u4ec5\u539f\u5b50\u6027\uff0c\u65e0\u987a\u5e8f\u4fdd\u8bc1\u3002 - <code>Acquire/Release/AcqRel</code>\uff1a\u5efa\u7acb\u8de8\u7ebf\u7a0b\u7684 happens-before\u3002 - <code>SeqCst</code>\uff1a\u6700\u5f3a\uff0c\u5168\u5c40\u603b\u5e8f\u3002\u9ed8\u8ba4\u9996\u9009 <code>Acquire/Release</code>\uff0c\u4ec5\u5728\u9700\u8981\u5168\u5c40\u4e00\u81f4\u65f6\u7528 <code>SeqCst</code>\u3002</p>"},{"location":"chapter7_engineering/#116-parking_lotcrossbeamrayon","title":"116. \u9009\u62e9 <code>parking_lot</code>\u3001<code>crossbeam</code>\u3001<code>rayon</code> \u7684\u539f\u5219\uff1f","text":"<p>\u7b54\uff1a - <code>parking_lot</code>\uff1a\u66f4\u5feb\u7684\u9501/\u6761\u4ef6\u53d8\u91cf\u66ff\u4ee3\u3002 - <code>crossbeam</code>\uff1a\u65e0\u9501\u7ed3\u6784\u3001\u5185\u5b58\u7ba1\u7406\u3001MPSC \u66f4\u5f3a\u5b9e\u73b0\u3002 - <code>rayon</code>\uff1a\u6570\u636e\u5e76\u884c\uff0c\u8fed\u4ee3\u5668 <code>par_iter()</code> \u4e00\u884c\u5e76\u884c\u5316\u3002</p>"},{"location":"chapter7_engineering/#117-mutex-poisoning","title":"117. <code>Mutex</code> \u9501\u6bd2\u5316\uff08poisoning\uff09\u662f\u4ec0\u4e48\uff1f\u5982\u4f55\u5904\u7406\uff1f","text":"<p>\u7b54\uff1a \u6301\u9501\u4ee3\u7801 <code>panic</code> \u540e\u4e92\u65a5\u91cf\u88ab\u6bd2\u5316\uff0c\u540e\u7eed <code>lock()</code> \u8fd4\u56de <code>PoisonError</code>\u3002\u53ef\u9009\u62e9 <code>into_inner()</code> \u53d6\u56de\u3001\u6216\u8bb0\u5f55\u5e76\u91cd\u5efa\u72b6\u6001\uff1b<code>parking_lot</code> \u9ed8\u8ba4\u65e0\u6bd2\u5316\u3002</p>"},{"location":"chapter7_engineering/#118-stream-async","title":"118. \u4ec0\u4e48\u662f <code>Stream</code>\uff1f\u5982\u4f55\u4e0e <code>async</code> \u534f\u540c\uff1f","text":"<p>\u7b54\uff1a <code>Stream&lt;Item&gt;</code> \u7c7b\u4f3c\u5f02\u6b65\u8fed\u4ee3\u5668\uff0c<code>next().await</code> \u4ea7\u51fa\u5143\u7d20\u3002\u4f7f\u7528 <code>futures::stream</code> \u7ec4\u5408\u5b50\u6216 <code>tokio_stream</code>\uff0c\u914d\u5408 <code>select</code>/<code>timeout</code> \u5b9e\u73b0\u591a\u8def\u5f02\u6b65\u5904\u7406\u3002</p> <p>\u8fdb\u9636\u793a\u4f8b\uff1a<code>tokio_stream</code> \u6784\u9020\u4e0e\u6d88\u8d39 <pre><code>use tokio_stream::{self as stream, StreamExt};\n\n#[tokio::main]\nasync fn main() {\n    let s = stream::iter(vec![1,2,3]);\n    let sum: i32 = s.map(|x| x * 2).sum().await;\n    println!(\"{}\", sum);\n}\n</code></pre></p>"},{"location":"chapter7_engineering/#119-select","title":"119. \u5982\u4f55\u5b9e\u73b0\u53d6\u6d88\u3001\u8d85\u65f6\u4e0e\u9009\u62e9\uff08<code>select</code>\uff09\uff1f","text":"<p>\u7b54\uff1a <code>tokio::select!</code> \u5408\u5e76\u591a\u4e2a Future\uff0c\u5148\u5b8c\u6210\u8005\u8d62\uff1b<code>tokio::time::timeout</code> \u5b9e\u73b0\u8d85\u65f6\uff1b\u53d6\u6d88\u901a\u8fc7 <code>drop</code> Future \u6216\u4f7f\u7528\u53d6\u6d88\u4ee4\u724c\uff08<code>CancellationToken</code>\uff09\u3002</p>"},{"location":"chapter7_engineering/#120-send-future-spawn_blocking","title":"120. \u4ec0\u4e48\u662f <code>!Send</code> Future\uff1f\u4f55\u65f6\u7528 <code>spawn_blocking</code>\uff1f","text":"<p>\u7b54\uff1a \u6355\u83b7 <code>!Send</code> \u7c7b\u578b\u7684 Future \u4e0d\u80fd\u8de8\u7ebf\u7a0b\u8c03\u5ea6\uff0c\u9700\u5728\u5f53\u524d\u7ebf\u7a0b\u6267\u884c\u5668\u4e0a\u8fd0\u884c\uff08<code>LocalSet</code>\uff09\u3002\u963b\u585e\u578b CPU/I/O \u4efb\u52a1\u5e94\u4f7f\u7528 <code>spawn_blocking</code> \u4ee5\u514d\u5361\u4f4f reactor \u7ebf\u7a0b\u3002</p>"},{"location":"chapter7_engineering/#121-await","title":"121. \u4e3a\u4ec0\u4e48\u501f\u7528\u4e0d\u80fd\u7a7f\u8d8a <code>.await</code>\uff1f\u5982\u4f55\u91cd\u6784\uff1f","text":"<p>\u7b54\uff1a <code>.await</code> \u53ef\u80fd\u5728\u6302\u8d77\u70b9\u79fb\u52a8\u72b6\u6001\u673a\uff0c\u6301\u6709\u501f\u7528\u4f1a\u5ef6\u957f\u751f\u547d\u5468\u671f\u5bfc\u81f4\u51b2\u7a81\u3002\u91cd\u6784\u65b9\u5f0f\uff1a\u7f29\u5c0f\u501f\u7528\u4f5c\u7528\u57df\u3001\u514b\u9686\u5fc5\u8981\u6570\u636e\u3001\u62c6\u5206\u51fd\u6570\u3001\u4f7f\u7528\u6240\u6709\u6743\u4f20\u9012\u3002</p>"},{"location":"chapter7_engineering/#122","title":"122. \u7f16\u8bd1\u4e0e\u94fe\u63a5\u5c42\u9762\u7684\u6027\u80fd\u4f18\u5316\u6709\u54ea\u4e9b\uff1f","text":"<p>\u7b54\uff1a <code>Cargo.toml [profile]</code> \u914d\u7f6e <code>lto=true</code>\u3001<code>codegen-units=1</code>\u3001<code>opt-level=z/s</code>\u3001<code>panic=abort</code>\uff1b\u542f\u7528 <code>strip</code>\u3001<code>RUSTFLAGS</code> \u6307\u4ee4\u96c6\u4f18\u5316\uff08\u5982 <code>-C target-cpu=native</code>\uff09\u3002</p>"},{"location":"chapter7_engineering/#123","title":"123. \u5982\u4f55\u8fdb\u884c\u6027\u80fd\u4e0e\u4f53\u79ef\u5256\u6790\uff1f","text":"<p>\u7b54\uff1a \u57fa\u51c6\uff1a<code>criterion</code>\u3002\u706b\u7130\u56fe\uff1a<code>cargo flamegraph</code>\u3002\u4f53\u79ef\uff1a<code>cargo-bloat</code>\u3001<code>llvm-size</code>\u3001<code>llvm-lines</code>\u3002\u7ed3\u5408 <code>perf</code>/<code>dtrace</code>/<code>Instruments</code> \u5b9a\u4f4d\u70ed\u70b9\u3002</p> <p>\u547d\u4ee4\u901f\u67e5\uff1a <pre><code>cargo bench\ncargo flamegraph # \u9700\u5b89\u88c5 inferno \u6216 cargo-flamegraph\ncargo bloat -n 20 --release\n</code></pre></p>"},{"location":"chapter7_engineering/#124","title":"124. \u4f55\u65f6\u5207\u6362\u5206\u914d\u5668\u6216\u7528\u5c0f\u5bf9\u8c61\u4f18\u5316\uff1f","text":"<p>\u7b54\uff1a \u670d\u52a1\u7aef\u9ad8\u5e76\u53d1\u53ef\u5c1d\u8bd5 <code>mimalloc</code>/<code>jemalloc</code>\uff1b\u5c0f\u5411\u91cf\u9891\u7e41\u5806\u5206\u914d\u53ef\u7528 <code>smallvec</code>/<code>arrayvec</code>\uff1b\u8c28\u614e\u8bc4\u4f30 P99 \u5ef6\u8fdf\u4e0e\u5185\u5b58\u5360\u7528\u3002</p>"},{"location":"chapter7_engineering/#125","title":"125. \u5de5\u5177\u94fe\u5982\u4f55\u4fdd\u969c\u6b63\u786e\u6027\u4e0e\u5065\u58ee\u6027\uff1f","text":"<p>\u7b54\uff1a - <code>clippy</code> \u9759\u6001\u68c0\u67e5\u3001\u95e8\u7981 CI\u3002 - <code>miri</code> \u89e3\u91ca\u5668\u6355\u6349\u672a\u5b9a\u4e49\u884c\u4e3a\u3002 - Fuzz\uff1a<code>cargo-fuzz</code>\u3001\u57fa\u4e8e\u6027\u8d28\u7684 <code>proptest</code>\u3002 - Sanitizers\uff1aASan/TSan/Msan\uff08\u9700 nightly/\u7279\u5b9a\u5e73\u53f0\uff09\u3002</p>"},{"location":"chapter7_engineering/#126","title":"126. \u6761\u4ef6\u7f16\u8bd1\u4e0e\u7279\u6027\u7ba1\u7406\u6709\u54ea\u4e9b\u6700\u4f73\u5b9e\u8df5\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>#[cfg(...)]</code> \u4e0e <code>--features</code> \u63a7\u5236\u53ef\u9009\u80fd\u529b\uff1b\u5de5\u4f5c\u533a\u7edf\u4e00\u7279\u6027\u4f20\u9012\uff1b\u7ef4\u62a4 MSRV\uff1b\u9075\u5faa semver\uff0c\u7981\u7528\u9ed8\u8ba4\u7279\u6027\u907f\u514d\u610f\u5916\u81a8\u80c0\u3002</p>"},{"location":"chapter7_engineering/#127-buildrs","title":"127. \u5982\u4f55\u5728 <code>build.rs</code> \u4e2d\u96c6\u6210\u7cfb\u7edf\u5e93\uff1f","text":"<p>\u7b54\uff1a \u901a\u8fc7 <code>cc</code> \u6784\u5efa\u672c\u5730 C/C++ \u4ee3\u7801\uff0c<code>pkg-config</code> \u63a2\u6d4b\u7cfb\u7edf\u5e93\uff0c\u4f7f\u7528 <code>println!(\"cargo:rustc-link-lib=...\")</code>/<code>link-search</code> \u4f20\u9012\u7ed9\u94fe\u63a5\u5668\uff0c\u4ea7\u7269\u76ee\u5f55\u4ece <code>OUT_DIR</code> \u8bfb\u53d6\u3002</p>"},{"location":"chapter7_engineering/#128-api","title":"128. API \u8bbe\u8ba1\u4e0e\u9519\u8bef\u5904\u7406\u6709\u54ea\u4e9b\u5b9e\u8df5\u51c6\u5219\uff1f","text":"<p>\u7b54\uff1a \u53c2\u6570\u7c7b\u578b\u4f18\u5148 <code>AsRef&lt;T&gt;/Into&lt;T&gt;</code> \u63d0\u5347\u6613\u7528\u6027\uff1b\u9519\u8bef\u4f7f\u7528 <code>thiserror</code> \u5b9a\u4e49\u5e93\u7ea7\u9519\u8bef\u3001<code>anyhow</code> \u7528\u4e8e\u5e94\u7528\u5c42\uff1b\u63d0\u4f9b <code>FromStr</code>/<code>Display</code>\uff1b\u5fc5\u8981\u65f6 <code>#[non_exhaustive]</code> \u9884\u7559\u6269\u5c55\u3002</p>"},{"location":"chapter7_engineering/#129-no_std-webassembly","title":"129. \u4ec0\u4e48\u662f <code>no_std</code>\uff1f\u5982\u4f55\u9762\u5411\u5d4c\u5165\u5f0f\u4e0e WebAssembly\uff1f","text":"<p>\u7b54\uff1a <code>no_std</code> \u79fb\u9664\u6807\u51c6\u5e93\u4f9d\u8d56\uff0c\u4ec5\u4f9d\u8d56 <code>core</code>/<code>alloc</code>\uff1b\u5d4c\u5165\u5f0f\u4f7f\u7528 <code>embedded-hal</code>\u3001RTIC\uff1bWasm \u901a\u8fc7 <code>wasm-bindgen</code>/<code>wasm-pack</code>\uff0c\u914d\u7f6e <code>panic</code> \u7b56\u7565\u4e0e\u6700\u5c0f\u8fd0\u884c\u65f6\u3002</p>"},{"location":"chapter7_engineering/#130","title":"130. \u6587\u6863\u4e0e\u53d1\u5e03\u6d41\u6c34\u7ebf\u5982\u4f55\u5347\u7ea7\u5230\u751f\u4ea7\u7ea7\uff1f","text":"<p>\u7b54\uff1a <code>rustdoc</code> \u9ad8\u7ea7\u80fd\u529b\uff08intra-doc links\u3001<code>doc(cfg)</code>\uff09\uff1bCI \u4e2d\u8fd0\u884c\u6d4b\u8bd5/\u6587\u6863\u6d4b\u8bd5/Clippy/Miri/Fuzz\uff1b\u7248\u672c\u53d1\u5e03\u5f15\u5165\u53d8\u66f4\u65e5\u5fd7\u3001\u7b7e\u540d\u4e0e\u5236\u54c1\u5206\u53d1\uff08<code>cargo-dist</code>\uff09\u3002</p>"},{"location":"chapter7_engineering/#131-bindgen-c-rust","title":"131. \u5982\u4f55\u7528 <code>bindgen</code> \u751f\u6210 C \u5934\u6587\u4ef6\u5230 Rust \u7ed1\u5b9a\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>bindgen</code> \u6307\u5411\u5934\u6587\u4ef6\uff0c\u914d\u7f6e <code>blocklist</code>/<code>allowlist</code>\uff0c\u5e76\u5728 <code>build.rs</code> \u4e2d\u751f\u6210\u5230 <code>OUT_DIR</code>\u3002</p>"},{"location":"chapter7_engineering/#132-rust-c-cbindgen","title":"132. \u5982\u4f55\u5c06 Rust \u5e93\u5bfc\u51fa\u7ed9 C \u4f7f\u7528\uff08<code>cbindgen</code>\uff09\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>#[no_mangle] extern \"C\"</code> \u5bfc\u51fa ABI \u7a33\u5b9a\u7684\u51fd\u6570\uff0c\u7528 <code>cbindgen</code> \u751f\u6210 <code>.h</code>\u3002</p>"},{"location":"chapter7_engineering/#133","title":"133. \u5e38\u89c1\u4ea4\u53c9\u7f16\u8bd1\u6b65\u9aa4\uff1f","text":"<p>\u7b54\uff1a \u5b89\u88c5\u76ee\u6807 <code>rustup target add ...</code>\uff0c\u914d\u7f6e\u94fe\u63a5\u5668\u4e0e <code>CC</code>\uff0c\u5fc5\u8981\u65f6\u4f7f\u7528 <code>cross</code> \u7b80\u5316\u6d41\u7a0b\u3002</p>"},{"location":"chapter7_engineering/#134","title":"134. \u65e5\u5fd7\u4e0e\u8ffd\u8e2a\u5982\u4f55\u9009\u578b\uff1f","text":"<p>\u7b54\uff1a \u5e94\u7528\u5c42\u4f18\u5148 <code>tracing</code> + <code>tracing-subscriber</code>\uff1b\u5e93\u5c42\u4f7f\u7528 <code>log</code> \u63a5\u53e3\u3002</p>"},{"location":"chapter7_engineering/#135-cli-feature","title":"135. \u5982\u4f55\u4e3a CLI \u63d0\u4f9b Feature \u5f00\u5173\u5e76\u88c1\u526a\u4f53\u79ef\uff1f","text":"<p>\u7b54\uff1a \u5728 <code>Cargo.toml</code> \u4e2d\u5b9a\u4e49\u53ef\u9009\u7279\u6027\uff0c\u6309\u9700\u542f\u7528\u4f9d\u8d56\uff1b\u53d1\u5e03\u65f6\u7981\u7528\u9ed8\u8ba4\u7279\u6027\u3002</p>"},{"location":"chapter7_engineering/#136","title":"136. \u5982\u4f55\u5199\u7a33\u5b9a\u7684\u57fa\u51c6\u6d4b\u8bd5\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>criterion</code>\uff0c\u8fdb\u884c\u591a\u6b21\u91c7\u6837\u4e0e\u7edf\u8ba1\u663e\u8457\u6027\u5206\u6790\uff0c\u907f\u514d\u566a\u58f0\u3002</p>"},{"location":"chapter7_engineering/#137-fuzzing","title":"137. \u5982\u4f55\u5f15\u5165\u6a21\u7cca\u6d4b\u8bd5\uff08fuzzing\uff09\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>cargo-fuzz</code>\uff0c\u4e3a\u5173\u952e\u89e3\u6790/\u5e8f\u5217\u5316\u8def\u5f84\u6784\u5efa fuzz target\u3002</p>"},{"location":"chapter7_engineering/#138-ci-miri-sanitizers","title":"138. \u5982\u4f55\u5728 CI \u4e2d\u8fd0\u884c Miri \u4e0e Sanitizers\uff1f","text":"<p>\u7b54\uff1a Miri \u68c0\u6d4b\u672a\u5b9a\u4e49\u884c\u4e3a\uff1bASan/TSan \u5728 nightly \u4e0a\u8fd0\u884c\uff0c\u53d1\u73b0\u5185\u5b58/\u6570\u636e\u7ade\u4e89\u95ee\u9898\u3002</p>"},{"location":"chapter7_engineering/#139-no_std-alloc","title":"139. \u5982\u4f55\u6784\u5efa <code>no_std</code> \u5e93\u5e76\u5728 <code>alloc</code> \u4e0a\u8fd0\u884c\uff1f","text":"<p>\u7b54\uff1a \u542f\u7528 <code>#![no_std]</code>\uff0c\u6309\u9700\u5f15\u5165 <code>extern crate alloc</code>\uff0c\u63d0\u4f9b\u66ff\u4ee3\u5b9e\u73b0\u6216\u7279\u6027\u95e8\u63a7\u3002</p>"},{"location":"chapter7_engineering/#140-wasm","title":"140. \u5982\u4f55\u6700\u5c0f\u5316 WASM \u4f53\u79ef\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>wasm-bindgen</code>/<code>wasm-opt</code>\uff0c<code>panic=abort</code>\uff0c<code>lto</code>\uff0c\u51cf\u5c11\u4f9d\u8d56\u4e0e\u5b57\u7b26\u4e32\u3002</p>"},{"location":"chapter7_engineering/#141-axum-api-tracing","title":"141. \u7528 <code>axum</code> \u5b9e\u73b0\u4e00\u4e2a\u6700\u5c0f API \u5e76\u96c6\u6210 <code>tracing</code>\uff1f","text":"<p>\u7b54\uff1a \u914d\u7f6e\u8def\u7531\u3001<code>tower</code> \u4e2d\u95f4\u4ef6\u4e0e <code>tracing_subscriber</code>\uff0c\u8f93\u51fa\u7ed3\u6784\u5316\u65e5\u5fd7\u3002</p>"},{"location":"chapter7_engineering/#142-sqlx","title":"142. \u6570\u636e\u5e93\u9009\u62e9\u4e0e <code>sqlx</code> \u8fde\u63a5\u6c60\u5b9e\u8df5\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>sqlx</code> \u7684\u7f16\u8bd1\u671f\u67e5\u8be2\u6821\u9a8c\uff0c\u7ed3\u5408 <code>Pool</code>\uff0c\u6ce8\u610f\u751f\u547d\u5468\u671f\u4e0e\u8d85\u65f6\u3002</p>"},{"location":"chapter7_engineering/#143","title":"143. \u5982\u4f55\u8bbe\u8ba1\u9519\u8bef\u7c7b\u578b\u4ee5\u8de8\u5c42\u4f20\u9012\u4e0a\u4e0b\u6587\uff1f","text":"<p>\u7b54\uff1a \u5e93\u5c42 <code>thiserror</code>\uff0c\u5e94\u7528\u5c42 <code>anyhow</code> + <code>Context</code>\uff0c\u4fdd\u7559 <code>source()</code> \u94fe\u3002</p>"},{"location":"chapter7_engineering/#144-serde","title":"144. <code>serde</code> \u6027\u80fd\u4e0e\u53ef\u7ef4\u62a4\u6027\u5efa\u8bae\uff1f","text":"<p>\u7b54\uff1a \u5c3d\u91cf\u4f7f\u7528\u6d3e\u751f\uff1b\u70ed\u70b9\u8def\u5f84\u4f7f\u7528\u624b\u5199 <code>Serialize/Deserialize</code>\uff1b\u8003\u8651 <code>borrow</code>\u3002</p>"},{"location":"chapter7_engineering/#145-figmentconfig","title":"145. \u5982\u4f55\u5b9e\u65bd\u914d\u7f6e\u7ba1\u7406\uff08<code>figment</code>/<code>config</code>\uff09\u5e76\u652f\u6301\u591a\u73af\u5883\uff1f","text":"<p>\u7b54\uff1a \u5206\u5c42\u52a0\u8f7d env/\u6587\u4ef6/\u9ed8\u8ba4\u503c\uff0c\u5e8f\u5217\u5316\u5230 <code>struct</code>\uff0c\u533a\u5206 dev/prod\u3002</p>"},{"location":"chapter7_engineering/#146-clapcolor-eyre","title":"146. \u5982\u4f55\u505a\u547d\u4ee4\u884c\u4f53\u9a8c\u4f18\u5316\uff08<code>clap</code>/<code>color-eyre</code>\uff09\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>derive</code> \u5b9a\u4e49 CLI\uff1b\u9519\u8bef\u6253\u5370\u7528 <code>color-eyre</code> \u589e\u5f3a\u56de\u6eaf\u4e0e\u5efa\u8bae\u3002</p>"},{"location":"chapter7_engineering/#147-github-actions","title":"147. \u5982\u4f55\u5728 GitHub Actions \u4e0a\u505a\u7f13\u5b58\u4e0e\u77e9\u9635\u6784\u5efa\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>actions/cache</code> \u7f13\u5b58 <code>~/.cargo</code> \u4e0e <code>target</code>\uff1b\u6309 OS/\u7248\u672c\u77e9\u9635\u5e76\u884c\u3002</p>"},{"location":"chapter7_engineering/#148-sbom","title":"148. \u5982\u4f55\u751f\u6210\u4e0e\u6821\u9a8c SBOM/\u4f9b\u5e94\u94fe\u5b89\u5168\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>cargo vet</code>\u3001<code>cargo deny</code>\u3001<code>cyclonedx-rust</code>\uff1bCI \u9636\u6bb5\u963b\u65ad\u4e0d\u5408\u89c4\u4f9d\u8d56\u3002</p>"},{"location":"chapter7_engineering/#149-reproducible-builds","title":"149. \u5982\u4f55\u5236\u4f5c\u53ef\u91cd\u590d\u6784\u5efa\uff08reproducible builds\uff09\uff1f","text":"<p>\u7b54\uff1a \u56fa\u5b9a\u4f9d\u8d56\u3001\u542f\u7528 <code>SOURCE_DATE_EPOCH</code>\u3001\u89c4\u8303\u5316\u8def\u5f84\u4e0e\u65f6\u95f4\u6233\u3002</p>"},{"location":"chapter7_engineering/#150-release","title":"150. \u5982\u4f55\u5206\u53d1 release \u5236\u54c1\uff08\u5b89\u88c5\u811a\u672c/\u5f52\u6863/\u5b89\u88c5\u5668\uff09\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>cargo-dist</code> \u6216\u81ea\u5b9a\u4e49\u811a\u672c\u751f\u6210\u591a\u5e73\u53f0\u5f52\u6863\uff0c\u9644\u5e26\u6821\u9a8c\u4e0e\u7b7e\u540d\u3002</p>"},{"location":"chapter7_engineering/#151-tracing","title":"151. \u5982\u4f55\u7528 <code>tracing</code> \u5b9e\u73b0\u7ed3\u6784\u5316\u65e5\u5fd7\u4e0e\u5206\u5e03\u5f0f\u8ffd\u8e2a\uff1f","text":"<p>\u7b54\uff1a \u914d\u7f6e <code>tracing_subscriber</code>\uff0c\u8f93\u51fa JSON\uff1b\u901a\u8fc7 <code>trace_id</code> \u8d2f\u7a7f\u8bf7\u6c42\u94fe\u8def\uff0c\u4e0e OpenTelemetry \u96c6\u6210\u3002</p>"},{"location":"chapter7_engineering/#152-env","title":"152. \u5982\u4f55\u4f18\u96c5\u5730\u52a0\u8f7d <code>.env</code> \u4e0e\u4f18\u5148\u7ea7\u8986\u76d6\uff1f","text":"<p>\u7b54\uff1a \u5148\u52a0\u8f7d\u9ed8\u8ba4\u914d\u7f6e\uff0c\u518d\u7528 <code>.env</code> \u4e0e\u73af\u5883\u53d8\u91cf\u8986\u76d6\uff0c\u6700\u540e\u4f7f\u7528 CLI \u9009\u9879\u6700\u9ad8\u4f18\u5148\u7ea7\u3002</p>"},{"location":"chapter7_engineering/#153-feature","title":"153. \u5982\u4f55\u5728\u5927\u578b\u9879\u76ee\u4e2d\u7ba1\u7406 Feature \u7ec4\u5408\u4e0e\u6587\u6863\u5316\uff1f","text":"<p>\u7b54\uff1a \u5728 README/mkdocs \u4e2d\u8bb0\u5f55 feature matrix\uff0c\u5e76\u7f16\u5199 CI \u4efb\u52a1\u9a8c\u8bc1\u5173\u952e\u7ec4\u5408\u53ef\u6784\u5efa\u3002</p>"},{"location":"chapter7_engineering/#154-api","title":"154. \u5982\u4f55\u505a API \u7a33\u5b9a\u6027\u627f\u8bfa\u4e0e\u7834\u574f\u6027\u53d8\u66f4\u6d41\u7a0b\uff1f","text":"<p>\u7b54\uff1a \u9075\u5faa semver\uff0c\u9884\u544a deprecation\uff0c\u63d0\u4f9b\u8fc1\u79fb\u6587\u6863\u4e0e <code>#[deprecated]</code> \u6807\u6ce8\u3002</p>"},{"location":"chapter7_engineering/#155","title":"155. \u5982\u4f55\u8fdb\u884c\u5185\u5b58\u5206\u6790\u4e0e\u6cc4\u6f0f\u6392\u67e5\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>valgrind</code>/<code>heaptrack</code>/<code>dhat</code> \u6216 Linux <code>perf</code>\uff1bRust \u4fa7\u7528 <code>jemalloc</code> profiler\u3002</p>"},{"location":"chapter7_engineering/#156-parking_lot","title":"156. \u5982\u4f55\u4f7f\u7528 <code>parking_lot</code> \u4f18\u5316\u9501\u7ade\u4e89\uff1f","text":"<p>\u7b54\uff1a \u66ff\u6362\u6807\u51c6\u5e93\u9501\uff0c\u8bc4\u4f30\u4e34\u754c\u533a\u7f29\u77ed\u4e0e\u81ea\u65cb\u7b56\u7565\uff1b\u6ce8\u610f\u4e0e <code>async</code> \u8fd0\u884c\u65f6\u7684\u4ea4\u4e92\u3002</p>"},{"location":"chapter7_engineering/#157","title":"157. \u5982\u4f55\u843d\u5730\u96f6\u505c\u673a\u53d1\u5e03\u4e0e\u7070\u5ea6\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528\u591a\u5b9e\u4f8b\u6eda\u52a8\u3001\u5065\u5eb7\u68c0\u67e5\u3001\u7248\u672c\u8def\u7531\u4e0e\u5411\u540e\u517c\u5bb9\u6570\u636e\u53d8\u66f4\u3002</p>"},{"location":"chapter7_engineering/#158-rustdocdoccfg","title":"158. \u5982\u4f55\u7f16\u5199\u9ad8\u8d28\u91cf <code>rustdoc</code>\uff08\u793a\u4f8b\u3001<code>doc(cfg)</code>\u3001\u5185\u94fe\uff09\uff1f","text":"<p>\u7b54\uff1a \u4e3a\u6bcf\u4e2a\u516c\u5f00 API \u63d0\u4f9b\u793a\u4f8b\uff1b\u4f7f\u7528 intra-doc links\uff1b\u57fa\u4e8e feature \u7684\u6761\u4ef6\u6587\u6863\u3002</p>"},{"location":"chapter7_engineering/#159-monorepopolyrepo","title":"159. \u5982\u4f55\u7ec4\u7ec7\u8de8\u4ed3\u5e93\u7684 Monorepo/Polyrepo\uff1f","text":"<p>\u7b54\uff1a Monorepo \u914d\u5408 workspace \u4e0e\u5171\u4eab\u4f9d\u8d56\uff1bPolyrepo \u901a\u8fc7 git submodule \u6216 cargo patch \u534f\u8c03\u3002</p>"},{"location":"chapter7_engineering/#160-buildrs","title":"160. \u5982\u4f55\u5728 <code>build.rs</code> \u4e2d\u751f\u6210\u4ee3\u7801\u4e0e\u7248\u672c\u4fe1\u606f\uff1f","text":"<p>\u7b54\uff1a \u8bfb\u53d6\u73af\u5883\u53d8\u91cf\u4e0e <code>git</code> \u4fe1\u606f\uff0c\u5199\u5165 <code>OUT_DIR</code>\uff0c\u5728\u8fd0\u884c\u65f6\u4ee3\u7801\u4e2d <code>include!</code>/<code>env!</code> \u5f15\u7528\u3002</p>"},{"location":"chapter7_engineering/#161","title":"161. \u5982\u4f55\u63a7\u5236\u7f16\u8bd1\u65f6\u95f4\u4e0e\u7f13\u5b58\u547d\u4e2d\uff1f","text":"<p>\u7b54\uff1a \u5408\u7406\u62c6 crate\u3001\u5f00\u542f sccache\u3001\u51cf\u5c11\u7279\u6027\u7ec4\u5408\u3001\u56fa\u5b9a\u4f9d\u8d56\u7248\u672c\u3002</p>"},{"location":"chapter7_engineering/#162","title":"162. \u5982\u4f55\u8bbe\u8ba1\u53ef\u6d4b\u8bd5\u7684\u5f02\u6b65\u4ee3\u7801\uff1f","text":"<p>\u7b54\uff1a \u5c06 I/O \u62bd\u8c61\u4e3a trait\uff0c\u6d4b\u8bd5\u4e2d\u7528\u5185\u5b58\u5b9e\u73b0\uff1b\u4f7f\u7528 <code>tokio::test</code> \u4e0e <code>Timeout</code> \u5305\u88f9\u3002</p>"},{"location":"chapter7_engineering/#163-graceful-shutdown","title":"163. \u5982\u4f55\u5b9e\u73b0\u4f18\u96c5\u5173\u505c\uff08graceful shutdown\uff09\uff1f","text":"<p>\u7b54\uff1a \u76d1\u542c\u4fe1\u53f7\uff08<code>ctrl_c</code>\uff09\uff0c\u5e7f\u64ad\u53d6\u6d88\u4ee4\u724c\uff0c\u7b49\u5f85\u4efb\u52a1\u6536\u5c3e\u5e76\u5173\u95ed\u8fde\u63a5\u6c60\u3002</p>"},{"location":"chapter7_engineering/#164","title":"164. \u5982\u4f55\u5b9e\u73b0\u901f\u7387\u9650\u5236\u4e0e\u80cc\u538b\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>tower::limit</code>\u3001\u4fe1\u53f7\u91cf\uff08<code>tokio::sync::Semaphore</code>\uff09\uff0c\u7ed3\u5408\u961f\u5217\u957f\u5ea6\u548c\u8d85\u65f6\u7b56\u7565\u3002</p>"},{"location":"chapter7_engineering/#165","title":"165. \u5982\u4f55\u5904\u7406\u65f6\u533a\u3001\u65f6\u95f4\u4e0e\u5b9a\u65f6\u4efb\u52a1\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>time</code>/<code>chrono</code>\uff1b\u8c03\u5ea6\u7528 <code>tokio-cron-scheduler</code> \u6216\u57fa\u4e8e <code>interval</code> \u81ea\u5b9a\u4e49\u3002</p>"},{"location":"chapter7_engineering/#166-sdk","title":"166. \u5982\u4f55\u5c01\u88c5\u53ef\u590d\u7528\u7684\u5ba2\u6237\u7aef SDK\uff1f","text":"<p>\u7b54\uff1a \u5b9a\u4e49 <code>Client</code> \u7ed3\u6784\uff0c\u652f\u6301\u8d85\u65f6/\u91cd\u8bd5/\u9650\u6d41\uff0c\u66b4\u9732\u5f02\u6b65 API \u4e0e\u9ad8\u5c42\u6a21\u578b\u3002</p>"},{"location":"chapter7_engineering/#167-pythonnodejava","title":"167. \u5982\u4f55\u505a\u591a\u8bed\u8a00\u7ed1\u5b9a\uff08Python/Node/Java\uff09\uff1f","text":"<p>\u7b54\uff1a Python \u7528 <code>pyo3/maturin</code>\uff0cNode \u7528 <code>napi-rs</code>\uff0cJava \u7528 JNI/<code>jni-rs</code>\u3002</p>"},{"location":"chapter7_engineering/#168-distroless-rust","title":"168. \u5982\u4f55\u5728\u5bb9\u5668/Distroless \u73af\u5883\u4e2d\u8fd0\u884c Rust \u670d\u52a1\uff1f","text":"<p>\u7b54\uff1a \u591a\u9636\u6bb5\u6784\u5efa\uff0c\u4f7f\u7528 <code>FROM scratch</code> \u6216 distroless\uff0c\u9759\u6001\u94fe\u63a5\u4e0e\u8bc1\u4e66\u5bfc\u5165\u3002</p>"},{"location":"chapter7_engineering/#169","title":"169. \u5982\u4f55\u5728\u4f4e\u5185\u5b58\u73af\u5883\u4e0b\u4f18\u5316\u5206\u914d\uff1f","text":"<p>\u7b54\uff1a \u8003\u8651\u81ea\u5b9a\u4e49\u5206\u914d\u5668\u3001\u5bf9\u8c61\u6c60\u3001<code>bytes</code>/<code>smallvec</code>\uff0c\u51cf\u5c11\u62f7\u8d1d\u4e0e\u4e34\u65f6\u5206\u914d\u3002</p>"},{"location":"chapter7_engineering/#170","title":"170. \u5982\u4f55\u505a\u6570\u636e\u4e00\u81f4\u6027\u4e0e\u4e8b\u52a1\u8fb9\u754c\u8bbe\u8ba1\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528\u6570\u636e\u5e93\u4e8b\u52a1\u4e0e\u5e42\u7b49\u952e\uff1b\u8de8\u670d\u52a1\u7528 outbox/inbox\u3001SAGA \u6a21\u5f0f\u786e\u4fdd\u6700\u7ec8\u4e00\u81f4\u6027\u3002</p>"},{"location":"chapter7_engineering/#171-cli","title":"171. \u5982\u4f55\u5728 CLI \u4e2d\u5b9e\u73b0\u63d2\u4ef6\u673a\u5236\uff1f","text":"<p>\u7b54\uff1a \u901a\u8fc7\u5b50\u547d\u4ee4\u5206\u53d1\u4e0e\u52a8\u6001\u52a0\u8f7d\uff08<code>dlopen</code>/<code>libloading</code>\uff09\uff0c\u6216\u6309\u7ea6\u5b9a\u67e5\u627e <code>mycli-&lt;plugin&gt;</code> \u53ef\u6267\u884c\u6587\u4ef6\u3002</p>"},{"location":"chapter7_engineering/#172","title":"172. \u5982\u4f55\u8fdb\u884c\u8de8\u5e73\u53f0\u6587\u4ef6\u7cfb\u7edf\u4e0e\u8def\u5f84\u517c\u5bb9\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>std::path::Path</code>\uff0c\u907f\u514d\u624b\u5199\u5206\u9694\u7b26\uff1b\u5904\u7406\u5927\u5c0f\u5199\u4e0e\u6743\u9650\u5dee\u5f02\u3002</p>"},{"location":"chapter7_engineering/#173-api","title":"173. \u5982\u4f55\u4e3a\u5e93\u63d0\u4f9b\u7a33\u5b9a\u7684\u53ef\u9009\u5f02\u6b65/\u540c\u6b65\u4e24\u5957 API\uff1f","text":"<p>\u7b54\uff1a \u4ee5 trait \u62bd\u8c61\u6838\u5fc3\u80fd\u529b\uff0c<code>feature</code> \u63a7\u5236 <code>async</code> \u7248\u672c\u5e76\u5728\u5185\u90e8\u6865\u63a5\u3002</p>"},{"location":"chapter7_engineering/#174","title":"174. \u5982\u4f55\u4e3a\u957f\u4efb\u52a1\u63d0\u4f9b\u8fdb\u5ea6\u4e0e\u53d6\u6d88\uff1f","text":"<p>\u7b54\uff1a \u5b9a\u4e49 <code>Progress</code> \u56de\u8c03\u6216 <code>watch</code> \u901a\u9053\uff0c\u5e76\u4f20\u5165 <code>CancellationToken</code>\u3002</p>"},{"location":"chapter7_engineering/#175","title":"175. \u5982\u4f55\u5728\u591a\u79df\u6237\u573a\u666f\u4e0b\u9694\u79bb\u8d44\u6e90\uff1f","text":"<p>\u7b54\uff1a \u4e3a\u6bcf\u79df\u6237\u5206\u914d\u72ec\u7acb\u9650\u6d41\u5668\u3001\u8fde\u63a5\u6c60\u547d\u540d\u7a7a\u95f4\u4e0e\u5ea6\u91cf\u6807\u7b7e\u3002</p>"},{"location":"chapter7_engineering/#176","title":"176. \u5982\u4f55\u5e8f\u5217\u5316\u5927\u5bf9\u8c61\u800c\u4e0d\u963b\u585e\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528\u540e\u53f0\u4efb\u52a1\u4e0e <code>tokio::task::spawn_blocking</code>\uff0c\u6216\u6d41\u5f0f\u7f16\u7801\uff08<code>serde_json::Serializer</code>\uff09\u3002</p>"},{"location":"chapter7_engineering/#177-metrics","title":"177. \u5982\u4f55\u7edf\u4e00\u5ea6\u91cf\uff08metrics\uff09\u4e0e\u53ef\u89c2\u6d4b\u6027\uff1f","text":"<p>\u7b54\uff1a <code>metrics</code>/<code>opentelemetry-metrics</code> \u66b4\u9732 Prometheus\uff1b\u96c6\u4e2d <code>tracing</code>/\u65e5\u5fd7\u3002</p>"},{"location":"chapter7_engineering/#178","title":"178. \u5982\u4f55\u5b9e\u73b0\u914d\u7f6e\u70ed\u66f4\u65b0\uff1f","text":"<p>\u7b54\uff1a \u76d1\u542c\u6587\u4ef6\u53d8\u5316\u6216\u4e0b\u53d1\u914d\u7f6e\u4e2d\u5fc3\u4e8b\u4ef6\uff0c\u539f\u5b50\u66ff\u6362 <code>Arc&lt;Config&gt;</code>\u3002</p>"},{"location":"chapter7_engineering/#179-crate","title":"179. \u5982\u4f55\u7ba1\u7406\u672c\u5730\u5f00\u53d1\u7684\u591a crate \u4f9d\u8d56\u8054\u8c03\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 workspace \u4e0e <code>path</code> \u4f9d\u8d56\uff0c\u6216 <code>cargo patch</code> \u8986\u76d6\u8fdc\u7a0b\u7248\u672c\u3002</p>"},{"location":"chapter7_engineering/#180-tui-ui","title":"180. \u5982\u4f55\u5199\u8de8\u5e73\u53f0 TUI\uff08\u7ec8\u7aef UI\uff09\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>ratatui</code>/<code>crossterm</code> \u6784\u5efa TUI\uff0c\u914d\u5408\u4e8b\u4ef6\u5faa\u73af\u4e0e\u7ed8\u5236 diff\u3002</p>"},{"location":"chapter7_engineering/#181","title":"181. \u5982\u4f55\u8bbe\u8ba1\u53ef\u6269\u5c55\u7684\u547d\u4ee4\u4e0e\u53c2\u6570\u7cfb\u7edf\uff1f","text":"<p>\u7b54\uff1a <code>clap</code> \u7684 <code>derive</code> + \u5b50\u547d\u4ee4\u679a\u4e3e\uff0c\u652f\u6301\u914d\u7f6e\u6587\u4ef6/\u73af\u5883\u53d8\u91cf\u5408\u5e76\u3002</p>"},{"location":"chapter7_engineering/#182-c-abi","title":"182. \u5982\u4f55\u6784\u5efa\u7a33\u5b9a\u7684\u516c\u5171\u4e8c\u8fdb\u5236\u63a5\u53e3\uff08C-ABI\uff09\uff1f","text":"<p>\u7b54\uff1a \u56fa\u5b9a <code>#[repr(C)]</code> \u7ed3\u6784\uff0c\u907f\u514d\u6cdb\u578b\u4e0e Rust \u7279\u6709\u7c7b\u578b\uff0c\u4e25\u683c\u7248\u672c\u5316\u3002</p>"},{"location":"chapter7_engineering/#183","title":"183. \u5982\u4f55\u5904\u7406\u65f6\u949f\u6f02\u79fb\u4e0e\u5206\u5e03\u5f0f\u65f6\u95f4\uff1f","text":"<p>\u7b54\uff1a \u5c3d\u91cf\u4f9d\u8d56\u5355\u8c03\u65f6\u949f\uff1b\u8de8\u8282\u70b9\u4f7f\u7528 NTP \u4e0e\u903b\u8f91\u65f6\u949f\uff08Lamport/Hybrid\uff09\u3002</p>"},{"location":"chapter7_engineering/#184","title":"184. \u5982\u4f55\u505a\u5927\u6587\u4ef6/\u5206\u7247\u4e0a\u4f20\u4e0e\u65ad\u70b9\u7eed\u4f20\uff1f","text":"<p>\u7b54\uff1a \u5206\u7247\u6821\u9a8c\u3001\u5206\u6bb5\u5e76\u53d1\u3001\u65ad\u70b9\u8bb0\u5f55\uff0c\u5408\u5e76\u9636\u6bb5\u6821\u9a8c\u6574\u4f53\u6458\u8981\u3002</p>"},{"location":"chapter7_engineering/#185-webassembly","title":"185. \u5982\u4f55\u505a WebAssembly \u8fb9\u7f18\u8ba1\u7b97\u90e8\u7f72\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 WASI \u8fd0\u884c\u65f6\uff08Wasmtime\u3001WasmEdge\uff09\uff0c\u9650\u5236\u6743\u9650\u80fd\u529b\u6a21\u578b\u3002</p>"},{"location":"chapter7_engineering/#186-schema","title":"186. \u5982\u4f55\u5728\u751f\u4ea7\u4e2d\u6eda\u52a8\u66f4\u65b0\u6570\u636e\u5e93 schema\uff1f","text":"<p>\u7b54\uff1a \u5411\u524d\u517c\u5bb9\u8fc1\u79fb\uff1a\u5148\u6dfb\u52a0\u5b57\u6bb5/\u89c6\u56fe\uff0c\u7070\u5ea6\u53cc\u5199\uff0c\u6700\u540e\u6e05\u7406\u65e7\u7ed3\u6784\u3002</p>"},{"location":"chapter7_engineering/#187-api","title":"187. \u5982\u4f55\u5728 API \u4e2d\u5904\u7406\u7248\u672c\u5316\u4e0e\u5f03\u7528\uff1f","text":"<p>\u7b54\uff1a \u8def\u5f84/\u5934\u90e8\u7248\u672c\u53f7\uff0c\u517c\u5bb9\u671f\u9650\u5185\u540c\u65f6\u652f\u6301\uff0c\u8fd4\u56de <code>Deprecation</code> \u63d0\u793a\u3002</p>"},{"location":"chapter7_engineering/#188","title":"188. \u5982\u4f55\u8fdb\u884c\u5408\u89c4\u4e0e\u8bb8\u53ef\u8bc1\u5ba1\u8ba1\uff1f","text":"<p>\u7b54\uff1a \u4f7f\u7528 <code>cargo deny</code> \u68c0\u67e5\u8bb8\u53ef\u8bc1\uff0c\u751f\u6210 SBOM\uff0c\u8bb0\u5f55\u7b2c\u4e09\u65b9\u5408\u89c4\u58f0\u660e\u3002</p>"},{"location":"chapter7_engineering/#189","title":"189. \u5982\u4f55\u6784\u5efa\u53ef\u6269\u5c55\u7684\u9519\u8bef\u7801\u4f53\u7cfb\uff1f","text":"<p>\u7b54\uff1a \u5206\u5c42\u547d\u540d\u4e0e\u8303\u56f4\u4fdd\u7559\uff0c\u533a\u5206\u7528\u6237\u9519\u8bef/\u7cfb\u7edf\u9519\u8bef/\u4f9d\u8d56\u9519\u8bef\u3002</p>"},{"location":"chapter7_engineering/#190-clii18n","title":"190. \u5982\u4f55\u5728 CLI/\u670d\u52a1\u4e2d\u5b9e\u73b0\u56fd\u9645\u5316\uff08i18n\uff09\uff1f","text":"<p>\u7b54\uff1a \u62bd\u8c61\u63d0\u793a\u8bcd\u952e\uff0c\u52a0\u8f7d\u672c\u5730\u5316\u8d44\u6e90\uff08JSON/Fluent\uff09\uff0c\u6309 locale \u9009\u62e9\u3002</p>"},{"location":"chapter7_engineering/#191","title":"191. \u5982\u4f55\u8fdb\u884c\u5bc6\u94a5\u7ba1\u7406\u4e0e\u673a\u5bc6\u6ce8\u5165\uff1f","text":"<p>\u7b54\uff1a \u7ed3\u5408\u5bc6\u94a5\u7ba1\u7406\u670d\u52a1\uff08KMS\uff09\u3001\u73af\u5883\u6ce8\u5165\u4e0e\u5185\u5b58\u6e05\u7406\u7b56\u7565\uff08zeroize\uff09\u3002</p>"},{"location":"chapter7_engineering/#192","title":"192. \u5982\u4f55\u505a\u914d\u989d\u4e0e\u6210\u672c\u63a7\u5236\uff1f","text":"<p>\u7b54\uff1a \u6309\u79df\u6237/\u7528\u6237\u7ef4\u5ea6\u7edf\u8ba1\u8d44\u6e90\u6d88\u8017\uff0c\u7ed3\u5408\u9650\u989d\u4e0e\u6536\u8d39\u89c4\u5219\u3002</p>"},{"location":"chapter7_engineering/#193","title":"193. \u5982\u4f55\u6784\u5efa\u7aef\u5230\u7aef\u56de\u653e\u6d4b\u8bd5\u4f53\u7cfb\uff1f","text":"<p>\u7b54\uff1a \u5f55\u5236\u771f\u5b9e\u6d41\u91cf\u4e0e\u54cd\u5e94\uff0c\u8131\u654f\u540e\u56de\u653e\u5230\u9884\u53d1\u73af\u5883\u3002</p>"},{"location":"chapter7_engineering/#194","title":"194. \u5982\u4f55\u505a\u6570\u636e\u8131\u654f\u4e0e\u9690\u79c1\u4fdd\u62a4\uff1f","text":"<p>\u7b54\uff1a \u5206\u7c7b\u5b9a\u4e49\u654f\u611f\u5b57\u6bb5\uff0c\u91c7\u7528\u54c8\u5e0c/\u63a9\u7801/\u540c\u6001\u6280\u672f\uff0c\u8bb0\u5f55\u8bbf\u95ee\u5ba1\u8ba1\u3002</p>"},{"location":"chapter7_engineering/#195","title":"195. \u5982\u4f55\u6784\u5efa\u53ea\u8bfb\u526f\u672c\u4e0e\u8bfb\u5199\u5206\u79bb\uff1f","text":"<p>\u7b54\uff1a \u4e3b\u4ece\u590d\u5236\uff0c\u8bfb\u8bf7\u6c42\u8def\u7531\u5230\u53ea\u8bfb\u5e93\uff0c\u5199\u5165\u8d70\u4e3b\u5e93\u5e76\u4fdd\u6301\u4e00\u81f4\u6027\u7b56\u7565\u3002</p>"},{"location":"chapter7_engineering/#196","title":"196. \u5982\u4f55\u5b9e\u73b0\u84dd\u7eff/\u91d1\u4e1d\u96c0\u53d1\u5e03\u4e0e\u56de\u6eda\uff1f","text":"<p>\u7b54\uff1a \u53cc\u73af\u5883\u5207\u6362\u6216\u6309\u6bd4\u4f8b\u653e\u91cf\uff0c\u76d1\u63a7\u6307\u6807\u9000\u56de\u9608\u503c\u5373\u56de\u6eda\u3002</p>"},{"location":"chapter7_engineering/#197-api","title":"197. \u5982\u4f55\u8bbe\u8ba1\u5e42\u7b49 API\uff1f","text":"<p>\u7b54\uff1a \u5f15\u5165\u5e42\u7b49\u952e\uff0c\u670d\u52a1\u7aef\u4fdd\u6301\u53bb\u91cd\u8868\uff0c\u652f\u6301\u91cd\u8bd5\u4e0e\u8d85\u65f6\u5b89\u5168\u3002</p>"},{"location":"chapter7_engineering/#198","title":"198. \u5982\u4f55\u505a\u6279\u5904\u7406\u4e0e\u4f5c\u4e1a\u8c03\u5ea6\uff1f","text":"<p>\u7b54\uff1a \u8bbe\u8ba1\u4efb\u52a1\u8868\u4e0e\u72b6\u6001\u673a\uff0c\u5206\u7247\u3001\u91cd\u8bd5\u3001\u6b7b\u4fe1\u961f\u5217\u4e0e\u544a\u8b66\u3002</p>"},{"location":"chapter7_engineering/#199","title":"199. \u5982\u4f55\u5ea6\u91cf\u4e0e\u4f18\u5316\u51b7\u542f\u52a8\u65f6\u95f4\uff1f","text":"<p>\u7b54\uff1a \u9884\u70ed\u8fde\u63a5\u6c60\u3001\u61d2\u52a0\u8f7d\u3001\u51cf\u5c11\u52a8\u6001\u521d\u59cb\u5316\uff0c\u4f7f\u7528\u66f4\u5feb\u7684\u5206\u914d\u5668\u3002</p>"},{"location":"chapter7_engineering/#200","title":"200. \u5982\u4f55\u5efa\u7acb\u6545\u969c\u6f14\u7ec3\u4e0e\u6df7\u6c8c\u5de5\u7a0b\u673a\u5236\uff1f","text":"<p>\u7b54\uff1a \u5f15\u5165\u6545\u969c\u6ce8\u5165\u4e0e\u968f\u673a\u5ef6\u8fdf\uff0c\u9a8c\u8bc1\u7cfb\u7edf\u9c81\u68d2\u6027\u4e0e\u81ea\u52a8\u5316\u6062\u590d\u6d41\u7a0b\u3002</p>"}]}